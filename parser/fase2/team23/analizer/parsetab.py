
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftR_UNIONR_INTERSECTR_EXCEPTrightR_NOTleftR_ANDR_ORleftR_BETWEENR_ISleftS_IGUALOL_DISTINTODEOL_MAYORQUEOL_MENORQUEOL_MAYORIGUALQUEOL_MENORIGUALQUEleftOC_CONCATENARleftO_SUMAO_RESTAleftO_PRODUCTOO_DIVISIONO_MODULARrightUO_SUMAUO_RESTAleftO_EXPONENTECHARACTER COMMENT DECIMAL ID IDEspecial INTEGER OC_AND OC_CONCATENAR OC_NOT OC_OR OC_SHIFTL OC_SHIFTR OC_XOR OL_DISTINTODE OL_ESIGUAL OL_MAYORIGUALQUE OL_MAYORQUE OL_MENORIGUALQUE OL_MENORQUE O_DIVISION O_EXPONENTE O_MODULAR O_PRODUCTO O_RESTA O_SUMA R_ADD R_ALIAS R_ALL R_ALTER R_AND R_ANY R_AS R_ASC R_BEGIN R_BETWEEN R_BY R_CASE R_CHECK R_COLUMN R_CONCURRENTLY R_CONSTANT R_CONSTRAINT R_COUNT R_CREATE R_CURRENT_DATE R_CURRENT_TIME R_CURRENT_USER R_DATABASE R_DATABASES R_DATE_PART R_DAY R_DECLARE R_DEFAULT R_DELETE R_DESC R_DISTINCT R_DROP R_ELSE R_ELSIF R_END R_ENUM R_EXCEPT R_EXECUTE R_EXISTS R_EXTRACT R_FALSE R_FIRST R_FOR R_FOREIGN R_FROM R_FULL R_FUNCTION R_GROUP R_HASH R_HAVING R_HOUR R_IF R_IN R_INDEX R_INHERITS R_INNER R_INSERT R_INTERSECT R_INTERVAL R_INTO R_IS R_ISNULL R_JOIN R_KEY R_LANGUAGE R_LAST R_LEFT R_LIKE R_LIMIT R_MINUTE R_MODE R_MONTH R_NATURAL R_NOT R_NOTNULL R_NOW R_NULL R_NULLS R_OFFSET R_ON R_OR R_ORDER R_OUTER R_OWNER R_PRIMARY R_PROCEDURE R_PROM R_REFERENCES R_RENAME R_REPLACE R_RETURN R_RETURNS R_RIGHT R_SECOND R_SELECT R_SESSION_USER R_SET R_SHOW R_SOME R_SUM R_SYMMETRIC R_TABLE R_THEN R_TIMESTAMP R_TO R_TRUE R_TRUNCATE R_TYPE R_UNION R_UNIQUE R_UNKNOWN R_UPDATE R_USE R_USING R_VALUES R_WHEN R_WHERE R_YEAR STRING S_COMA S_DOLAR S_DOSPUNTOS S_IGUAL S_PARDER S_PARIZQ S_PUNTO S_PUNTOCOMA T_BIGINT T_BOOLEAN T_CHAR T_CHARACTER T_DATE T_DECIMAL T_DOUBLE T_INTEGER T_MONEY T_NUMERIC T_PRECISION T_REAL T_SMALLINT T_TEXT T_TIME T_VARCHAR T_VARYINGinit : stmtListstmtList : stmtList stmtstmtList : stmt\n    stmt : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt\n        | procedureStmt \n        | executePL S_PUNTOCOMA\n        | ifStmt R_END R_IF S_PUNTOCOMA\n        | asignacionStmt S_PUNTOCOMA\n    ifStmt : R_IF S_PARIZQ expresion S_PARDER R_THEN List_body  else_else_ : R_ELSE List_body\n           | Lista_elsif_\n           |\n    \n    Lista_elsif_ : Lista_elsif_ elsif_\n    \n    Lista_elsif_ : elsif_\n    elsif_ : R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body\n\n    \n    List_body : List_body body\n    \n    List_body : body\n    \n    body : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt S_PUNTOCOMA\n        | ifStmt R_END R_IF S_PUNTOCOMA\n        | expresion S_PUNTOCOMA\n    \n    idOrString : ID\n    | STRING\n    | CHARACTER\n    createStmt : R_CREATE createBody\n    createBody : createOpts\n    createOpts : unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereClunique_index : R_UNIQUE\n                    | using_hash_index : R_USING R_HASH\n                    | indexNullS : R_NULLS R_FIRST\n    | R_NULLS R_LAST\n    |\n    indexasc_desc : R_DESC\n    | R_ASC\n    |\n    createOpts : R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt \n    createOpts : orReplace R_DATABASE ifNotExists idOrString createOwner createMode\n    \n    orReplace : R_OR R_REPLACE\n    \n    orReplace :\n    \n    createOpts : R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER\n    \n    ifNotExists : R_IF R_NOT R_EXISTS\n    \n    ifNotExists :\n    \n    inheritsOpt : R_INHERITS S_PARIZQ ID S_PARDER\n    \n    inheritsOpt :\n    \n    createOwner : R_OWNER ID\n    | R_OWNER STRING\n    \n    createOwner :  R_OWNER S_IGUAL ID\n    | R_OWNER S_IGUAL STRING\n    \n    createOwner :\n    \n    createMode : R_MODE INTEGER\n    \n    createMode : R_MODE S_IGUAL INTEGER\n    \n    createMode :\n    createTableList : createTableList S_COMA createTablecreateTableList :  createTable\n    createTable :  ID types createColumns\n    \n    createTable : createConstraint\n    | createUnique\n    | createPrimary\n    | createForeign\n    \n    createColumns : colOptionsList\n    \n    createColumns :\n    createConstraint : constrName R_CHECK S_PARIZQ booleanCheck S_PARDERcreateUnique : R_UNIQUE S_PARIZQ idList S_PARDERcreatePrimary : R_PRIMARY R_KEY S_PARIZQ idList S_PARDER\n    createForeign : constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER\n    \n    constrName : R_CONSTRAINT ID\n    \n    constrName :\n    idList : idList S_COMA IDidList : ID\n    types :  ID\n    \n    types : T_SMALLINT\n    | T_INTEGER\n    | T_BIGINT\n    | T_REAL\n    | T_DOUBLE T_PRECISION\n    | T_MONEY\n    | T_TEXT\n    | T_BOOLEAN\n    | R_TIMESTAMP\n    | T_DATE\n    | T_TIME\n    \n    types : T_DECIMAL optParams\n    | T_NUMERIC optParams\n    | T_VARCHAR optParams\n    | T_CHARACTER optParams\n    | T_CHAR optParams\n    \n    types : T_CHARACTER T_VARYING optParams\n    \n    types : R_INTERVAL intervalFields\n    \n    intervalFields :  R_YEAR\n    | R_MONTH\n    | R_DAY\n    | R_HOUR\n    | R_MINUTE\n    | R_SECOND\n    \n    intervalFields :\n    optParams : S_PARIZQ literalList S_PARDERoptParams : colOptionsList : colOptionsList colOptionscolOptionsList : colOptions\n    colOptions : defaultVal\n    | nullOpt\n    | constraintOpt\n    | primaryOpt\n    | referencesOpt\n    defaultVal : R_DEFAULT literal\n    nullOpt : R_NOT R_NULL\n    \n    nullOpt : R_NULL\n    \n    constraintOpt : constrName R_UNIQUE\n    \n    constraintOpt : constrName R_CHECK S_PARIZQ booleanCheck S_PARDER\n    primaryOpt : R_PRIMARY R_KEYreferencesOpt : R_REFERENCES ID\n    expresion : datatype\n              | expBool\n    \n    expresion : S_PARIZQ selectStmt S_PARDER\n    \n    funcCall : ID S_PARIZQ paramsList S_PARDER\n    \n    funcCall : ID S_PARIZQ S_PARDER\n            | R_NOW S_PARIZQ S_PARDER\n    \n    funcCall : R_COUNT S_PARIZQ datatype S_PARDER\n            | R_COUNT S_PARIZQ O_PRODUCTO S_PARDER\n            | R_SUM S_PARIZQ datatype S_PARDER\n            | R_PROM S_PARIZQ datatype S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER\n    \n    timeStamp : R_TIMESTAMP STRING\n          | R_INTERVAL STRING\n    \n    optsExtract : R_YEAR\n                  | R_MONTH\n                  | R_DAY\n                  | R_HOUR\n                  | R_MINUTE\n                  | R_SECOND\n    \n    datePart : R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER\n    \n    dateSource : R_TIMESTAMP STRING\n          | T_DATE STRING\n          | T_TIME STRING\n          | R_INTERVAL STRING\n          | R_NOW S_PARIZQ S_PARDER\n    \n    current : R_CURRENT_DATE\n          | R_CURRENT_TIME\n    \n    current : timeStamp\n    literalList : literalList S_COMA literalliteralList : literal\n    literal :  INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    | R_NULL\n    paramsList : paramsList S_COMA datatypeparamsList : datatype\n    datatype : datatype O_SUMA datatype\n    | datatype O_RESTA datatype\n    | datatype O_PRODUCTO datatype\n    | datatype O_DIVISION datatype\n    | datatype O_EXPONENTE datatype\n    | datatype O_MODULAR datatype\n    \n    datatype : datatype OC_CONCATENAR datatype\n    \n    datatype : R_CASE caseList optElse R_END\n    \n    caseList : caseList caseWhen\n            | caseWhen\n    caseWhen : R_WHEN expBool R_THEN literaloptElse : R_ELSE literal\n    |\n    \n    datatype : O_RESTA datatype %prec UO_RESTA\n    | O_SUMA datatype %prec UO_SUMA\n    \n    datatype : columnName\n    | literal\n    | funcCall\n    | extract\n    | datePart\n    | current\n    \n    datatype : S_PARIZQ datatype S_PARDER\n    \n    expComp : datatype OL_MENORQUE datatype\n    | datatype OL_MAYORQUE datatype\n    | datatype OL_MAYORIGUALQUE datatype\n    | datatype OL_MENORIGUALQUE datatype\n    | datatype S_IGUAL datatype\n    | datatype OL_DISTINTODE datatype\n    \n    expComp : datatype R_IS R_DISTINCT R_FROM datatype\n    \n    expComp : datatype R_IS R_NOT R_DISTINCT R_FROM datatype\n    \n    expComp :  datatype R_BETWEEN datatype R_AND datatype\n    \n    expComp : datatype R_NOT R_BETWEEN datatype R_AND datatype\n    | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype\n    \n    expComp : datatype R_ISNULL\n    | datatype R_NOTNULL\n    \n    expComp : datatype R_IS R_NULL\n    | datatype R_IS R_TRUE\n    | datatype R_IS R_FALSE\n    | datatype R_IS R_UNKNOWN\n    \n    expComp : datatype R_IS R_NOT R_NULL\n    | datatype R_IS R_NOT R_TRUE\n    | datatype R_IS R_NOT R_FALSE\n    | datatype R_IS R_NOT R_UNKNOWN\n    \n    expSubq : datatype OL_MENORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_ESIGUAL  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | stringExp R_LIKE STRING\n    \n    stringExp : STRING\n          | columnName\n    \n    subqValues : R_ALL\n                  | R_ANY\n                  | R_SOME\n    \n    boolean : R_EXISTS S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : expComp\n            | expSubq\n    \n    expBool : expBool R_AND expBool\n            | expBool R_OR expBool\n    \n    expBool : R_NOT expBool\n    \n    expBool : S_PARIZQ expBool S_PARDER\n    \n    expBool : expBool optBoolPredicate\n    \n    expBool : boolean\n    \n    optBoolPredicate : R_IS R_TRUE\n    | R_IS R_FALSE\n    | R_IS R_UNKNOWN\n    \n    optBoolPredicate : R_IS R_NOT R_TRUE\n    | R_IS R_NOT R_FALSE\n    | R_IS R_NOT R_UNKNOWN\n    \n    columnName : ID\n    \n    columnName : ID S_PUNTO ID\n    \n    booleanCheck : idOrLiteral OL_MENORQUE idOrLiteral\n    | idOrLiteral OL_MAYORQUE idOrLiteral\n    | idOrLiteral OL_MAYORIGUALQUE idOrLiteral\n    | idOrLiteral OL_MENORIGUALQUE idOrLiteral\n    | idOrLiteral S_IGUAL idOrLiteral\n    | idOrLiteral OL_DISTINTODE idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral\n    \n    idOrLiteral : ID\n    | INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    alterStmt : R_ALTER R_DATABASE idOrString alterDb\n    | R_ALTER R_TABLE idOrString alterTableList\n    | R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList\n    col_op : R_COLUMN\n    |\n    alterDb : R_RENAME R_TO idOrString\n    | R_OWNER R_TO ownerOPts\n    \n    ownerOPts : idOrString\n    | R_CURRENT_USER\n    | R_SESSION_USER\n    \n    alterTableList : alterTableList S_COMA alterTable\n    \n    alterTableList : alterTable\n    \n    alterTable : R_ADD alterAdd\n    | R_ALTER alterAlter\n    | R_DROP alterDrop\n    | R_RENAME alterRename\n    \n    alterAdd : R_COLUMN ID types\n    \n    alterAdd : createConstraint\n    | createPrimary\n    | createForeign\n    \n    alterAdd : constrName R_UNIQUE S_PARIZQ ID S_PARDER\n    \n    alterAlter : R_COLUMN ID R_SET nullOpt\n    | R_COLUMN ID R_SET defaultVal\n    | R_COLUMN ID R_TYPE types\n    \n    alterDrop : R_CONSTRAINT ID\n    | R_COLUMN ID\n    \n    alterRename : R_COLUMN ID R_TO ID\n    \n    dropStmt : R_DROP R_TABLE ifExists idOrString\n    | R_DROP R_DATABASE ifExists idOrString\n    | R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER\n    | R_DROP R_INDEX concurrenly ifExists idOrString\n    ifExists : R_IF R_EXISTS\n    |\n    concurrenly : R_CONCURRENTLY\n    |\n    selectStmt : R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl limitClselectStmt : selectStmt R_UNION allOpt selectStmtselectStmt : selectStmt R_INTERSECT allOpt selectStmtselectStmt : selectStmt R_EXCEPT allOpt selectStmtselectStmt : S_PARIZQ selectStmt S_PARDER\n    fromCl : R_FROM tableExp\n    selectStmt : R_SELECT selectParamsallOpt : R_ALL\n    |\n    selectParams : O_PRODUCTOselectParams : selectListselectList : selectList S_COMA selectListParams optAliasselectList : selectListParams optAliasselectListParams : expresionselectListParams : ID S_PUNTO O_PRODUCTO\n    optAlias : R_AS idOrString\n    \n    optAlias : idOrString\n    optAlias : tableExp : tableExp S_COMA fromBody tableExp : fromBody fromBody : ID optAliasfromBody : S_PARIZQ selectStmt S_PARDER R_AS idOrStringjoinList : joinList2joinList2 : joinList2 joinCl\n    | joinCljoinCl : joinOpt R_JOIN columnName optAlias R_ON expBool\n    | joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER\n    | R_NATURAL joinOpt R_JOIN columnName optAlias\n    nameList : nameList S_COMA columnName\n    | columnName\n    joinOpt : R_INNER\n    | R_LEFT\n    | R_LEFT R_OUTER\n    | R_RIGHT\n    | R_RIGHT R_OUTER\n    | R_FULL\n    | R_FULL R_OUTER\n    whereCl : R_WHERE expBoolwhereCl : \n    groupByCl : R_GROUP R_BY groupList havingCl\n    \n    groupByCl :\n    \n    groupList :  groupList S_COMA columnName\n            | groupList S_COMA INTEGER\n    \n    groupList :  columnName\n              | INTEGER\n    havingCl : R_HAVING expBoolhavingCl :orderByCl : R_ORDER R_BY orderListorderByCl : orderList : orderList S_COMA orderByElemorderList : orderByElem\n    orderByElem : columnName orderOpts orderNull\n                | INTEGER orderOpts orderNull\n    orderOpts : R_ASC\n                 | R_DESC\n    orderOpts : orderNull : R_NULL R_FIRST\n                 | R_NULL R_LASTorderNull : limitCl : R_LIMIT INTEGER offsetLimit\n               | R_LIMIT R_ALL offsetLimit\n    limitCl :offsetLimit : R_OFFSET INTEGERoffsetLimit :insertStmt : R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDERparamsColumn : S_PARIZQ idList S_PARDERparamsColumn :updateStmt : R_UPDATE fromBody R_SET updateCols whereClupdateCols : updateCols S_COMA updateValsupdateCols : updateVals updateVals : ID S_IGUAL updateExpupdateExp : datatype\n    | R_DEFAULT\n    deleteStmt : R_DELETE fromCl whereCltruncateStmt : R_TRUNCATE tableOpt IDtableOpt : R_TABLE\n    |\n    showStmt : R_SHOW R_DATABASES likeOptlikeOpt : R_LIKE STRING\n    |\n    useStmt : R_USE IDfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunctionfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunctionbloqueFunction : declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEndparams_list : params_list S_COMA param_itemparams_list : param_itemparam_item : ID typesreturnsStmt : R_RETURNS typesreturnsStmt : declareStmt : R_DECLARE declaracion_listdeclareStmt : declaracion_list : declaracion_list declaracion_itemdeclaracion_list : declaracion_itemdeclaracion_item : ID constant_opt types null_opt default_item S_PUNTOCOMAdeclaracion_item : ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMAconstant_opt : R_CONSTANTconstant_opt : null_opt : R_NOT R_NULLnull_opt : default_opt : R_DEFAULT  \n                   | S_DOSPUNTOS S_IGUAL\n                   | S_IGUALdefault_item : default_opt expresiondefault_item : alias_declaracion : ID \n                         | IDEspecialbeginStmt : beginStmt beginItembeginStmt : beginItembeginItem : stmt\n                 | returnStmt S_PUNTOCOMA\n                 | asignacionStmt S_PUNTOCOMAreturnStmt : R_RETURN expresionlabelEnd : labelEnd : S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMAasignacionStmt : ID S_DOSPUNTOS S_IGUAL expresionasignacionStmt : ID S_IGUAL expresionprocedureStmt : R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedureprocedureStmt : R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedureendProcedure : endProcedure : R_END S_PUNTOCOMAdolarEndProcedure : dolarEndProcedure : S_DOLAR S_DOLARbeginWord : beginWord : R_BEGINlanguageProcedure : R_LANGUAGE IDlanguageProcedure : executePL : R_EXECUTE funcCallexecuteParams : executeParams S_COMA executeItemexecuteParams : executeItemexecuteItem : expresion'
    
_lr_action_items = {'R_CREATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,226,343,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[20,20,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,448,448,-27,-40,-26,448,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,448,-39,-397,-437,448,-396,20,-437,20,-438,448,20,-422,-423,20,20,-421,-424,-18,20,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_SHOW':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,226,343,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[21,21,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,21,21,-27,-40,-26,21,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,21,-39,-397,-437,21,-396,21,-437,21,-438,21,21,-422,-423,21,21,-421,-424,-18,21,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_ALTER':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,143,144,145,146,226,246,343,358,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[22,22,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-41,-42,-43,240,-17,372,22,240,22,-27,-40,-26,22,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,22,-39,-397,-437,22,-396,22,-437,22,-438,22,22,-422,-423,22,22,-421,-424,-18,22,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_DROP':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,143,144,145,146,226,343,358,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[23,23,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-41,-42,-43,244,-17,23,244,23,-27,-40,-26,23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,23,-39,-397,-437,23,-396,23,-437,23,-438,23,23,-422,-423,23,23,-421,-424,-18,23,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_INSERT':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,226,343,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[25,25,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,25,25,-27,-40,-26,25,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,25,-39,-397,-437,25,-396,25,-437,25,-438,25,25,-422,-423,25,25,-421,-424,-18,25,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_UPDATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,226,343,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[27,27,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,27,27,-27,-40,-26,27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,27,-39,-397,-437,27,-396,27,-437,27,-438,27,27,-422,-423,27,27,-421,-424,-18,27,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_DELETE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,226,343,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[28,28,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,28,28,-27,-40,-26,28,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,28,-39,-397,-437,28,-396,28,-437,28,-438,28,28,-422,-423,28,28,-421,-424,-18,28,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_TRUNCATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,226,343,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[29,29,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,29,29,-27,-40,-26,29,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,29,-39,-397,-437,29,-396,29,-437,29,-438,29,29,-422,-423,29,29,-421,-424,-18,29,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_USE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,226,343,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[30,30,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,30,30,-27,-40,-26,30,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,30,-39,-397,-437,30,-396,30,-437,30,-438,30,30,-422,-423,30,30,-421,-424,-18,30,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_SELECT':([0,2,3,14,15,24,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,74,89,125,126,127,128,198,219,226,286,343,397,399,400,401,402,403,416,417,418,432,434,435,537,538,539,540,556,558,559,563,564,565,566,567,568,569,570,571,572,573,641,642,643,644,663,732,742,746,789,791,797,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[31,31,-3,-14,-15,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-323,-323,-323,-16,-18,31,31,31,-322,31,31,31,31,-17,31,31,31,31,31,31,31,31,31,31,31,31,31,-27,31,31,31,31,-40,-26,31,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,31,31,31,31,31,31,31,-39,31,31,31,-397,-437,31,-396,31,-437,31,-438,31,31,-422,-423,31,31,-421,-424,-18,31,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'S_PARIZQ':([0,2,3,14,15,18,24,27,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,71,74,76,80,86,89,90,91,99,108,109,110,111,112,114,117,124,125,126,127,128,131,132,143,144,145,155,156,164,170,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,219,226,230,233,250,261,286,287,288,290,291,292,293,295,297,299,302,310,311,312,313,343,375,380,395,397,399,400,401,402,403,404,410,411,412,413,414,416,417,418,432,434,435,462,463,464,465,466,476,485,486,495,496,498,506,525,532,533,534,535,536,537,538,539,540,542,554,556,558,559,562,563,564,565,566,567,568,569,570,571,572,573,582,603,609,615,639,641,642,643,644,649,663,665,680,682,726,728,729,731,732,733,742,743,746,760,789,791,797,801,805,832,833,834,838,839,840,855,856,857,858,861,866,867,874,877,878,879,883,884,889,895,897,898,900,903,904,906,909,910,915,918,],[24,24,-3,-14,-15,49,24,74,89,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-323,-323,-323,-16,89,-18,89,24,74,89,173,198,204,204,211,213,214,215,216,217,218,219,173,24,-322,24,24,173,229,-41,-42,-43,253,89,211,89,204,204,204,204,204,204,204,204,286,204,204,204,204,204,204,204,211,211,198,204,211,211,204,204,204,24,-17,348,351,373,74,24,397,204,399,-240,-241,-242,400,401,402,403,204,416,417,418,432,506,204,204,24,24,24,24,24,24,204,537,538,539,540,204,24,24,24,198,432,-27,578,578,578,578,578,-50,608,609,613,614,616,204,204,204,641,642,643,644,24,24,24,24,204,661,-40,-26,432,665,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,578,679,204,713,732,24,24,24,24,742,432,89,-49,755,211,211,788,789,24,791,24,797,-39,810,24,24,24,-397,-437,432,-396,24,-437,24,-438,432,24,-422,-423,89,24,24,888,-421,-424,-18,24,-435,-427,-435,-432,-434,-398,89,-414,-416,-431,-436,-415,-428,]),'R_EXECUTE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,226,801,805,833,834,838,839,840,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[32,32,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,-397,-437,-396,32,-437,32,-438,32,-422,-423,32,32,-421,-424,-18,32,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'R_IF':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,48,50,57,58,63,64,65,66,67,134,152,153,226,343,434,435,556,558,559,563,564,565,566,567,568,569,570,571,572,573,574,663,746,801,805,832,833,834,838,839,840,855,856,857,858,866,867,877,878,879,883,884,889,895,897,898,900,909,910,918,],[18,18,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,129,-18,138,138,148,148,148,148,-311,138,148,-310,-17,18,18,-27,-40,-26,18,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,666,18,-39,-397,-437,18,-396,18,-437,18,-438,18,18,-422,-423,18,18,-421,-424,-18,18,-435,-427,-435,-432,-434,-398,-431,-436,-428,]),'ID':([0,2,3,14,15,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,49,50,52,57,58,61,62,63,64,65,66,67,69,71,73,76,77,78,80,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,115,116,118,119,131,133,134,136,137,139,147,149,150,151,152,153,156,158,160,164,170,172,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,191,192,194,195,196,198,202,203,204,205,206,209,210,211,214,215,216,220,221,226,228,229,231,247,251,253,261,273,274,275,277,279,280,281,282,283,284,285,288,289,294,296,298,300,301,305,306,307,308,310,314,315,316,317,318,320,321,322,328,342,343,344,348,350,351,352,354,355,357,360,366,368,369,371,372,379,380,381,388,394,395,404,406,407,408,409,414,419,420,421,422,425,426,427,428,429,431,432,434,435,469,471,475,479,494,503,504,506,508,517,519,520,521,523,525,531,532,541,542,556,558,559,563,564,565,566,567,568,569,570,571,572,573,597,602,606,608,609,611,613,614,616,617,624,631,632,633,634,635,636,637,638,640,650,651,652,653,654,655,656,663,665,679,697,713,725,726,728,738,739,740,741,746,755,767,768,769,770,771,772,779,788,792,793,794,795,801,803,805,810,828,830,832,833,834,835,836,837,838,839,840,845,847,851,852,853,854,855,856,857,858,861,862,863,865,866,867,873,877,878,879,882,883,884,888,889,895,897,898,900,903,904,906,908,909,910,913,915,916,918,],[26,26,-3,-14,-15,73,-391,79,86,124,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,131,-18,132,-63,-63,143,143,-309,-309,-309,-309,-311,155,131,143,73,167,-390,86,143,-328,-260,-133,-134,131,131,131,-188,-189,-190,-191,-192,-193,131,-253,-164,-165,-166,-167,-168,-169,-170,-161,-159,-160,-246,-247,-260,230,-63,232,143,235,143,143,143,143,-309,-310,131,257,143,131,86,274,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-206,-207,131,131,-252,131,-187,-188,131,-165,-186,131,-250,131,131,131,131,-145,-146,-17,274,344,143,-308,143,377,73,143,-261,-329,-137,-173,-174,-175,-176,-177,-178,-179,131,-195,-196,-197,-198,-199,-200,-208,-209,-210,-211,131,-248,-249,-254,-255,-256,-135,-194,-251,-138,-237,131,449,344,476,479,-62,143,143,492,494,499,500,501,502,-281,257,131,143,520,-136,131,131,-212,-213,-214,-215,131,-257,-258,-259,-180,-139,-140,-141,-142,520,-243,131,131,-27,344,449,600,449,449,377,-280,131,620,520,143,-260,520,-244,131,-201,131,-203,131,-40,-26,131,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,674,677,479,377,131,449,703,706,377,715,520,143,-245,-204,-216,-217,-218,-219,-221,-202,-205,-229,-230,-220,-143,-144,-153,131,131,377,762,377,520,131,131,-227,-231,-233,-235,-39,809,706,706,706,706,706,706,520,520,-228,-232,-234,-236,-397,837,-437,706,-225,-222,131,-396,26,837,-407,-411,-437,26,-438,706,874,520,-223,-226,-224,131,26,-422,-423,131,-406,449,-410,26,26,706,-421,-424,-18,892,26,-435,377,-427,-435,-432,-434,-398,131,-414,-416,-409,-431,-436,-408,-415,917,-428,]),'$endspecial':([882,],[894,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'stmtList':([0,],[2,]),'stmt':([0,2,834,839,856,866,867,883,],[3,33,858,858,858,858,858,858,]),'createStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[4,4,436,436,436,436,436,4,4,436,4,4,4,4,]),'showStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[5,5,437,437,437,437,437,5,5,437,5,5,5,5,]),'alterStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[6,6,438,438,438,438,438,6,6,438,6,6,6,6,]),'dropStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[7,7,439,439,439,439,439,7,7,439,7,7,7,7,]),'insertStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[8,8,440,440,440,440,440,8,8,440,8,8,8,8,]),'updateStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[9,9,441,441,441,441,441,9,9,441,9,9,9,9,]),'deleteStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[10,10,442,442,442,442,442,10,10,442,10,10,10,10,]),'truncateStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[11,11,443,443,443,443,443,11,11,443,11,11,11,11,]),'useStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[12,12,444,444,444,444,444,12,12,444,12,12,12,12,]),'selectStmt':([0,2,24,74,89,125,127,128,198,219,286,343,397,399,400,401,402,403,416,417,418,432,434,537,538,539,540,559,641,642,643,644,663,732,742,789,791,797,832,834,839,855,856,866,867,883,],[13,13,68,162,199,223,224,225,68,341,396,445,524,526,527,528,529,530,543,544,545,555,445,645,646,647,648,445,734,735,736,737,445,790,796,827,829,831,445,13,13,445,13,13,13,13,]),'functionStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[14,14,446,446,446,446,446,14,14,446,14,14,14,14,]),'procedureStmt':([0,2,834,839,856,866,867,883,],[15,15,15,15,15,15,15,15,]),'executePL':([0,2,834,839,856,866,867,883,],[16,16,16,16,16,16,16,16,]),'ifStmt':([0,2,343,434,559,663,832,834,839,855,856,866,867,883,],[17,17,447,447,447,447,447,17,17,447,17,17,17,17,]),'asignacionStmt':([0,2,834,839,856,866,867,883,],[19,19,860,860,860,860,860,860,]),'createBody':([20,448,],[51,51,]),'orReplace':([20,448,],[53,575,]),'createOpts':([20,448,],[54,54,]),'unique_index':([20,448,],[56,56,]),'fromBody':([27,76,261,],[72,166,382,]),'fromCl':([28,81,168,],[75,169,262,]),'tableOpt':([29,],[77,]),'selectParams':([31,80,],[81,168,]),'selectList':([31,80,],[83,83,]),'selectListParams':([31,80,170,],[84,84,273,]),'expresion':([31,49,71,80,156,170,343,434,559,663,665,832,855,861,903,],[85,130,157,85,254,85,433,433,433,433,745,433,433,880,914,]),'datatype':([31,49,71,80,89,90,91,99,156,164,170,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,288,310,343,380,395,404,414,432,434,506,525,532,542,559,609,663,665,726,728,832,855,861,903,],[87,87,87,87,200,202,206,212,87,212,87,278,279,280,281,282,283,284,285,289,294,296,298,300,301,309,212,212,200,323,212,200,329,331,332,398,415,87,511,522,531,541,200,87,278,633,640,650,87,278,87,87,212,212,87,87,87,87,]),'expBool':([31,49,71,80,89,99,156,164,170,194,195,198,209,211,343,432,434,559,663,665,726,728,832,855,861,903,],[88,88,88,88,201,210,88,260,88,314,315,201,327,201,88,201,88,88,88,88,786,787,88,88,88,88,]),'columnName':([31,49,71,80,89,90,91,99,156,164,170,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,288,310,343,380,388,395,404,414,429,432,434,506,517,521,525,532,542,559,609,624,663,665,725,726,728,779,788,832,851,855,861,903,],[93,93,93,93,93,203,203,93,93,93,93,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,93,93,93,203,93,93,203,203,203,203,203,93,203,519,203,203,203,548,93,93,203,626,631,203,203,203,93,203,722,93,93,784,93,93,722,825,93,875,93,93,93,]),'literal':([31,49,71,80,89,90,91,99,156,164,170,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,288,310,326,343,380,395,404,414,424,432,434,506,525,532,542,559,578,609,663,665,692,726,728,748,832,855,861,903,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,423,94,94,94,94,94,546,94,94,94,94,94,94,94,668,94,94,94,757,94,94,799,94,94,94,94,]),'funcCall':([31,32,49,71,80,89,90,91,99,156,164,170,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,288,310,343,380,395,404,414,432,434,506,525,532,542,559,609,663,665,726,728,832,855,861,903,],[95,123,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'extract':([31,49,71,80,89,90,91,99,156,164,170,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,288,310,343,380,395,404,414,432,434,506,525,532,542,559,609,663,665,726,728,832,855,861,903,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'datePart':([31,49,71,80,89,90,91,99,156,164,170,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,288,310,343,380,395,404,414,432,434,506,525,532,542,559,609,663,665,726,728,832,855,861,903,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'current':([31,49,71,80,89,90,91,99,156,164,170,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,288,310,343,380,395,404,414,432,434,506,525,532,542,559,609,663,665,726,728,832,855,861,903,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'boolean':([31,49,71,80,89,99,156,164,170,194,195,198,209,211,343,432,434,559,663,665,726,728,832,855,861,903,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'timeStamp':([31,49,71,80,89,90,91,99,156,164,170,173,174,175,176,177,178,179,180,183,184,185,186,187,188,190,194,195,198,204,209,211,214,215,216,288,310,343,380,395,404,414,429,432,434,506,525,532,542,559,609,663,665,726,728,832,855,861,903,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,547,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'expComp':([31,49,71,80,89,99,156,164,170,194,195,198,209,211,343,432,434,559,663,665,726,728,832,855,861,903,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'expSubq':([31,49,71,80,89,99,156,164,170,194,195,198,209,211,343,432,434,559,663,665,726,728,832,855,861,903,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'stringExp':([31,49,71,80,89,99,156,164,170,194,195,198,209,211,343,432,434,559,663,665,726,728,832,855,861,903,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'allOpt':([44,45,46,],[125,127,128,]),'ifNotExists':([57,58,134,],[137,139,231,]),'likeOpt':([60,],[140,]),'idOrString':([61,62,73,84,137,147,149,150,151,160,231,251,273,354,355,381,519,631,],[142,146,161,161,233,246,248,249,250,258,349,374,161,487,489,513,161,161,]),'ifExists':([63,64,65,66,152,],[147,149,150,151,251,]),'concurrenly':([67,],[152,]),'optAlias':([73,84,273,519,631,],[159,171,393,630,730,]),'whereCl':([75,169,255,262,264,868,],[163,263,378,383,386,886,]),'tableExp':([76,],[165,]),'optBoolPredicate':([88,201,210,260,314,315,327,786,787,],[196,196,196,196,196,196,196,196,196,]),'caseList':([92,],[207,]),'caseWhen':([92,207,],[208,325,]),'alterDb':([142,],[237,]),'alterTableList':([146,],[241,]),'alterTable':([146,358,],[242,493,]),'paramsColumn':([155,],[252,]),'updateCols':([158,],[255,]),'updateVals':([158,379,],[256,509,]),'joinList':([169,],[264,]),'joinList2':([169,],[265,]),'joinCl':([169,265,],[266,387,]),'joinOpt':([169,265,268,],[267,267,389,]),'paramsList':([173,506,609,],[276,619,699,]),'subqValues':([183,184,185,186,188,191,192,193,305,306,307,308,406,407,408,409,531,541,633,640,650,],[290,295,297,299,302,311,312,313,410,411,412,413,533,534,535,536,639,649,731,733,743,]),'optElse':([207,],[324,]),'optsExtract':([217,],[333,]),'params_list':([229,348,],[345,472,]),'param_item':([229,348,469,],[347,347,592,]),'alterAlter':([240,],[356,]),'alterAdd':([243,],[359,]),'createConstraint':([243,351,606,],[361,480,480,]),'createPrimary':([243,351,606,],[362,482,482,]),'createForeign':([243,351,606,],[363,483,483,]),'constrName':([243,351,606,607,685,],[364,484,484,695,695,]),'alterDrop':([244,],[367,]),'alterRename':([245,],[370,]),'idList':([253,503,608,616,679,713,888,],[376,618,698,714,754,774,899,]),'groupByCl':([263,383,386,],[384,514,518,]),'List_body':([343,559,832,],[434,663,855,]),'body':([343,434,559,663,832,855,],[435,558,435,558,435,558,]),'types':([344,471,479,494,611,863,],[450,594,607,612,702,881,]),'returnsStmt':([346,468,],[470,591,]),'createOwner':([349,],[474,]),'createTableList':([351,],[477,]),'createTable':([351,606,],[478,683,]),'createUnique':([351,606,],[481,481,]),'ownerOPts':([355,],[488,]),'col_op':([372,],[503,]),'updateExp':([380,],[510,]),'orderByCl':([384,514,518,],[515,621,628,]),'dateSource':([430,],[549,]),'else_':([434,],[557,]),'Lista_elsif_':([434,],[560,]),'elsif_':([434,560,],[561,664,]),'optParams':([462,463,464,465,466,582,],[577,579,580,581,583,669,]),'intervalFields':([467,],[584,]),'languageProcedure':([473,595,],[596,672,]),'createMode':([474,],[598,]),'using_hash_index':([476,],[603,]),'limitCl':([515,518,621,628,],[622,629,717,727,]),'groupList':([517,],[625,]),'literalList':([578,],[667,]),'inheritsOpt':([605,],[681,]),'createColumns':([607,],[684,]),'colOptionsList':([607,],[685,]),'colOptions':([607,685,],[686,756,]),'defaultVal':([607,610,685,],[687,701,687,]),'nullOpt':([607,610,685,],[688,700,688,]),'constraintOpt':([607,685,],[689,689,]),'primaryOpt':([607,685,],[690,690,]),'referencesOpt':([607,685,],[691,691,]),'booleanCheck':([614,810,],[704,844,]),'idOrLiteral':([614,767,768,769,770,771,772,810,845,873,],[705,811,812,813,814,815,816,705,872,887,]),'orderList':([624,],[720,]),'orderByElem':([624,779,],[721,821,]),'havingCl':([625,],[724,]),'offsetLimit':([718,719,],[776,778,]),'orderOpts':([722,723,],[780,783,]),'bloqueFunction':([750,800,],[801,833,]),'declareStmt':([750,800,],[802,802,]),'indexasc_desc':([754,],[806,]),'orderNull':([780,783,],[822,824,]),'nameList':([788,],[826,]),'declaracion_list':([803,],[835,]),'declaracion_item':([803,835,],[836,862,]),'beginWord':([805,838,],[839,866,]),'indexNullS':([806,],[841,]),'beginStmt':([834,839,866,],[856,867,883,]),'beginItem':([834,839,856,866,867,883,],[857,857,877,857,877,877,]),'returnStmt':([834,839,856,866,867,883,],[859,859,859,859,859,859,]),'constant_opt':([837,],[863,]),'endProcedure':([867,883,],[884,895,]),'null_opt':([881,],[890,]),'alias_declaracion':([882,],[893,]),'dolarEndProcedure':([884,895,],[897,909,]),'labelEnd':([889,],[900,]),'default_item':([890,],[902,]),'default_opt':([890,],[903,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> stmtList','init',1,'p_init','grammar.py',54),
  ('stmtList -> stmtList stmt','stmtList',2,'p_stmt_list','grammar.py',62),
  ('stmtList -> stmt','stmtList',1,'p_stmt_u','grammar.py',69),
  ('stmt -> createStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',76),
  ('stmt -> showStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',77),
  ('stmt -> alterStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',78),
  ('stmt -> dropStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',79),
  ('stmt -> insertStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',80),
  ('stmt -> updateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',81),
  ('stmt -> deleteStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',82),
  ('stmt -> truncateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',83),
  ('stmt -> useStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',84),
  ('stmt -> selectStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',85),
  ('stmt -> functionStmt','stmt',1,'p_stmt','grammar.py',86),
  ('stmt -> procedureStmt','stmt',1,'p_stmt','grammar.py',87),
  ('stmt -> executePL S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',88),
  ('stmt -> ifStmt R_END R_IF S_PUNTOCOMA','stmt',4,'p_stmt','grammar.py',89),
  ('stmt -> asignacionStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',90),
  ('ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_','ifStmt',7,'p_ifStmt','grammar.py',102),
  ('else_ -> R_ELSE List_body','else_',2,'p_els_','grammar.py',108),
  ('else_ -> Lista_elsif_','else_',1,'p_els_','grammar.py',109),
  ('else_ -> <empty>','else_',0,'p_els_','grammar.py',110),
  ('Lista_elsif_ -> Lista_elsif_ elsif_','Lista_elsif_',2,'p_Lista_elsif_','grammar.py',124),
  ('Lista_elsif_ -> elsif_','Lista_elsif_',1,'p_aux_Lista_elsif_','grammar.py',132),
  ('elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body','elsif_',6,'p_elsif_','grammar.py',138),
  ('List_body -> List_body body','List_body',2,'p_lista_cuerpo','grammar.py',151),
  ('List_body -> body','List_body',1,'p_aux_lista_cuerpo','grammar.py',159),
  ('body -> createStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',166),
  ('body -> showStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',167),
  ('body -> alterStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',168),
  ('body -> dropStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',169),
  ('body -> insertStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',170),
  ('body -> updateStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',171),
  ('body -> deleteStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',172),
  ('body -> truncateStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',173),
  ('body -> useStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',174),
  ('body -> selectStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',175),
  ('body -> functionStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',176),
  ('body -> ifStmt R_END R_IF S_PUNTOCOMA','body',4,'p_body','grammar.py',177),
  ('body -> expresion S_PUNTOCOMA','body',2,'p_body','grammar.py',178),
  ('idOrString -> ID','idOrString',1,'p_id_string','grammar.py',192),
  ('idOrString -> STRING','idOrString',1,'p_id_string','grammar.py',193),
  ('idOrString -> CHARACTER','idOrString',1,'p_id_string','grammar.py',194),
  ('createStmt -> R_CREATE createBody','createStmt',2,'p_createstmt','grammar.py',201),
  ('createBody -> createOpts','createBody',1,'p_createbody','grammar.py',208),
  ('createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl','createOpts',12,'p_createopts_index','grammar.py',215),
  ('unique_index -> R_UNIQUE','unique_index',1,'p_unique_index','grammar.py',221),
  ('unique_index -> <empty>','unique_index',0,'p_unique_index','grammar.py',222),
  ('using_hash_index -> R_USING R_HASH','using_hash_index',2,'p_using_hash_index','grammar.py',232),
  ('using_hash_index -> <empty>','using_hash_index',0,'p_using_hash_index','grammar.py',233),
  ('indexNullS -> R_NULLS R_FIRST','indexNullS',2,'p_orderNullS','grammar.py',243),
  ('indexNullS -> R_NULLS R_LAST','indexNullS',2,'p_orderNullS','grammar.py',244),
  ('indexNullS -> <empty>','indexNullS',0,'p_orderNullS','grammar.py',245),
  ('indexasc_desc -> R_DESC','indexasc_desc',1,'p_indexasc_desc','grammar.py',257),
  ('indexasc_desc -> R_ASC','indexasc_desc',1,'p_indexasc_desc','grammar.py',258),
  ('indexasc_desc -> <empty>','indexasc_desc',0,'p_indexasc_desc','grammar.py',259),
  ('createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt','createOpts',7,'p_createopts_table','grammar.py',276),
  ('createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode','createOpts',6,'p_createopts_db','grammar.py',283),
  ('orReplace -> R_OR R_REPLACE','orReplace',2,'p_replace_true','grammar.py',291),
  ('orReplace -> <empty>','orReplace',0,'p_replace_false','grammar.py',299),
  ('createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER','createOpts',8,'p_createopts_type','grammar.py',307),
  ('ifNotExists -> R_IF R_NOT R_EXISTS','ifNotExists',3,'p_ifnotexists_true','grammar.py',315),
  ('ifNotExists -> <empty>','ifNotExists',0,'p_ifnotexists_false','grammar.py',323),
  ('inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER','inheritsOpt',4,'p_inheritsOpt','grammar.py',331),
  ('inheritsOpt -> <empty>','inheritsOpt',0,'p_inheritsOpt_none','grammar.py',339),
  ('createOwner -> R_OWNER ID','createOwner',2,'p_createowner','grammar.py',347),
  ('createOwner -> R_OWNER STRING','createOwner',2,'p_createowner','grammar.py',348),
  ('createOwner -> R_OWNER S_IGUAL ID','createOwner',3,'p_createowner_asg','grammar.py',356),
  ('createOwner -> R_OWNER S_IGUAL STRING','createOwner',3,'p_createowner_asg','grammar.py',357),
  ('createOwner -> <empty>','createOwner',0,'p_createowner_none','grammar.py',365),
  ('createMode -> R_MODE INTEGER','createMode',2,'p_createmode','grammar.py',373),
  ('createMode -> R_MODE S_IGUAL INTEGER','createMode',3,'p_createMode_asg','grammar.py',381),
  ('createMode -> <empty>','createMode',0,'p_createmode_none','grammar.py',389),
  ('createTableList -> createTableList S_COMA createTable','createTableList',3,'p_createtable_list','grammar.py',396),
  ('createTableList -> createTable','createTableList',1,'p_createtable_u','grammar.py',403),
  ('createTable -> ID types createColumns','createTable',3,'p_createTable_id','grammar.py',410),
  ('createTable -> createConstraint','createTable',1,'p_createTable','grammar.py',418),
  ('createTable -> createUnique','createTable',1,'p_createTable','grammar.py',419),
  ('createTable -> createPrimary','createTable',1,'p_createTable','grammar.py',420),
  ('createTable -> createForeign','createTable',1,'p_createTable','grammar.py',421),
  ('createColumns -> colOptionsList','createColumns',1,'p_createColumNs','grammar.py',429),
  ('createColumns -> <empty>','createColumns',0,'p_createColumNs_none','grammar.py',437),
  ('createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','createConstraint',5,'p_createConstraint','grammar.py',444),
  ('createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER','createUnique',4,'p_createUnique','grammar.py',450),
  ('createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER','createPrimary',5,'p_createPrimary','grammar.py',456),
  ('createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER','createForeign',11,'p_createForeign','grammar.py',463),
  ('constrName -> R_CONSTRAINT ID','constrName',2,'p_constrName','grammar.py',471),
  ('constrName -> <empty>','constrName',0,'p_constrName_none','grammar.py',479),
  ('idList -> idList S_COMA ID','idList',3,'p_id_list','grammar.py',486),
  ('idList -> ID','idList',1,'p_id_u','grammar.py',493),
  ('types -> ID','types',1,'p_types','grammar.py',500),
  ('types -> T_SMALLINT','types',1,'p_types_simple','grammar.py',508),
  ('types -> T_INTEGER','types',1,'p_types_simple','grammar.py',509),
  ('types -> T_BIGINT','types',1,'p_types_simple','grammar.py',510),
  ('types -> T_REAL','types',1,'p_types_simple','grammar.py',511),
  ('types -> T_DOUBLE T_PRECISION','types',2,'p_types_simple','grammar.py',512),
  ('types -> T_MONEY','types',1,'p_types_simple','grammar.py',513),
  ('types -> T_TEXT','types',1,'p_types_simple','grammar.py',514),
  ('types -> T_BOOLEAN','types',1,'p_types_simple','grammar.py',515),
  ('types -> R_TIMESTAMP','types',1,'p_types_simple','grammar.py',516),
  ('types -> T_DATE','types',1,'p_types_simple','grammar.py',517),
  ('types -> T_TIME','types',1,'p_types_simple','grammar.py',518),
  ('types -> T_DECIMAL optParams','types',2,'p_types_params','grammar.py',527),
  ('types -> T_NUMERIC optParams','types',2,'p_types_params','grammar.py',528),
  ('types -> T_VARCHAR optParams','types',2,'p_types_params','grammar.py',529),
  ('types -> T_CHARACTER optParams','types',2,'p_types_params','grammar.py',530),
  ('types -> T_CHAR optParams','types',2,'p_types_params','grammar.py',531),
  ('types -> T_CHARACTER T_VARYING optParams','types',3,'p_types_var','grammar.py',540),
  ('types -> R_INTERVAL intervalFields','types',2,'p_timeType_interval','grammar.py',548),
  ('intervalFields -> R_YEAR','intervalFields',1,'p_intervalFields','grammar.py',556),
  ('intervalFields -> R_MONTH','intervalFields',1,'p_intervalFields','grammar.py',557),
  ('intervalFields -> R_DAY','intervalFields',1,'p_intervalFields','grammar.py',558),
  ('intervalFields -> R_HOUR','intervalFields',1,'p_intervalFields','grammar.py',559),
  ('intervalFields -> R_MINUTE','intervalFields',1,'p_intervalFields','grammar.py',560),
  ('intervalFields -> R_SECOND','intervalFields',1,'p_intervalFields','grammar.py',561),
  ('intervalFields -> <empty>','intervalFields',0,'p_intervalFields_none','grammar.py',569),
  ('optParams -> S_PARIZQ literalList S_PARDER','optParams',3,'p_optParams','grammar.py',576),
  ('optParams -> <empty>','optParams',0,'p_optParams_none','grammar.py',582),
  ('colOptionsList -> colOptionsList colOptions','colOptionsList',2,'p_colOptions_list','grammar.py',588),
  ('colOptionsList -> colOptions','colOptionsList',1,'p_colOptions_u','grammar.py',595),
  ('colOptions -> defaultVal','colOptions',1,'p_colOptions','grammar.py',602),
  ('colOptions -> nullOpt','colOptions',1,'p_colOptions','grammar.py',603),
  ('colOptions -> constraintOpt','colOptions',1,'p_colOptions','grammar.py',604),
  ('colOptions -> primaryOpt','colOptions',1,'p_colOptions','grammar.py',605),
  ('colOptions -> referencesOpt','colOptions',1,'p_colOptions','grammar.py',606),
  ('defaultVal -> R_DEFAULT literal','defaultVal',2,'p_defaultVal','grammar.py',614),
  ('nullOpt -> R_NOT R_NULL','nullOpt',2,'p_nullOpt_true','grammar.py',621),
  ('nullOpt -> R_NULL','nullOpt',1,'p_nullOpt_false','grammar.py',629),
  ('constraintOpt -> constrName R_UNIQUE','constraintOpt',2,'p_constraintOpt_unique','grammar.py',640),
  ('constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','constraintOpt',5,'p_constraintOpt_check','grammar.py',648),
  ('primaryOpt -> R_PRIMARY R_KEY','primaryOpt',2,'p_primaryOpt','grammar.py',655),
  ('referencesOpt -> R_REFERENCES ID','referencesOpt',2,'p_referencesOpt','grammar.py',661),
  ('expresion -> datatype','expresion',1,'p_expresion','grammar.py',672),
  ('expresion -> expBool','expresion',1,'p_expresion','grammar.py',673),
  ('expresion -> S_PARIZQ selectStmt S_PARDER','expresion',3,'p_expresion_','grammar.py',681),
  ('funcCall -> ID S_PARIZQ paramsList S_PARDER','funcCall',4,'p_funcCall_1','grammar.py',689),
  ('funcCall -> ID S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',697),
  ('funcCall -> R_NOW S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',698),
  ('funcCall -> R_COUNT S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',706),
  ('funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',707),
  ('funcCall -> R_SUM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',708),
  ('funcCall -> R_PROM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',709),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER','extract',6,'p_extract_1','grammar.py',719),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER','extract',6,'p_extract_2','grammar.py',730),
  ('timeStamp -> R_TIMESTAMP STRING','timeStamp',2,'p_timeStamp','grammar.py',740),
  ('timeStamp -> R_INTERVAL STRING','timeStamp',2,'p_timeStamp','grammar.py',741),
  ('optsExtract -> R_YEAR','optsExtract',1,'p_optsExtract','grammar.py',749),
  ('optsExtract -> R_MONTH','optsExtract',1,'p_optsExtract','grammar.py',750),
  ('optsExtract -> R_DAY','optsExtract',1,'p_optsExtract','grammar.py',751),
  ('optsExtract -> R_HOUR','optsExtract',1,'p_optsExtract','grammar.py',752),
  ('optsExtract -> R_MINUTE','optsExtract',1,'p_optsExtract','grammar.py',753),
  ('optsExtract -> R_SECOND','optsExtract',1,'p_optsExtract','grammar.py',754),
  ('datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER','datePart',6,'p_datePart','grammar.py',762),
  ('dateSource -> R_TIMESTAMP STRING','dateSource',2,'p_dateSource','grammar.py',772),
  ('dateSource -> T_DATE STRING','dateSource',2,'p_dateSource','grammar.py',773),
  ('dateSource -> T_TIME STRING','dateSource',2,'p_dateSource','grammar.py',774),
  ('dateSource -> R_INTERVAL STRING','dateSource',2,'p_dateSource','grammar.py',775),
  ('dateSource -> R_NOW S_PARIZQ S_PARDER','dateSource',3,'p_dateSource','grammar.py',776),
  ('current -> R_CURRENT_DATE','current',1,'p_current','grammar.py',784),
  ('current -> R_CURRENT_TIME','current',1,'p_current','grammar.py',785),
  ('current -> timeStamp','current',1,'p_current_1','grammar.py',794),
  ('literalList -> literalList S_COMA literal','literalList',3,'p_literal_list','grammar.py',801),
  ('literalList -> literal','literalList',1,'p_literal_u','grammar.py',808),
  ('literal -> INTEGER','literal',1,'p_literal','grammar.py',815),
  ('literal -> STRING','literal',1,'p_literal','grammar.py',816),
  ('literal -> DECIMAL','literal',1,'p_literal','grammar.py',817),
  ('literal -> CHARACTER','literal',1,'p_literal','grammar.py',818),
  ('literal -> R_TRUE','literal',1,'p_literal','grammar.py',819),
  ('literal -> R_FALSE','literal',1,'p_literal','grammar.py',820),
  ('literal -> R_NULL','literal',1,'p_literal','grammar.py',821),
  ('paramsList -> paramsList S_COMA datatype','paramsList',3,'p_params_list','grammar.py',840),
  ('paramsList -> datatype','paramsList',1,'p_params_u','grammar.py',847),
  ('datatype -> datatype O_SUMA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',854),
  ('datatype -> datatype O_RESTA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',855),
  ('datatype -> datatype O_PRODUCTO datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',856),
  ('datatype -> datatype O_DIVISION datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',857),
  ('datatype -> datatype O_EXPONENTE datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',858),
  ('datatype -> datatype O_MODULAR datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',859),
  ('datatype -> datatype OC_CONCATENAR datatype','datatype',3,'p_datatype_operadores_binarios2','grammar.py',868),
  ('datatype -> R_CASE caseList optElse R_END','datatype',4,'p_datatype_case_when','grammar.py',876),
  ('caseList -> caseList caseWhen','caseList',2,'p_case_list','grammar.py',882),
  ('caseList -> caseWhen','caseList',1,'p_case_list','grammar.py',883),
  ('caseWhen -> R_WHEN expBool R_THEN literal','caseWhen',4,'p_caseWhen','grammar.py',888),
  ('optElse -> R_ELSE literal','optElse',2,'p_caseWhen_2','grammar.py',892),
  ('optElse -> <empty>','optElse',0,'p_caseWhen_2','grammar.py',893),
  ('datatype -> O_RESTA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',899),
  ('datatype -> O_SUMA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',900),
  ('datatype -> columnName','datatype',1,'p_datatype_operandos','grammar.py',908),
  ('datatype -> literal','datatype',1,'p_datatype_operandos','grammar.py',909),
  ('datatype -> funcCall','datatype',1,'p_datatype_operandos','grammar.py',910),
  ('datatype -> extract','datatype',1,'p_datatype_operandos','grammar.py',911),
  ('datatype -> datePart','datatype',1,'p_datatype_operandos','grammar.py',912),
  ('datatype -> current','datatype',1,'p_datatype_operandos','grammar.py',913),
  ('datatype -> S_PARIZQ datatype S_PARDER','datatype',3,'p_datatype_agrupacion','grammar.py',921),
  ('expComp -> datatype OL_MENORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',929),
  ('expComp -> datatype OL_MAYORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',930),
  ('expComp -> datatype OL_MAYORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',931),
  ('expComp -> datatype OL_MENORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',932),
  ('expComp -> datatype S_IGUAL datatype','expComp',3,'p_expCompBinario_1','grammar.py',933),
  ('expComp -> datatype OL_DISTINTODE datatype','expComp',3,'p_expCompBinario_1','grammar.py',934),
  ('expComp -> datatype R_IS R_DISTINCT R_FROM datatype','expComp',5,'p_expCompBinario_2','grammar.py',942),
  ('expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype','expComp',6,'p_expCompBinario_3','grammar.py',952),
  ('expComp -> datatype R_BETWEEN datatype R_AND datatype','expComp',5,'p_expComp_ternario_1','grammar.py',962),
  ('expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',972),
  ('expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',973),
  ('expComp -> datatype R_ISNULL','expComp',2,'p_expComp_unario_1','grammar.py',984),
  ('expComp -> datatype R_NOTNULL','expComp',2,'p_expComp_unario_1','grammar.py',985),
  ('expComp -> datatype R_IS R_NULL','expComp',3,'p_expComp_unario_2','grammar.py',994),
  ('expComp -> datatype R_IS R_TRUE','expComp',3,'p_expComp_unario_2','grammar.py',995),
  ('expComp -> datatype R_IS R_FALSE','expComp',3,'p_expComp_unario_2','grammar.py',996),
  ('expComp -> datatype R_IS R_UNKNOWN','expComp',3,'p_expComp_unario_2','grammar.py',997),
  ('expComp -> datatype R_IS R_NOT R_NULL','expComp',4,'p_expComp_unario_3','grammar.py',1005),
  ('expComp -> datatype R_IS R_NOT R_TRUE','expComp',4,'p_expComp_unario_3','grammar.py',1006),
  ('expComp -> datatype R_IS R_NOT R_FALSE','expComp',4,'p_expComp_unario_3','grammar.py',1007),
  ('expComp -> datatype R_IS R_NOT R_UNKNOWN','expComp',4,'p_expComp_unario_3','grammar.py',1008),
  ('expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1018),
  ('expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1019),
  ('expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1020),
  ('expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1021),
  ('expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1022),
  ('expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1023),
  ('expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',1024),
  ('expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1025),
  ('expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1026),
  ('expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',1027),
  ('expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1028),
  ('expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1029),
  ('expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1030),
  ('expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1031),
  ('expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1032),
  ('expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1033),
  ('expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1034),
  ('expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1035),
  ('expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1036),
  ('expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1037),
  ('expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1038),
  ('expSubq -> stringExp R_LIKE STRING','expSubq',3,'p_expSubq','grammar.py',1039),
  ('stringExp -> STRING','stringExp',1,'p_stringExp','grammar.py',1046),
  ('stringExp -> columnName','stringExp',1,'p_stringExp','grammar.py',1047),
  ('subqValues -> R_ALL','subqValues',1,'p_subqValues','grammar.py',1054),
  ('subqValues -> R_ANY','subqValues',1,'p_subqValues','grammar.py',1055),
  ('subqValues -> R_SOME','subqValues',1,'p_subqValues','grammar.py',1056),
  ('boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER','boolean',4,'p_boolean_1','grammar.py',1063),
  ('boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER','boolean',5,'p_boolean_2','grammar.py',1073),
  ('boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER','boolean',6,'p_boolean_3','grammar.py',1081),
  ('boolean -> expComp','boolean',1,'p_boolean_4','grammar.py',1089),
  ('boolean -> expSubq','boolean',1,'p_boolean_4','grammar.py',1090),
  ('expBool -> expBool R_AND expBool','expBool',3,'p_expBool_1','grammar.py',1098),
  ('expBool -> expBool R_OR expBool','expBool',3,'p_expBool_1','grammar.py',1099),
  ('expBool -> R_NOT expBool','expBool',2,'p_expBool_2','grammar.py',1107),
  ('expBool -> S_PARIZQ expBool S_PARDER','expBool',3,'p_expBool_3','grammar.py',1115),
  ('expBool -> expBool optBoolPredicate','expBool',2,'p_expBool_5','grammar.py',1123),
  ('expBool -> boolean','expBool',1,'p_expBool_4','grammar.py',1131),
  ('optBoolPredicate -> R_IS R_TRUE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1139),
  ('optBoolPredicate -> R_IS R_FALSE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1140),
  ('optBoolPredicate -> R_IS R_UNKNOWN','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1141),
  ('optBoolPredicate -> R_IS R_NOT R_TRUE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1149),
  ('optBoolPredicate -> R_IS R_NOT R_FALSE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1150),
  ('optBoolPredicate -> R_IS R_NOT R_UNKNOWN','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1151),
  ('columnName -> ID','columnName',1,'p_columnName_id','grammar.py',1159),
  ('columnName -> ID S_PUNTO ID','columnName',3,'p_columnName_table_id','grammar.py',1168),
  ('booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1186),
  ('booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1187),
  ('booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1188),
  ('booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1189),
  ('booleanCheck -> idOrLiteral S_IGUAL idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1190),
  ('booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1191),
  ('booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral','booleanCheck',5,'p_booleanCheck_2','grammar.py',1201),
  ('booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral','booleanCheck',6,'p_booleanCheck_3','grammar.py',1213),
  ('idOrLiteral -> ID','idOrLiteral',1,'p_idOrLiteral','grammar.py',1224),
  ('idOrLiteral -> INTEGER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1225),
  ('idOrLiteral -> STRING','idOrLiteral',1,'p_idOrLiteral','grammar.py',1226),
  ('idOrLiteral -> DECIMAL','idOrLiteral',1,'p_idOrLiteral','grammar.py',1227),
  ('idOrLiteral -> CHARACTER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1228),
  ('idOrLiteral -> R_TRUE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1229),
  ('idOrLiteral -> R_FALSE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1230),
  ('alterStmt -> R_ALTER R_DATABASE idOrString alterDb','alterStmt',4,'p_alterStmt','grammar.py',1259),
  ('alterStmt -> R_ALTER R_TABLE idOrString alterTableList','alterStmt',4,'p_alterStmt','grammar.py',1260),
  ('alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList','alterStmt',7,'p_alterStmt','grammar.py',1261),
  ('col_op -> R_COLUMN','col_op',1,'p_col_op','grammar.py',1270),
  ('col_op -> <empty>','col_op',0,'p_col_op','grammar.py',1271),
  ('alterDb -> R_RENAME R_TO idOrString','alterDb',3,'p_alterDb','grammar.py',1278),
  ('alterDb -> R_OWNER R_TO ownerOPts','alterDb',3,'p_alterDb','grammar.py',1279),
  ('ownerOPts -> idOrString','ownerOPts',1,'p_ownerOpts','grammar.py',1288),
  ('ownerOPts -> R_CURRENT_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1289),
  ('ownerOPts -> R_SESSION_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1290),
  ('alterTableList -> alterTableList S_COMA alterTable','alterTableList',3,'p_alterTableList','grammar.py',1298),
  ('alterTableList -> alterTable','alterTableList',1,'p_alterTableList_u','grammar.py',1307),
  ('alterTable -> R_ADD alterAdd','alterTable',2,'p_alterTable','grammar.py',1315),
  ('alterTable -> R_ALTER alterAlter','alterTable',2,'p_alterTable','grammar.py',1316),
  ('alterTable -> R_DROP alterDrop','alterTable',2,'p_alterTable','grammar.py',1317),
  ('alterTable -> R_RENAME alterRename','alterTable',2,'p_alterTable','grammar.py',1318),
  ('alterAdd -> R_COLUMN ID types','alterAdd',3,'p_alterAdd_column','grammar.py',1326),
  ('alterAdd -> createConstraint','alterAdd',1,'p_alterAdd_constraint','grammar.py',1334),
  ('alterAdd -> createPrimary','alterAdd',1,'p_alterAdd_constraint','grammar.py',1335),
  ('alterAdd -> createForeign','alterAdd',1,'p_alterAdd_constraint','grammar.py',1336),
  ('alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER','alterAdd',5,'p_alterAdd_unique','grammar.py',1344),
  ('alterAlter -> R_COLUMN ID R_SET nullOpt','alterAlter',4,'p_alterAlter','grammar.py',1352),
  ('alterAlter -> R_COLUMN ID R_SET defaultVal','alterAlter',4,'p_alterAlter','grammar.py',1353),
  ('alterAlter -> R_COLUMN ID R_TYPE types','alterAlter',4,'p_alterAlter','grammar.py',1354),
  ('alterDrop -> R_CONSTRAINT ID','alterDrop',2,'p_alterDrop','grammar.py',1362),
  ('alterDrop -> R_COLUMN ID','alterDrop',2,'p_alterDrop','grammar.py',1363),
  ('alterRename -> R_COLUMN ID R_TO ID','alterRename',4,'p_alterRename','grammar.py',1371),
  ('dropStmt -> R_DROP R_TABLE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1385),
  ('dropStmt -> R_DROP R_DATABASE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1386),
  ('dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER','dropStmt',6,'p_dropStmt','grammar.py',1387),
  ('dropStmt -> R_DROP R_INDEX concurrenly ifExists idOrString','dropStmt',5,'p_dropStmt','grammar.py',1388),
  ('ifExists -> R_IF R_EXISTS','ifExists',2,'p_ifExists','grammar.py',1403),
  ('ifExists -> <empty>','ifExists',0,'p_ifExists','grammar.py',1404),
  ('concurrenly -> R_CONCURRENTLY','concurrenly',1,'p_concurrenly','grammar.py',1408),
  ('concurrenly -> <empty>','concurrenly',0,'p_concurrenly','grammar.py',1409),
  ('selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt_1','grammar.py',1421),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',7,'p_selectStmt_2','grammar.py',1439),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt__1','grammar.py',1456),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt__3','grammar.py',1461),
  ('selectStmt -> selectStmt R_UNION allOpt selectStmt','selectStmt',4,'p_selectStmt_union','grammar.py',1466),
  ('selectStmt -> selectStmt R_INTERSECT allOpt selectStmt','selectStmt',4,'p_selectStmt_intersect','grammar.py',1472),
  ('selectStmt -> selectStmt R_EXCEPT allOpt selectStmt','selectStmt',4,'p_selectStmt_except','grammar.py',1478),
  ('selectStmt -> S_PARIZQ selectStmt S_PARDER','selectStmt',3,'p_selectStmt_agrupacion','grammar.py',1484),
  ('fromCl -> R_FROM tableExp','fromCl',2,'p_fromClause','grammar.py',1491),
  ('selectStmt -> R_SELECT selectParams','selectStmt',2,'p_selectstmt_only_params','grammar.py',1503),
  ('allOpt -> R_ALL','allOpt',1,'p_allOpt','grammar.py',1512),
  ('allOpt -> <empty>','allOpt',0,'p_allOpt','grammar.py',1513),
  ('selectParams -> O_PRODUCTO','selectParams',1,'p_selectparams_all','grammar.py',1520),
  ('selectParams -> selectList','selectParams',1,'p_selectparams_params','grammar.py',1527),
  ('selectList -> selectList S_COMA selectListParams optAlias','selectList',4,'p_selectList_list','grammar.py',1535),
  ('selectList -> selectListParams optAlias','selectList',2,'p_selectList_u','grammar.py',1545),
  ('selectListParams -> expresion','selectListParams',1,'p_selectListParams_1','grammar.py',1554),
  ('selectListParams -> ID S_PUNTO O_PRODUCTO','selectListParams',3,'p_selectListParams_2','grammar.py',1561),
  ('optAlias -> R_AS idOrString','optAlias',2,'p_optalias_as','grammar.py',1568),
  ('optAlias -> idOrString','optAlias',1,'p_optalias_id','grammar.py',1576),
  ('optAlias -> <empty>','optAlias',0,'p_optalias_none','grammar.py',1583),
  ('tableExp -> tableExp S_COMA fromBody','tableExp',3,'p_tableexp_list','grammar.py',1589),
  ('tableExp -> fromBody','tableExp',1,'p_tableexp_u','grammar.py',1597),
  ('fromBody -> ID optAlias','fromBody',2,'p_fromBody','grammar.py',1603),
  ('fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString','fromBody',5,'p_tableexp_subq','grammar.py',1612),
  ('joinList -> joinList2','joinList',1,'p_joinList','grammar.py',1619),
  ('joinList2 -> joinList2 joinCl','joinList2',2,'p_joinList_2','grammar.py',1624),
  ('joinList2 -> joinCl','joinList2',1,'p_joinList_2','grammar.py',1625),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool','joinCl',6,'p_joinCl','grammar.py',1630),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER','joinCl',8,'p_joinCl','grammar.py',1631),
  ('joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias','joinCl',5,'p_joinCl','grammar.py',1632),
  ('nameList -> nameList S_COMA columnName','nameList',3,'p_nameList','grammar.py',1639),
  ('nameList -> columnName','nameList',1,'p_nameList','grammar.py',1640),
  ('joinOpt -> R_INNER','joinOpt',1,'p_joinOpt','grammar.py',1646),
  ('joinOpt -> R_LEFT','joinOpt',1,'p_joinOpt','grammar.py',1647),
  ('joinOpt -> R_LEFT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1648),
  ('joinOpt -> R_RIGHT','joinOpt',1,'p_joinOpt','grammar.py',1649),
  ('joinOpt -> R_RIGHT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1650),
  ('joinOpt -> R_FULL','joinOpt',1,'p_joinOpt','grammar.py',1651),
  ('joinOpt -> R_FULL R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1652),
  ('whereCl -> R_WHERE expBool','whereCl',2,'p_whereCl','grammar.py',1659),
  ('whereCl -> <empty>','whereCl',0,'p_whereCl_none','grammar.py',1668),
  ('groupByCl -> R_GROUP R_BY groupList havingCl','groupByCl',4,'p_groupByCl_1','grammar.py',1678),
  ('groupByCl -> <empty>','groupByCl',0,'p_groupByCl_2','grammar.py',1686),
  ('groupList -> groupList S_COMA columnName','groupList',3,'p_groupList_1','grammar.py',1694),
  ('groupList -> groupList S_COMA INTEGER','groupList',3,'p_groupList_1','grammar.py',1695),
  ('groupList -> columnName','groupList',1,'p_groupList_2','grammar.py',1704),
  ('groupList -> INTEGER','groupList',1,'p_groupList_2','grammar.py',1705),
  ('havingCl -> R_HAVING expBool','havingCl',2,'p_havingCl_1','grammar.py',1715),
  ('havingCl -> <empty>','havingCl',0,'p_havingCl_2','grammar.py',1721),
  ('orderByCl -> R_ORDER R_BY orderList','orderByCl',3,'p_orderByCl','grammar.py',1730),
  ('orderByCl -> <empty>','orderByCl',0,'p_orderByCl2','grammar.py',1736),
  ('orderList -> orderList S_COMA orderByElem','orderList',3,'p_orderList','grammar.py',1742),
  ('orderList -> orderByElem','orderList',1,'p_orderList2','grammar.py',1749),
  ('orderByElem -> columnName orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1756),
  ('orderByElem -> INTEGER orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1757),
  ('orderOpts -> R_ASC','orderOpts',1,'p_orderOpts','grammar.py',1764),
  ('orderOpts -> R_DESC','orderOpts',1,'p_orderOpts','grammar.py',1765),
  ('orderOpts -> <empty>','orderOpts',0,'p_orderOpts2','grammar.py',1771),
  ('orderNull -> R_NULL R_FIRST','orderNull',2,'p_orderNull','grammar.py',1776),
  ('orderNull -> R_NULL R_LAST','orderNull',2,'p_orderNull','grammar.py',1777),
  ('orderNull -> <empty>','orderNull',0,'p_ordenNull2','grammar.py',1782),
  ('limitCl -> R_LIMIT INTEGER offsetLimit','limitCl',3,'p_limitCl','grammar.py',1791),
  ('limitCl -> R_LIMIT R_ALL offsetLimit','limitCl',3,'p_limitCl','grammar.py',1792),
  ('limitCl -> <empty>','limitCl',0,'p_limitCl_n','grammar.py',1799),
  ('offsetLimit -> R_OFFSET INTEGER','offsetLimit',2,'p_offsetLimit','grammar.py',1805),
  ('offsetLimit -> <empty>','offsetLimit',0,'p_offsetLimit_n','grammar.py',1811),
  ('insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER','insertStmt',8,'p_insertStmt','grammar.py',1824),
  ('paramsColumn -> S_PARIZQ idList S_PARDER','paramsColumn',3,'p_paramsColumn','grammar.py',1831),
  ('paramsColumn -> <empty>','paramsColumn',0,'p_paramsColumn_none','grammar.py',1837),
  ('updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl','updateStmt',5,'p_updateStmt','grammar.py',1850),
  ('updateCols -> updateCols S_COMA updateVals','updateCols',3,'p_updateCols_list','grammar.py',1860),
  ('updateCols -> updateVals','updateCols',1,'p_updateCols_u','grammar.py',1867),
  ('updateVals -> ID S_IGUAL updateExp','updateVals',3,'p_updateVals','grammar.py',1873),
  ('updateExp -> datatype','updateExp',1,'p_updateExp','grammar.py',1880),
  ('updateExp -> R_DEFAULT','updateExp',1,'p_updateExp','grammar.py',1881),
  ('deleteStmt -> R_DELETE fromCl whereCl','deleteStmt',3,'p_deleteStmt','grammar.py',1894),
  ('truncateStmt -> R_TRUNCATE tableOpt ID','truncateStmt',3,'p_truncateStmt','grammar.py',1900),
  ('tableOpt -> R_TABLE','tableOpt',1,'p_tableOpt','grammar.py',1906),
  ('tableOpt -> <empty>','tableOpt',0,'p_tableOpt','grammar.py',1907),
  ('showStmt -> R_SHOW R_DATABASES likeOpt','showStmt',3,'p_showStmt','grammar.py',1913),
  ('likeOpt -> R_LIKE STRING','likeOpt',2,'p_likeOpt','grammar.py',1920),
  ('likeOpt -> <empty>','likeOpt',0,'p_likeOpt','grammar.py',1921),
  ('useStmt -> R_USE ID','useStmt',2,'p_useStmt','grammar.py',1931),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',11,'p_functionStmt','grammar.py',1943),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',10,'p_functionStmt2','grammar.py',1948),
  ('bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd','bloqueFunction',6,'p_functionBloque','grammar.py',1953),
  ('params_list -> params_list S_COMA param_item','params_list',3,'p_params_list_func','grammar.py',1959),
  ('params_list -> param_item','params_list',1,'p_params_list_func_aux','grammar.py',1965),
  ('param_item -> ID types','param_item',2,'p_param_item_func','grammar.py',1970),
  ('returnsStmt -> R_RETURNS types','returnsStmt',2,'p_returnsStmt','grammar.py',1976),
  ('returnsStmt -> <empty>','returnsStmt',0,'p_returnsStmt_aux','grammar.py',1981),
  ('declareStmt -> R_DECLARE declaracion_list','declareStmt',2,'p_declareStmt2','grammar.py',1987),
  ('declareStmt -> <empty>','declareStmt',0,'p_declareStmt','grammar.py',1992),
  ('declaracion_list -> declaracion_list declaracion_item','declaracion_list',2,'p_declaracion_list','grammar.py',1997),
  ('declaracion_list -> declaracion_item','declaracion_list',1,'p_declaracion_list_aux','grammar.py',2003),
  ('declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA','declaracion_item',6,'p_declaracion_item','grammar.py',2008),
  ('declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA','declaracion_item',5,'p_declaracion_item_aux','grammar.py',2013),
  ('constant_opt -> R_CONSTANT','constant_opt',1,'p_constant_item','grammar.py',2018),
  ('constant_opt -> <empty>','constant_opt',0,'p_constant_item2','grammar.py',2023),
  ('null_opt -> R_NOT R_NULL','null_opt',2,'p_null_option','grammar.py',2028),
  ('null_opt -> <empty>','null_opt',0,'p_null_option2','grammar.py',2033),
  ('default_opt -> R_DEFAULT','default_opt',1,'p_default_item','grammar.py',2038),
  ('default_opt -> S_DOSPUNTOS S_IGUAL','default_opt',2,'p_default_item','grammar.py',2039),
  ('default_opt -> S_IGUAL','default_opt',1,'p_default_item','grammar.py',2040),
  ('default_item -> default_opt expresion','default_item',2,'p_default_item2','grammar.py',2044),
  ('default_item -> <empty>','default_item',0,'p_default_item3','grammar.py',2049),
  ('alias_declaracion -> ID','alias_declaracion',1,'p_alias_declaracion','grammar.py',2054),
  ('alias_declaracion -> IDEspecial','alias_declaracion',1,'p_alias_declaracion','grammar.py',2055),
  ('beginStmt -> beginStmt beginItem','beginStmt',2,'p_beingStmt','grammar.py',2060),
  ('beginStmt -> beginItem','beginStmt',1,'p_beingStmt2','grammar.py',2066),
  ('beginItem -> stmt','beginItem',1,'p_beginItem','grammar.py',2071),
  ('beginItem -> returnStmt S_PUNTOCOMA','beginItem',2,'p_beginItem','grammar.py',2072),
  ('beginItem -> asignacionStmt S_PUNTOCOMA','beginItem',2,'p_beginItem','grammar.py',2073),
  ('returnStmt -> R_RETURN expresion','returnStmt',2,'p_returnStmt','grammar.py',2078),
  ('labelEnd -> <empty>','labelEnd',0,'p_labelEnd2','grammar.py',2083),
  ('labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA','labelEnd',5,'p_labelEnd','grammar.py',2088),
  ('asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion','asignacionStmt',4,'p_asignacionStmt','grammar.py',2093),
  ('asignacionStmt -> ID S_IGUAL expresion','asignacionStmt',3,'p_asignacionStmt2','grammar.py',2098),
  ('procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure','procedureStmt',15,'p_procedureStmt','grammar.py',2103),
  ('procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure','procedureStmt',14,'p_procedureStmt2','grammar.py',2108),
  ('endProcedure -> <empty>','endProcedure',0,'p_endProcedure2','grammar.py',2113),
  ('endProcedure -> R_END S_PUNTOCOMA','endProcedure',2,'p_endProcedure','grammar.py',2117),
  ('dolarEndProcedure -> <empty>','dolarEndProcedure',0,'p_dolarEndProc2','grammar.py',2121),
  ('dolarEndProcedure -> S_DOLAR S_DOLAR','dolarEndProcedure',2,'p_dolarEndProc','grammar.py',2125),
  ('beginWord -> <empty>','beginWord',0,'p_beginProcWord2','grammar.py',2129),
  ('beginWord -> R_BEGIN','beginWord',1,'p_beginProcWord','grammar.py',2133),
  ('languageProcedure -> R_LANGUAGE ID','languageProcedure',2,'p_procedureLanguage','grammar.py',2137),
  ('languageProcedure -> <empty>','languageProcedure',0,'p_procedureLanguage2','grammar.py',2142),
  ('executePL -> R_EXECUTE funcCall','executePL',2,'p_executePL','grammar.py',2147),
  ('executeParams -> executeParams S_COMA executeItem','executeParams',3,'p_executeParams','grammar.py',2152),
  ('executeParams -> executeItem','executeParams',1,'p_executeParams2','grammar.py',2158),
  ('executeItem -> expresion','executeItem',1,'p_executeItem','grammar.py',2163),
]
