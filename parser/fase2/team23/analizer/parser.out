Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OC_AND
    OC_NOT
    OC_OR
    OC_SHIFTL
    OC_SHIFTR
    OC_XOR

Grammar

Rule 0     S' -> init
Rule 1     init -> stmtList
Rule 2     stmtList -> stmtList stmt
Rule 3     stmtList -> stmt
Rule 4     stmt -> createStmt S_PUNTOCOMA
Rule 5     stmt -> showStmt S_PUNTOCOMA
Rule 6     stmt -> alterStmt S_PUNTOCOMA
Rule 7     stmt -> dropStmt S_PUNTOCOMA
Rule 8     stmt -> insertStmt S_PUNTOCOMA
Rule 9     stmt -> updateStmt S_PUNTOCOMA
Rule 10    stmt -> deleteStmt S_PUNTOCOMA
Rule 11    stmt -> truncateStmt S_PUNTOCOMA
Rule 12    stmt -> useStmt S_PUNTOCOMA
Rule 13    stmt -> selectStmt S_PUNTOCOMA
Rule 14    stmt -> functionStmt
Rule 15    stmt -> procedureStmt
Rule 16    stmt -> executePL S_PUNTOCOMA
Rule 17    stmt -> ifStmt R_END R_IF S_PUNTOCOMA
Rule 18    stmt -> asignacionStmt S_PUNTOCOMA
Rule 19    ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
Rule 20    else_ -> R_ELSE List_body
Rule 21    else_ -> Lista_elsif_
Rule 22    else_ -> <empty>
Rule 23    Lista_elsif_ -> Lista_elsif_ elsif_
Rule 24    Lista_elsif_ -> elsif_
Rule 25    elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body
Rule 26    List_body -> List_body body
Rule 27    List_body -> body
Rule 28    body -> createStmt S_PUNTOCOMA
Rule 29    body -> showStmt S_PUNTOCOMA
Rule 30    body -> alterStmt S_PUNTOCOMA
Rule 31    body -> dropStmt S_PUNTOCOMA
Rule 32    body -> insertStmt S_PUNTOCOMA
Rule 33    body -> updateStmt S_PUNTOCOMA
Rule 34    body -> deleteStmt S_PUNTOCOMA
Rule 35    body -> truncateStmt S_PUNTOCOMA
Rule 36    body -> useStmt S_PUNTOCOMA
Rule 37    body -> selectStmt S_PUNTOCOMA
Rule 38    body -> functionStmt S_PUNTOCOMA
Rule 39    body -> ifStmt R_END R_IF S_PUNTOCOMA
Rule 40    body -> expresion S_PUNTOCOMA
Rule 41    idOrString -> ID
Rule 42    idOrString -> STRING
Rule 43    idOrString -> CHARACTER
Rule 44    createStmt -> R_CREATE createBody
Rule 45    createBody -> createOpts
Rule 46    createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
Rule 47    unique_index -> R_UNIQUE
Rule 48    unique_index -> <empty>
Rule 49    using_hash_index -> R_USING R_HASH
Rule 50    using_hash_index -> <empty>
Rule 51    indexNullS -> R_NULLS R_FIRST
Rule 52    indexNullS -> R_NULLS R_LAST
Rule 53    indexNullS -> <empty>
Rule 54    indexasc_desc -> R_DESC
Rule 55    indexasc_desc -> R_ASC
Rule 56    indexasc_desc -> <empty>
Rule 57    createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
Rule 58    createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode
Rule 59    orReplace -> R_OR R_REPLACE
Rule 60    orReplace -> <empty>
Rule 61    createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
Rule 62    ifNotExists -> R_IF R_NOT R_EXISTS
Rule 63    ifNotExists -> <empty>
Rule 64    inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER
Rule 65    inheritsOpt -> <empty>
Rule 66    createOwner -> R_OWNER ID
Rule 67    createOwner -> R_OWNER STRING
Rule 68    createOwner -> R_OWNER S_IGUAL ID
Rule 69    createOwner -> R_OWNER S_IGUAL STRING
Rule 70    createOwner -> <empty>
Rule 71    createMode -> R_MODE INTEGER
Rule 72    createMode -> R_MODE S_IGUAL INTEGER
Rule 73    createMode -> <empty>
Rule 74    createTableList -> createTableList S_COMA createTable
Rule 75    createTableList -> createTable
Rule 76    createTable -> ID types createColumns
Rule 77    createTable -> createConstraint
Rule 78    createTable -> createUnique
Rule 79    createTable -> createPrimary
Rule 80    createTable -> createForeign
Rule 81    createColumns -> colOptionsList
Rule 82    createColumns -> <empty>
Rule 83    createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 84    createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER
Rule 85    createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
Rule 86    createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
Rule 87    constrName -> R_CONSTRAINT ID
Rule 88    constrName -> <empty>
Rule 89    idList -> idList S_COMA ID
Rule 90    idList -> ID
Rule 91    types -> ID
Rule 92    types -> T_SMALLINT
Rule 93    types -> T_INTEGER
Rule 94    types -> T_BIGINT
Rule 95    types -> T_REAL
Rule 96    types -> T_DOUBLE T_PRECISION
Rule 97    types -> T_MONEY
Rule 98    types -> T_TEXT
Rule 99    types -> T_BOOLEAN
Rule 100   types -> R_TIMESTAMP
Rule 101   types -> T_DATE
Rule 102   types -> T_TIME
Rule 103   types -> T_DECIMAL optParams
Rule 104   types -> T_NUMERIC optParams
Rule 105   types -> T_VARCHAR optParams
Rule 106   types -> T_CHARACTER optParams
Rule 107   types -> T_CHAR optParams
Rule 108   types -> T_CHARACTER T_VARYING optParams
Rule 109   types -> R_INTERVAL intervalFields
Rule 110   intervalFields -> R_YEAR
Rule 111   intervalFields -> R_MONTH
Rule 112   intervalFields -> R_DAY
Rule 113   intervalFields -> R_HOUR
Rule 114   intervalFields -> R_MINUTE
Rule 115   intervalFields -> R_SECOND
Rule 116   intervalFields -> <empty>
Rule 117   optParams -> S_PARIZQ literalList S_PARDER
Rule 118   optParams -> <empty>
Rule 119   colOptionsList -> colOptionsList colOptions
Rule 120   colOptionsList -> colOptions
Rule 121   colOptions -> defaultVal
Rule 122   colOptions -> nullOpt
Rule 123   colOptions -> constraintOpt
Rule 124   colOptions -> primaryOpt
Rule 125   colOptions -> referencesOpt
Rule 126   defaultVal -> R_DEFAULT literal
Rule 127   nullOpt -> R_NOT R_NULL
Rule 128   nullOpt -> R_NULL
Rule 129   constraintOpt -> constrName R_UNIQUE
Rule 130   constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 131   primaryOpt -> R_PRIMARY R_KEY
Rule 132   referencesOpt -> R_REFERENCES ID
Rule 133   expresion -> datatype
Rule 134   expresion -> expBool
Rule 135   expresion -> S_PARIZQ selectStmt S_PARDER
Rule 136   funcCall -> ID S_PARIZQ paramsList S_PARDER
Rule 137   funcCall -> ID S_PARIZQ S_PARDER
Rule 138   funcCall -> R_NOW S_PARIZQ S_PARDER
Rule 139   funcCall -> R_COUNT S_PARIZQ datatype S_PARDER
Rule 140   funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
Rule 141   funcCall -> R_SUM S_PARIZQ datatype S_PARDER
Rule 142   funcCall -> R_PROM S_PARIZQ datatype S_PARDER
Rule 143   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
Rule 144   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
Rule 145   timeStamp -> R_TIMESTAMP STRING
Rule 146   timeStamp -> R_INTERVAL STRING
Rule 147   optsExtract -> R_YEAR
Rule 148   optsExtract -> R_MONTH
Rule 149   optsExtract -> R_DAY
Rule 150   optsExtract -> R_HOUR
Rule 151   optsExtract -> R_MINUTE
Rule 152   optsExtract -> R_SECOND
Rule 153   datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
Rule 154   dateSource -> R_TIMESTAMP STRING
Rule 155   dateSource -> T_DATE STRING
Rule 156   dateSource -> T_TIME STRING
Rule 157   dateSource -> R_INTERVAL STRING
Rule 158   dateSource -> R_NOW S_PARIZQ S_PARDER
Rule 159   current -> R_CURRENT_DATE
Rule 160   current -> R_CURRENT_TIME
Rule 161   current -> timeStamp
Rule 162   literalList -> literalList S_COMA literal
Rule 163   literalList -> literal
Rule 164   literal -> INTEGER
Rule 165   literal -> STRING
Rule 166   literal -> DECIMAL
Rule 167   literal -> CHARACTER
Rule 168   literal -> R_TRUE
Rule 169   literal -> R_FALSE
Rule 170   literal -> R_NULL
Rule 171   paramsList -> paramsList S_COMA datatype
Rule 172   paramsList -> datatype
Rule 173   datatype -> datatype O_SUMA datatype
Rule 174   datatype -> datatype O_RESTA datatype
Rule 175   datatype -> datatype O_PRODUCTO datatype
Rule 176   datatype -> datatype O_DIVISION datatype
Rule 177   datatype -> datatype O_EXPONENTE datatype
Rule 178   datatype -> datatype O_MODULAR datatype
Rule 179   datatype -> datatype OC_CONCATENAR datatype
Rule 180   datatype -> R_CASE caseList optElse R_END
Rule 181   caseList -> caseList caseWhen
Rule 182   caseList -> caseWhen
Rule 183   caseWhen -> R_WHEN expBool R_THEN literal
Rule 184   optElse -> R_ELSE literal
Rule 185   optElse -> <empty>
Rule 186   datatype -> O_RESTA datatype
Rule 187   datatype -> O_SUMA datatype
Rule 188   datatype -> columnName
Rule 189   datatype -> literal
Rule 190   datatype -> funcCall
Rule 191   datatype -> extract
Rule 192   datatype -> datePart
Rule 193   datatype -> current
Rule 194   datatype -> S_PARIZQ datatype S_PARDER
Rule 195   expComp -> datatype OL_MENORQUE datatype
Rule 196   expComp -> datatype OL_MAYORQUE datatype
Rule 197   expComp -> datatype OL_MAYORIGUALQUE datatype
Rule 198   expComp -> datatype OL_MENORIGUALQUE datatype
Rule 199   expComp -> datatype S_IGUAL datatype
Rule 200   expComp -> datatype OL_DISTINTODE datatype
Rule 201   expComp -> datatype R_IS R_DISTINCT R_FROM datatype
Rule 202   expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype
Rule 203   expComp -> datatype R_BETWEEN datatype R_AND datatype
Rule 204   expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype
Rule 205   expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
Rule 206   expComp -> datatype R_ISNULL
Rule 207   expComp -> datatype R_NOTNULL
Rule 208   expComp -> datatype R_IS R_NULL
Rule 209   expComp -> datatype R_IS R_TRUE
Rule 210   expComp -> datatype R_IS R_FALSE
Rule 211   expComp -> datatype R_IS R_UNKNOWN
Rule 212   expComp -> datatype R_IS R_NOT R_NULL
Rule 213   expComp -> datatype R_IS R_NOT R_TRUE
Rule 214   expComp -> datatype R_IS R_NOT R_FALSE
Rule 215   expComp -> datatype R_IS R_NOT R_UNKNOWN
Rule 216   expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 217   expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 218   expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 219   expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 220   expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
Rule 221   expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
Rule 222   expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 223   expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 224   expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 225   expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 226   expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 227   expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 228   expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 229   expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 230   expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 231   expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 232   expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 233   expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 234   expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 235   expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 236   expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 237   expSubq -> stringExp R_LIKE STRING
Rule 238   stringExp -> STRING
Rule 239   stringExp -> columnName
Rule 240   subqValues -> R_ALL
Rule 241   subqValues -> R_ANY
Rule 242   subqValues -> R_SOME
Rule 243   boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER
Rule 244   boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER
Rule 245   boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
Rule 246   boolean -> expComp
Rule 247   boolean -> expSubq
Rule 248   expBool -> expBool R_AND expBool
Rule 249   expBool -> expBool R_OR expBool
Rule 250   expBool -> R_NOT expBool
Rule 251   expBool -> S_PARIZQ expBool S_PARDER
Rule 252   expBool -> expBool optBoolPredicate
Rule 253   expBool -> boolean
Rule 254   optBoolPredicate -> R_IS R_TRUE
Rule 255   optBoolPredicate -> R_IS R_FALSE
Rule 256   optBoolPredicate -> R_IS R_UNKNOWN
Rule 257   optBoolPredicate -> R_IS R_NOT R_TRUE
Rule 258   optBoolPredicate -> R_IS R_NOT R_FALSE
Rule 259   optBoolPredicate -> R_IS R_NOT R_UNKNOWN
Rule 260   columnName -> ID
Rule 261   columnName -> ID S_PUNTO ID
Rule 262   booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral
Rule 263   booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral
Rule 264   booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral
Rule 265   booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral
Rule 266   booleanCheck -> idOrLiteral S_IGUAL idOrLiteral
Rule 267   booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral
Rule 268   booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
Rule 269   booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
Rule 270   idOrLiteral -> ID
Rule 271   idOrLiteral -> INTEGER
Rule 272   idOrLiteral -> STRING
Rule 273   idOrLiteral -> DECIMAL
Rule 274   idOrLiteral -> CHARACTER
Rule 275   idOrLiteral -> R_TRUE
Rule 276   idOrLiteral -> R_FALSE
Rule 277   alterStmt -> R_ALTER R_DATABASE idOrString alterDb
Rule 278   alterStmt -> R_ALTER R_TABLE idOrString alterTableList
Rule 279   alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
Rule 280   col_op -> R_COLUMN
Rule 281   col_op -> <empty>
Rule 282   alterDb -> R_RENAME R_TO idOrString
Rule 283   alterDb -> R_OWNER R_TO ownerOPts
Rule 284   ownerOPts -> idOrString
Rule 285   ownerOPts -> R_CURRENT_USER
Rule 286   ownerOPts -> R_SESSION_USER
Rule 287   alterTableList -> alterTableList S_COMA alterTable
Rule 288   alterTableList -> alterTable
Rule 289   alterTable -> R_ADD alterAdd
Rule 290   alterTable -> R_ALTER alterAlter
Rule 291   alterTable -> R_DROP alterDrop
Rule 292   alterTable -> R_RENAME alterRename
Rule 293   alterAdd -> R_COLUMN ID types
Rule 294   alterAdd -> createConstraint
Rule 295   alterAdd -> createPrimary
Rule 296   alterAdd -> createForeign
Rule 297   alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER
Rule 298   alterAlter -> R_COLUMN ID R_SET nullOpt
Rule 299   alterAlter -> R_COLUMN ID R_SET defaultVal
Rule 300   alterAlter -> R_COLUMN ID R_TYPE types
Rule 301   alterDrop -> R_CONSTRAINT ID
Rule 302   alterDrop -> R_COLUMN ID
Rule 303   alterRename -> R_COLUMN ID R_TO ID
Rule 304   dropStmt -> R_DROP R_TABLE ifExists idOrString
Rule 305   dropStmt -> R_DROP R_DATABASE ifExists idOrString
Rule 306   dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
Rule 307   dropStmt -> R_DROP R_INDEX concurrenly ifExists idOrString
Rule 308   ifExists -> R_IF R_EXISTS
Rule 309   ifExists -> <empty>
Rule 310   concurrenly -> R_CONCURRENTLY
Rule 311   concurrenly -> <empty>
Rule 312   selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 313   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 314   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
Rule 315   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
Rule 316   selectStmt -> selectStmt R_UNION allOpt selectStmt
Rule 317   selectStmt -> selectStmt R_INTERSECT allOpt selectStmt
Rule 318   selectStmt -> selectStmt R_EXCEPT allOpt selectStmt
Rule 319   selectStmt -> S_PARIZQ selectStmt S_PARDER
Rule 320   fromCl -> R_FROM tableExp
Rule 321   selectStmt -> R_SELECT selectParams
Rule 322   allOpt -> R_ALL
Rule 323   allOpt -> <empty>
Rule 324   selectParams -> O_PRODUCTO
Rule 325   selectParams -> selectList
Rule 326   selectList -> selectList S_COMA selectListParams optAlias
Rule 327   selectList -> selectListParams optAlias
Rule 328   selectListParams -> expresion
Rule 329   selectListParams -> ID S_PUNTO O_PRODUCTO
Rule 330   optAlias -> R_AS idOrString
Rule 331   optAlias -> idOrString
Rule 332   optAlias -> <empty>
Rule 333   tableExp -> tableExp S_COMA fromBody
Rule 334   tableExp -> fromBody
Rule 335   fromBody -> ID optAlias
Rule 336   fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString
Rule 337   joinList -> joinList2
Rule 338   joinList2 -> joinList2 joinCl
Rule 339   joinList2 -> joinCl
Rule 340   joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool
Rule 341   joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
Rule 342   joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias
Rule 343   nameList -> nameList S_COMA columnName
Rule 344   nameList -> columnName
Rule 345   joinOpt -> R_INNER
Rule 346   joinOpt -> R_LEFT
Rule 347   joinOpt -> R_LEFT R_OUTER
Rule 348   joinOpt -> R_RIGHT
Rule 349   joinOpt -> R_RIGHT R_OUTER
Rule 350   joinOpt -> R_FULL
Rule 351   joinOpt -> R_FULL R_OUTER
Rule 352   whereCl -> R_WHERE expBool
Rule 353   whereCl -> <empty>
Rule 354   groupByCl -> R_GROUP R_BY groupList havingCl
Rule 355   groupByCl -> <empty>
Rule 356   groupList -> groupList S_COMA columnName
Rule 357   groupList -> groupList S_COMA INTEGER
Rule 358   groupList -> columnName
Rule 359   groupList -> INTEGER
Rule 360   havingCl -> R_HAVING expBool
Rule 361   havingCl -> <empty>
Rule 362   orderByCl -> R_ORDER R_BY orderList
Rule 363   orderByCl -> <empty>
Rule 364   orderList -> orderList S_COMA orderByElem
Rule 365   orderList -> orderByElem
Rule 366   orderByElem -> columnName orderOpts orderNull
Rule 367   orderByElem -> INTEGER orderOpts orderNull
Rule 368   orderOpts -> R_ASC
Rule 369   orderOpts -> R_DESC
Rule 370   orderOpts -> <empty>
Rule 371   orderNull -> R_NULL R_FIRST
Rule 372   orderNull -> R_NULL R_LAST
Rule 373   orderNull -> <empty>
Rule 374   limitCl -> R_LIMIT INTEGER offsetLimit
Rule 375   limitCl -> R_LIMIT R_ALL offsetLimit
Rule 376   limitCl -> <empty>
Rule 377   offsetLimit -> R_OFFSET INTEGER
Rule 378   offsetLimit -> <empty>
Rule 379   insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
Rule 380   paramsColumn -> S_PARIZQ idList S_PARDER
Rule 381   paramsColumn -> <empty>
Rule 382   updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl
Rule 383   updateCols -> updateCols S_COMA updateVals
Rule 384   updateCols -> updateVals
Rule 385   updateVals -> ID S_IGUAL updateExp
Rule 386   updateExp -> datatype
Rule 387   updateExp -> R_DEFAULT
Rule 388   deleteStmt -> R_DELETE fromCl whereCl
Rule 389   truncateStmt -> R_TRUNCATE tableOpt ID
Rule 390   tableOpt -> R_TABLE
Rule 391   tableOpt -> <empty>
Rule 392   showStmt -> R_SHOW R_DATABASES likeOpt
Rule 393   likeOpt -> R_LIKE STRING
Rule 394   likeOpt -> <empty>
Rule 395   useStmt -> R_USE ID
Rule 396   functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
Rule 397   functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
Rule 398   bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
Rule 399   params_list -> params_list S_COMA param_item
Rule 400   params_list -> param_item
Rule 401   param_item -> ID types
Rule 402   returnsStmt -> R_RETURNS types
Rule 403   returnsStmt -> <empty>
Rule 404   declareStmt -> R_DECLARE declaracion_list
Rule 405   declareStmt -> <empty>
Rule 406   declaracion_list -> declaracion_list declaracion_item
Rule 407   declaracion_list -> declaracion_item
Rule 408   declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA
Rule 409   declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA
Rule 410   constant_opt -> R_CONSTANT
Rule 411   constant_opt -> <empty>
Rule 412   null_opt -> R_NOT R_NULL
Rule 413   null_opt -> <empty>
Rule 414   default_opt -> R_DEFAULT
Rule 415   default_opt -> S_DOSPUNTOS S_IGUAL
Rule 416   default_opt -> S_IGUAL
Rule 417   default_item -> default_opt expresion
Rule 418   default_item -> <empty>
Rule 419   alias_declaracion -> ID
Rule 420   alias_declaracion -> IDEspecial
Rule 421   beginStmt -> beginStmt beginItem
Rule 422   beginStmt -> beginItem
Rule 423   beginItem -> stmt
Rule 424   beginItem -> returnStmt S_PUNTOCOMA
Rule 425   beginItem -> asignacionStmt S_PUNTOCOMA
Rule 426   returnStmt -> R_RETURN expresion
Rule 427   labelEnd -> <empty>
Rule 428   labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA
Rule 429   asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion
Rule 430   asignacionStmt -> ID S_IGUAL expresion
Rule 431   procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
Rule 432   procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
Rule 433   endProcedure -> <empty>
Rule 434   endProcedure -> R_END S_PUNTOCOMA
Rule 435   dolarEndProcedure -> <empty>
Rule 436   dolarEndProcedure -> S_DOLAR S_DOLAR
Rule 437   beginWord -> <empty>
Rule 438   beginWord -> R_BEGIN
Rule 439   languageProcedure -> R_LANGUAGE ID
Rule 440   languageProcedure -> <empty>
Rule 441   executePL -> R_EXECUTE funcCall
Rule 442   executeParams -> executeParams S_COMA executeItem
Rule 443   executeParams -> executeItem
Rule 444   executeItem -> expresion

Terminals, with rules where they appear

CHARACTER            : 43 167 274
COMMENT              : 
DECIMAL              : 166 273
ID                   : 41 46 46 61 64 66 68 76 86 87 89 90 91 132 136 137 260 261 261 270 293 297 298 299 300 301 302 303 303 329 335 379 385 389 395 396 397 401 408 409 419 428 429 430 431 432 439
IDEspecial           : 420
INTEGER              : 71 72 164 271 357 359 367 374 377
OC_AND               : 
OC_CONCATENAR        : 179
OC_NOT               : 
OC_OR                : 
OC_SHIFTL            : 
OC_SHIFTR            : 
OC_XOR               : 
OL_DISTINTODE        : 200 221 267
OL_ESIGUAL           : 220
OL_MAYORIGUALQUE     : 197 218 264
OL_MAYORQUE          : 196 217 263
OL_MENORIGUALQUE     : 198 219 265
OL_MENORQUE          : 195 216 262
O_DIVISION           : 176
O_EXPONENTE          : 177
O_MODULAR            : 178
O_PRODUCTO           : 140 175 324 329
O_RESTA              : 174 186
O_SUMA               : 173 187
R_ADD                : 289
R_ALIAS              : 409
R_ALL                : 240 322 375
R_ALTER              : 277 278 279 279 290
R_AND                : 203 204 205 222 223 224 248
R_ANY                : 241
R_AS                 : 61 330 336 396 397 431 432
R_ASC                : 55 368
R_BEGIN              : 398 438
R_BETWEEN            : 203 204 205 222 223 224
R_BY                 : 354 362
R_CASE               : 180
R_CHECK              : 83 130
R_COLUMN             : 280 293 298 299 300 302 303
R_CONCURRENTLY       : 310
R_CONSTANT           : 410
R_CONSTRAINT         : 87 301
R_COUNT              : 139 140
R_CREATE             : 44 396 397 431 432
R_CURRENT_DATE       : 159
R_CURRENT_TIME       : 160
R_CURRENT_USER       : 285
R_DATABASE           : 58 277 305
R_DATABASES          : 392
R_DATE_PART          : 153
R_DAY                : 112 149
R_DECLARE            : 404
R_DEFAULT            : 126 387 414
R_DELETE             : 388
R_DESC               : 54 369
R_DISTINCT           : 201 202 225 226 268 269 312
R_DROP               : 291 304 305 306 307
R_ELSE               : 20 184
R_ELSIF              : 25
R_END                : 17 39 180 398 434
R_ENUM               : 61
R_EXCEPT             : 318
R_EXECUTE            : 441
R_EXISTS             : 62 243 308
R_EXTRACT            : 143 144
R_FALSE              : 169 210 214 233 234 255 258 276
R_FIRST              : 51 371
R_FOR                : 409
R_FOREIGN            : 86
R_FROM               : 143 144 201 202 225 226 268 269 320
R_FULL               : 350 351
R_FUNCTION           : 396 397
R_GROUP              : 354
R_HASH               : 49
R_HAVING             : 360
R_HOUR               : 113 150
R_IF                 : 17 19 39 62 308
R_IN                 : 244 245
R_INDEX              : 46 279 307
R_INHERITS           : 64
R_INNER              : 345
R_INSERT             : 379
R_INTERSECT          : 317
R_INTERVAL           : 109 146 157
R_INTO               : 379
R_IS                 : 201 202 208 209 210 211 212 213 214 215 225 226 227 228 231 232 233 234 235 236 254 255 256 257 258 259 268 269
R_ISNULL             : 206 229
R_JOIN               : 340 341 342
R_KEY                : 85 86 131
R_LANGUAGE           : 428 439
R_LAST               : 52 372
R_LEFT               : 346 347
R_LIKE               : 237 393
R_LIMIT              : 374 375
R_MINUTE             : 114 151
R_MODE               : 71 72
R_MONTH              : 111 148
R_NATURAL            : 342
R_NOT                : 62 127 202 204 212 213 214 215 223 226 228 232 234 236 245 250 257 258 259 269 412
R_NOTNULL            : 207 230
R_NOW                : 138 158
R_NULL               : 127 128 170 208 212 227 228 371 372 412
R_NULLS              : 51 52
R_OFFSET             : 377
R_ON                 : 46 340
R_OR                 : 59 249
R_ORDER              : 362
R_OUTER              : 347 349 351
R_OWNER              : 66 67 68 69 283
R_PRIMARY            : 85 131
R_PROCEDURE          : 306 431 432
R_PROM               : 142
R_REFERENCES         : 86 132
R_RENAME             : 282 292
R_REPLACE            : 59
R_RETURN             : 426
R_RETURNS            : 402
R_RIGHT              : 348 349
R_SECOND             : 115 152
R_SELECT             : 312 313 314 315 321
R_SESSION_USER       : 286
R_SET                : 298 299 382
R_SHOW               : 392
R_SOME               : 242
R_SUM                : 141
R_SYMMETRIC          : 205 224
R_TABLE              : 57 278 304 390
R_THEN               : 19 25 183
R_TIMESTAMP          : 100 145 154
R_TO                 : 282 283 303
R_TRUE               : 168 209 213 231 232 254 257 275
R_TRUNCATE           : 389
R_TYPE               : 61 300
R_UNION              : 316
R_UNIQUE             : 47 84 129 297
R_UNKNOWN            : 211 215 235 236 256 259
R_UPDATE             : 382
R_USE                : 395
R_USING              : 49 341
R_VALUES             : 379
R_WHEN               : 183
R_WHERE              : 352
R_YEAR               : 110 147
STRING               : 42 67 69 145 146 153 154 155 156 157 165 237 238 272 393
S_COMA               : 74 89 153 162 171 287 326 333 343 356 357 364 383 399 442
S_DOLAR              : 396 396 397 397 428 428 431 431 432 432 436 436
S_DOSPUNTOS          : 415 429
S_IGUAL              : 68 69 72 199 266 385 415 416 429 430
S_PARDER             : 19 25 46 57 61 64 83 84 85 86 86 117 130 135 136 137 138 139 140 141 142 143 144 153 158 194 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 243 244 245 251 297 306 319 336 341 379 380 396 397 431 432
S_PARIZQ             : 19 25 46 57 61 64 83 84 85 86 86 117 130 135 136 137 138 139 140 141 142 143 144 153 158 194 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 243 244 245 251 297 306 319 336 341 379 380 396 397 431 432
S_PUNTO              : 261 329
S_PUNTOCOMA          : 4 5 6 7 8 9 10 11 12 13 16 17 18 28 29 30 31 32 33 34 35 36 37 38 39 40 398 408 409 424 425 428 434
T_BIGINT             : 94
T_BOOLEAN            : 99
T_CHAR               : 107
T_CHARACTER          : 106 108
T_DATE               : 101 155
T_DECIMAL            : 103
T_DOUBLE             : 96
T_INTEGER            : 93
T_MONEY              : 97
T_NUMERIC            : 104
T_PRECISION          : 96
T_REAL               : 95
T_SMALLINT           : 92
T_TEXT               : 98
T_TIME               : 102 156
T_VARCHAR            : 105
T_VARYING            : 108
error                : 

Nonterminals, with rules where they appear

List_body            : 19 20 25 26
Lista_elsif_         : 21 23
alias_declaracion    : 409
allOpt               : 316 317 318
alterAdd             : 289
alterAlter           : 290
alterDb              : 277
alterDrop            : 291
alterRename          : 292
alterStmt            : 6 30
alterTable           : 287 288
alterTableList       : 278 287
asignacionStmt       : 18 425
beginItem            : 421 422
beginStmt            : 398 421 431 432
beginWord            : 431 432
bloqueFunction       : 396 397
body                 : 26 27
boolean              : 253
booleanCheck         : 83 130
caseList             : 180 181
caseWhen             : 181 182
colOptions           : 119 120
colOptionsList       : 81 119
col_op               : 279
columnName           : 144 188 239 340 341 342 343 344 356 358 366
concurrenly          : 307
constant_opt         : 408
constrName           : 83 86 129 130 297
constraintOpt        : 123
createBody           : 44
createColumns        : 76
createConstraint     : 77 294
createForeign        : 80 296
createMode           : 58
createOpts           : 45
createOwner          : 58
createPrimary        : 79 295
createStmt           : 4 28
createTable          : 74 75
createTableList      : 57 74
createUnique         : 78
current              : 193
datatype             : 133 139 141 142 171 172 173 173 174 174 175 175 176 176 177 177 178 178 179 179 186 187 194 195 195 196 196 197 197 198 198 199 199 200 200 201 201 202 202 203 203 203 204 204 204 205 205 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 222 222 223 223 223 224 224 224 225 225 226 226 227 228 229 230 231 232 233 234 235 236 244 245 386
datePart             : 192
dateSource           : 153
declaracion_item     : 406 407
declaracion_list     : 404 406
declareStmt          : 398
defaultVal           : 121 299
default_item         : 408
default_opt          : 417
deleteStmt           : 10 34
dolarEndProcedure    : 431 432
dropStmt             : 7 31
else_                : 19
elsif_               : 23 24
endProcedure         : 431 432
executeItem          : 442 443
executePL            : 16
executeParams        : 442
expBool              : 134 183 248 248 249 249 250 251 252 340 352 360
expComp              : 246
expSubq              : 247
expresion            : 19 25 40 328 417 426 429 430 444
extract              : 191
fromBody             : 333 334 382
fromCl               : 312 313 314 315 388
funcCall             : 190 441
functionStmt         : 14 38
groupByCl            : 312 313 314 315
groupList            : 354 356 357
havingCl             : 354
idList               : 46 84 85 86 86 89 279 380
idOrLiteral          : 262 262 263 263 264 264 265 265 266 266 267 267 268 268 269 269
idOrString           : 57 58 277 278 279 282 284 304 305 306 307 330 331 336
ifExists             : 279 304 305 306 307
ifNotExists          : 57 58 61
ifStmt               : 17 39
indexNullS           : 46
indexasc_desc        : 46
inheritsOpt          : 57
init                 : 0
insertStmt           : 8 32
intervalFields       : 109
joinCl               : 338 339
joinList             : 314 315
joinList2            : 337 338
joinOpt              : 340 341 342
labelEnd             : 398
languageProcedure    : 431 432
likeOpt              : 392
limitCl              : 312 313 314 315
literal              : 126 162 163 183 184 189
literalList          : 117 162
nameList             : 341 343
nullOpt              : 122 298
null_opt             : 408
offsetLimit          : 374 375
optAlias             : 326 327 335 340 341 342
optBoolPredicate     : 252
optElse              : 180
optParams            : 103 104 105 106 107 108
optsExtract          : 143 144
orReplace            : 58 431 432
orderByCl            : 312 313 314
orderByElem          : 364 365
orderList            : 362 364
orderNull            : 366 367
orderOpts            : 366 367
ownerOPts            : 283
param_item           : 399 400
paramsColumn         : 379
paramsList           : 61 136 171 379
params_list          : 396 399 431
primaryOpt           : 124
procedureStmt        : 15
referencesOpt        : 125
returnStmt           : 424
returnsStmt          : 396 397
selectList           : 325 326
selectListParams     : 326 327
selectParams         : 312 313 314 315 321
selectStmt           : 13 37 135 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 243 244 245 316 316 317 317 318 318 319 336
showStmt             : 5 29
stmt                 : 2 3 423
stmtList             : 1 2
stringExp            : 237
subqValues           : 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236
tableExp             : 320 333
tableOpt             : 389
timeStamp            : 143 161
truncateStmt         : 11 35
types                : 76 293 300 401 402 408
unique_index         : 46
updateCols           : 382 383
updateExp            : 385
updateStmt           : 9 33
updateVals           : 383 384
useStmt              : 12 36
using_hash_index     : 46
whereCl              : 46 312 313 314 315 382 388

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . stmtList
    (2) stmtList -> . stmtList stmt
    (3) stmtList -> . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (441) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (429) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> . ID S_IGUAL expresion

    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 26

    init                           shift and go to state 1
    stmtList                       shift and go to state 2
    stmt                           shift and go to state 3
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17
    asignacionStmt                 shift and go to state 19

state 1

    (0) S' -> init .



state 2

    (1) init -> stmtList .
    (2) stmtList -> stmtList . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (441) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (429) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> . ID S_IGUAL expresion

    $end            reduce using rule 1 (init -> stmtList .)
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18
    ID              shift and go to state 26

    stmt                           shift and go to state 33
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17
    asignacionStmt                 shift and go to state 19

state 3

    (3) stmtList -> stmt .

    R_CREATE        reduce using rule 3 (stmtList -> stmt .)
    R_SHOW          reduce using rule 3 (stmtList -> stmt .)
    R_ALTER         reduce using rule 3 (stmtList -> stmt .)
    R_DROP          reduce using rule 3 (stmtList -> stmt .)
    R_INSERT        reduce using rule 3 (stmtList -> stmt .)
    R_UPDATE        reduce using rule 3 (stmtList -> stmt .)
    R_DELETE        reduce using rule 3 (stmtList -> stmt .)
    R_TRUNCATE      reduce using rule 3 (stmtList -> stmt .)
    R_USE           reduce using rule 3 (stmtList -> stmt .)
    R_SELECT        reduce using rule 3 (stmtList -> stmt .)
    S_PARIZQ        reduce using rule 3 (stmtList -> stmt .)
    R_EXECUTE       reduce using rule 3 (stmtList -> stmt .)
    R_IF            reduce using rule 3 (stmtList -> stmt .)
    ID              reduce using rule 3 (stmtList -> stmt .)
    $end            reduce using rule 3 (stmtList -> stmt .)


state 4

    (4) stmt -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 34


state 5

    (5) stmt -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 35


state 6

    (6) stmt -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 36


state 7

    (7) stmt -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 37


state 8

    (8) stmt -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 38


state 9

    (9) stmt -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 39


state 10

    (10) stmt -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 40


state 11

    (11) stmt -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 41


state 12

    (12) stmt -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 42


state 13

    (13) stmt -> selectStmt . S_PUNTOCOMA
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 43
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 14

    (14) stmt -> functionStmt .

    R_CREATE        reduce using rule 14 (stmt -> functionStmt .)
    R_SHOW          reduce using rule 14 (stmt -> functionStmt .)
    R_ALTER         reduce using rule 14 (stmt -> functionStmt .)
    R_DROP          reduce using rule 14 (stmt -> functionStmt .)
    R_INSERT        reduce using rule 14 (stmt -> functionStmt .)
    R_UPDATE        reduce using rule 14 (stmt -> functionStmt .)
    R_DELETE        reduce using rule 14 (stmt -> functionStmt .)
    R_TRUNCATE      reduce using rule 14 (stmt -> functionStmt .)
    R_USE           reduce using rule 14 (stmt -> functionStmt .)
    R_SELECT        reduce using rule 14 (stmt -> functionStmt .)
    S_PARIZQ        reduce using rule 14 (stmt -> functionStmt .)
    R_EXECUTE       reduce using rule 14 (stmt -> functionStmt .)
    R_IF            reduce using rule 14 (stmt -> functionStmt .)
    ID              reduce using rule 14 (stmt -> functionStmt .)
    $end            reduce using rule 14 (stmt -> functionStmt .)
    R_END           reduce using rule 14 (stmt -> functionStmt .)
    R_RETURN        reduce using rule 14 (stmt -> functionStmt .)
    S_DOLAR         reduce using rule 14 (stmt -> functionStmt .)


state 15

    (15) stmt -> procedureStmt .

    R_CREATE        reduce using rule 15 (stmt -> procedureStmt .)
    R_SHOW          reduce using rule 15 (stmt -> procedureStmt .)
    R_ALTER         reduce using rule 15 (stmt -> procedureStmt .)
    R_DROP          reduce using rule 15 (stmt -> procedureStmt .)
    R_INSERT        reduce using rule 15 (stmt -> procedureStmt .)
    R_UPDATE        reduce using rule 15 (stmt -> procedureStmt .)
    R_DELETE        reduce using rule 15 (stmt -> procedureStmt .)
    R_TRUNCATE      reduce using rule 15 (stmt -> procedureStmt .)
    R_USE           reduce using rule 15 (stmt -> procedureStmt .)
    R_SELECT        reduce using rule 15 (stmt -> procedureStmt .)
    S_PARIZQ        reduce using rule 15 (stmt -> procedureStmt .)
    R_EXECUTE       reduce using rule 15 (stmt -> procedureStmt .)
    R_IF            reduce using rule 15 (stmt -> procedureStmt .)
    ID              reduce using rule 15 (stmt -> procedureStmt .)
    $end            reduce using rule 15 (stmt -> procedureStmt .)
    R_END           reduce using rule 15 (stmt -> procedureStmt .)
    R_RETURN        reduce using rule 15 (stmt -> procedureStmt .)
    S_DOLAR         reduce using rule 15 (stmt -> procedureStmt .)


state 16

    (16) stmt -> executePL . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 47


state 17

    (17) stmt -> ifStmt . R_END R_IF S_PUNTOCOMA

    R_END           shift and go to state 48


state 18

    (19) ifStmt -> R_IF . S_PARIZQ expresion S_PARDER R_THEN List_body else_

    S_PARIZQ        shift and go to state 49


state 19

    (18) stmt -> asignacionStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 50


state 20

    (44) createStmt -> R_CREATE . createBody
    (396) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> R_CREATE . orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> R_CREATE . orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (45) createBody -> . createOpts
    (59) orReplace -> . R_OR R_REPLACE
    (60) orReplace -> .
    (46) createOpts -> . unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (57) createOpts -> . R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (58) createOpts -> . orReplace R_DATABASE ifNotExists idOrString createOwner createMode
    (61) createOpts -> . R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (47) unique_index -> . R_UNIQUE
    (48) unique_index -> .

    R_FUNCTION      shift and go to state 52
    R_OR            shift and go to state 55
    R_PROCEDURE     reduce using rule 60 (orReplace -> .)
    R_DATABASE      reduce using rule 60 (orReplace -> .)
    R_TABLE         shift and go to state 57
    R_TYPE          shift and go to state 58
    R_UNIQUE        shift and go to state 59
    R_INDEX         reduce using rule 48 (unique_index -> .)

    createBody                     shift and go to state 51
    orReplace                      shift and go to state 53
    createOpts                     shift and go to state 54
    unique_index                   shift and go to state 56

state 21

    (392) showStmt -> R_SHOW . R_DATABASES likeOpt

    R_DATABASES     shift and go to state 60


state 22

    (277) alterStmt -> R_ALTER . R_DATABASE idOrString alterDb
    (278) alterStmt -> R_ALTER . R_TABLE idOrString alterTableList
    (279) alterStmt -> R_ALTER . R_INDEX ifExists idOrString R_ALTER col_op idList

    R_DATABASE      shift and go to state 61
    R_TABLE         shift and go to state 62
    R_INDEX         shift and go to state 63


state 23

    (304) dropStmt -> R_DROP . R_TABLE ifExists idOrString
    (305) dropStmt -> R_DROP . R_DATABASE ifExists idOrString
    (306) dropStmt -> R_DROP . R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> R_DROP . R_INDEX concurrenly ifExists idOrString

    R_TABLE         shift and go to state 64
    R_DATABASE      shift and go to state 65
    R_PROCEDURE     shift and go to state 66
    R_INDEX         shift and go to state 67


state 24

    (319) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 68

state 25

    (379) insertStmt -> R_INSERT . R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    R_INTO          shift and go to state 69


state 26

    (429) asignacionStmt -> ID . S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> ID . S_IGUAL expresion

    S_DOSPUNTOS     shift and go to state 70
    S_IGUAL         shift and go to state 71


state 27

    (382) updateStmt -> R_UPDATE . fromBody R_SET updateCols whereCl
    (335) fromBody -> . ID optAlias
    (336) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 73
    S_PARIZQ        shift and go to state 74

    fromBody                       shift and go to state 72

state 28

    (388) deleteStmt -> R_DELETE . fromCl whereCl
    (320) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 76

    fromCl                         shift and go to state 75

state 29

    (389) truncateStmt -> R_TRUNCATE . tableOpt ID
    (390) tableOpt -> . R_TABLE
    (391) tableOpt -> .

    R_TABLE         shift and go to state 78
    ID              reduce using rule 391 (tableOpt -> .)

    tableOpt                       shift and go to state 77

state 30

    (395) useStmt -> R_USE . ID

    ID              shift and go to state 79


state 31

    (312) selectStmt -> R_SELECT . R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl limitCl
    (321) selectStmt -> R_SELECT . selectParams
    (324) selectParams -> . O_PRODUCTO
    (325) selectParams -> . selectList
    (326) selectList -> . selectList S_COMA selectListParams optAlias
    (327) selectList -> . selectListParams optAlias
    (328) selectListParams -> . expresion
    (329) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_DISTINCT      shift and go to state 80
    O_PRODUCTO      shift and go to state 82
    ID              shift and go to state 86
    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    selectParams                   shift and go to state 81
    selectList                     shift and go to state 83
    selectListParams               shift and go to state 84
    expresion                      shift and go to state 85
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 32

    (441) executePL -> R_EXECUTE . funcCall
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER

    ID              shift and go to state 124
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111

    funcCall                       shift and go to state 123

state 33

    (2) stmtList -> stmtList stmt .

    R_CREATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SHOW          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_ALTER         reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DROP          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_INSERT        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_UPDATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DELETE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_TRUNCATE      reduce using rule 2 (stmtList -> stmtList stmt .)
    R_USE           reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SELECT        reduce using rule 2 (stmtList -> stmtList stmt .)
    S_PARIZQ        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_EXECUTE       reduce using rule 2 (stmtList -> stmtList stmt .)
    R_IF            reduce using rule 2 (stmtList -> stmtList stmt .)
    ID              reduce using rule 2 (stmtList -> stmtList stmt .)
    $end            reduce using rule 2 (stmtList -> stmtList stmt .)


state 34

    (4) stmt -> createStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    ID              reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    $end            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_END           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)


state 35

    (5) stmt -> showStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    ID              reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    $end            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_END           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)


state 36

    (6) stmt -> alterStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    ID              reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    $end            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_END           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)


state 37

    (7) stmt -> dropStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    ID              reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    $end            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_END           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)


state 38

    (8) stmt -> insertStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    ID              reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    $end            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_END           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)


state 39

    (9) stmt -> updateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    ID              reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    $end            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)


state 40

    (10) stmt -> deleteStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    ID              reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    $end            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_END           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)


state 41

    (11) stmt -> truncateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    ID              reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    $end            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)


state 42

    (12) stmt -> useStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    ID              reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    $end            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_END           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)


state 43

    (13) stmt -> selectStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    ID              reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    $end            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_END           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)


state 44

    (316) selectStmt -> selectStmt R_UNION . allOpt selectStmt
    (322) allOpt -> . R_ALL
    (323) allOpt -> .

    R_ALL           shift and go to state 126
    R_SELECT        reduce using rule 323 (allOpt -> .)
    S_PARIZQ        reduce using rule 323 (allOpt -> .)

    allOpt                         shift and go to state 125

state 45

    (317) selectStmt -> selectStmt R_INTERSECT . allOpt selectStmt
    (322) allOpt -> . R_ALL
    (323) allOpt -> .

    R_ALL           shift and go to state 126
    R_SELECT        reduce using rule 323 (allOpt -> .)
    S_PARIZQ        reduce using rule 323 (allOpt -> .)

    allOpt                         shift and go to state 127

state 46

    (318) selectStmt -> selectStmt R_EXCEPT . allOpt selectStmt
    (322) allOpt -> . R_ALL
    (323) allOpt -> .

    R_ALL           shift and go to state 126
    R_SELECT        reduce using rule 323 (allOpt -> .)
    S_PARIZQ        reduce using rule 323 (allOpt -> .)

    allOpt                         shift and go to state 128

state 47

    (16) stmt -> executePL S_PUNTOCOMA .

    R_CREATE        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_SHOW          reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_ALTER         reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_DROP          reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_INSERT        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_DELETE        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_USE           reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_SELECT        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_IF            reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    ID              reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    $end            reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_END           reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    R_RETURN        reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 16 (stmt -> executePL S_PUNTOCOMA .)


state 48

    (17) stmt -> ifStmt R_END . R_IF S_PUNTOCOMA

    R_IF            shift and go to state 129


state 49

    (19) ifStmt -> R_IF S_PARIZQ . expresion S_PARDER R_THEN List_body else_
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 130
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 50

    (18) stmt -> asignacionStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    ID              reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    $end            reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)


state 51

    (44) createStmt -> R_CREATE createBody .

    S_PUNTOCOMA     reduce using rule 44 (createStmt -> R_CREATE createBody .)


state 52

    (396) functionStmt -> R_CREATE R_FUNCTION . ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> R_CREATE R_FUNCTION . ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    ID              shift and go to state 132


state 53

    (431) procedureStmt -> R_CREATE orReplace . R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> R_CREATE orReplace . R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (58) createOpts -> orReplace . R_DATABASE ifNotExists idOrString createOwner createMode

    R_PROCEDURE     shift and go to state 133
    R_DATABASE      shift and go to state 134


state 54

    (45) createBody -> createOpts .

    S_PUNTOCOMA     reduce using rule 45 (createBody -> createOpts .)


state 55

    (59) orReplace -> R_OR . R_REPLACE

    R_REPLACE       shift and go to state 135


state 56

    (46) createOpts -> unique_index . R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    R_INDEX         shift and go to state 136


state 57

    (57) createOpts -> R_TABLE . ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (62) ifNotExists -> . R_IF R_NOT R_EXISTS
    (63) ifNotExists -> .

    R_IF            shift and go to state 138
    ID              reduce using rule 63 (ifNotExists -> .)
    STRING          reduce using rule 63 (ifNotExists -> .)
    CHARACTER       reduce using rule 63 (ifNotExists -> .)

    ifNotExists                    shift and go to state 137

state 58

    (61) createOpts -> R_TYPE . ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (62) ifNotExists -> . R_IF R_NOT R_EXISTS
    (63) ifNotExists -> .

    R_IF            shift and go to state 138
    ID              reduce using rule 63 (ifNotExists -> .)

    ifNotExists                    shift and go to state 139

state 59

    (47) unique_index -> R_UNIQUE .

    R_INDEX         reduce using rule 47 (unique_index -> R_UNIQUE .)


state 60

    (392) showStmt -> R_SHOW R_DATABASES . likeOpt
    (393) likeOpt -> . R_LIKE STRING
    (394) likeOpt -> .

    R_LIKE          shift and go to state 141
    S_PUNTOCOMA     reduce using rule 394 (likeOpt -> .)

    likeOpt                        shift and go to state 140

state 61

    (277) alterStmt -> R_ALTER R_DATABASE . idOrString alterDb
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 142

state 62

    (278) alterStmt -> R_ALTER R_TABLE . idOrString alterTableList
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 146

state 63

    (279) alterStmt -> R_ALTER R_INDEX . ifExists idOrString R_ALTER col_op idList
    (308) ifExists -> . R_IF R_EXISTS
    (309) ifExists -> .

    R_IF            shift and go to state 148
    ID              reduce using rule 309 (ifExists -> .)
    STRING          reduce using rule 309 (ifExists -> .)
    CHARACTER       reduce using rule 309 (ifExists -> .)

    ifExists                       shift and go to state 147

state 64

    (304) dropStmt -> R_DROP R_TABLE . ifExists idOrString
    (308) ifExists -> . R_IF R_EXISTS
    (309) ifExists -> .

    R_IF            shift and go to state 148
    ID              reduce using rule 309 (ifExists -> .)
    STRING          reduce using rule 309 (ifExists -> .)
    CHARACTER       reduce using rule 309 (ifExists -> .)

    ifExists                       shift and go to state 149

state 65

    (305) dropStmt -> R_DROP R_DATABASE . ifExists idOrString
    (308) ifExists -> . R_IF R_EXISTS
    (309) ifExists -> .

    R_IF            shift and go to state 148
    ID              reduce using rule 309 (ifExists -> .)
    STRING          reduce using rule 309 (ifExists -> .)
    CHARACTER       reduce using rule 309 (ifExists -> .)

    ifExists                       shift and go to state 150

state 66

    (306) dropStmt -> R_DROP R_PROCEDURE . ifExists idOrString S_PARIZQ S_PARDER
    (308) ifExists -> . R_IF R_EXISTS
    (309) ifExists -> .

    R_IF            shift and go to state 148
    ID              reduce using rule 309 (ifExists -> .)
    STRING          reduce using rule 309 (ifExists -> .)
    CHARACTER       reduce using rule 309 (ifExists -> .)

    ifExists                       shift and go to state 151

state 67

    (307) dropStmt -> R_DROP R_INDEX . concurrenly ifExists idOrString
    (310) concurrenly -> . R_CONCURRENTLY
    (311) concurrenly -> .

    R_CONCURRENTLY  shift and go to state 153
    R_IF            reduce using rule 311 (concurrenly -> .)
    ID              reduce using rule 311 (concurrenly -> .)
    STRING          reduce using rule 311 (concurrenly -> .)
    CHARACTER       reduce using rule 311 (concurrenly -> .)

    concurrenly                    shift and go to state 152

state 68

    (319) selectStmt -> S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 154
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 69

    (379) insertStmt -> R_INSERT R_INTO . ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 155


state 70

    (429) asignacionStmt -> ID S_DOSPUNTOS . S_IGUAL expresion

    S_IGUAL         shift and go to state 156


state 71

    (430) asignacionStmt -> ID S_IGUAL . expresion
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 157
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 72

    (382) updateStmt -> R_UPDATE fromBody . R_SET updateCols whereCl

    R_SET           shift and go to state 158


state 73

    (335) fromBody -> ID . optAlias
    (330) optAlias -> . R_AS idOrString
    (331) optAlias -> . idOrString
    (332) optAlias -> .
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    R_AS            shift and go to state 160
    R_SET           reduce using rule 332 (optAlias -> .)
    S_COMA          reduce using rule 332 (optAlias -> .)
    R_WHERE         reduce using rule 332 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 332 (optAlias -> .)
    R_NATURAL       reduce using rule 332 (optAlias -> .)
    R_INNER         reduce using rule 332 (optAlias -> .)
    R_LEFT          reduce using rule 332 (optAlias -> .)
    R_RIGHT         reduce using rule 332 (optAlias -> .)
    R_FULL          reduce using rule 332 (optAlias -> .)
    R_GROUP         reduce using rule 332 (optAlias -> .)
    R_ORDER         reduce using rule 332 (optAlias -> .)
    R_LIMIT         reduce using rule 332 (optAlias -> .)
    R_UNION         reduce using rule 332 (optAlias -> .)
    R_INTERSECT     reduce using rule 332 (optAlias -> .)
    R_EXCEPT        reduce using rule 332 (optAlias -> .)
    S_PARDER        reduce using rule 332 (optAlias -> .)
    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    optAlias                       shift and go to state 159
    idOrString                     shift and go to state 161

state 74

    (336) fromBody -> S_PARIZQ . selectStmt S_PARDER R_AS idOrString
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 162

state 75

    (388) deleteStmt -> R_DELETE fromCl . whereCl
    (352) whereCl -> . R_WHERE expBool
    (353) whereCl -> .

    R_WHERE         shift and go to state 164
    S_PUNTOCOMA     reduce using rule 353 (whereCl -> .)

    whereCl                        shift and go to state 163

state 76

    (320) fromCl -> R_FROM . tableExp
    (333) tableExp -> . tableExp S_COMA fromBody
    (334) tableExp -> . fromBody
    (335) fromBody -> . ID optAlias
    (336) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 73
    S_PARIZQ        shift and go to state 74

    tableExp                       shift and go to state 165
    fromBody                       shift and go to state 166

state 77

    (389) truncateStmt -> R_TRUNCATE tableOpt . ID

    ID              shift and go to state 167


state 78

    (390) tableOpt -> R_TABLE .

    ID              reduce using rule 390 (tableOpt -> R_TABLE .)


state 79

    (395) useStmt -> R_USE ID .

    S_PUNTOCOMA     reduce using rule 395 (useStmt -> R_USE ID .)


state 80

    (312) selectStmt -> R_SELECT R_DISTINCT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (324) selectParams -> . O_PRODUCTO
    (325) selectParams -> . selectList
    (326) selectList -> . selectList S_COMA selectListParams optAlias
    (327) selectList -> . selectListParams optAlias
    (328) selectListParams -> . expresion
    (329) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    O_PRODUCTO      shift and go to state 82
    ID              shift and go to state 86
    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    selectParams                   shift and go to state 168
    selectList                     shift and go to state 83
    selectListParams               shift and go to state 84
    expresion                      shift and go to state 85
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 81

    (313) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl limitCl
    (321) selectStmt -> R_SELECT selectParams .
    (320) fromCl -> . R_FROM tableExp

    S_PUNTOCOMA     reduce using rule 321 (selectStmt -> R_SELECT selectParams .)
    R_UNION         reduce using rule 321 (selectStmt -> R_SELECT selectParams .)
    R_INTERSECT     reduce using rule 321 (selectStmt -> R_SELECT selectParams .)
    R_EXCEPT        reduce using rule 321 (selectStmt -> R_SELECT selectParams .)
    S_PARDER        reduce using rule 321 (selectStmt -> R_SELECT selectParams .)
    R_FROM          shift and go to state 76

    fromCl                         shift and go to state 169

state 82

    (324) selectParams -> O_PRODUCTO .

    R_FROM          reduce using rule 324 (selectParams -> O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 324 (selectParams -> O_PRODUCTO .)
    R_UNION         reduce using rule 324 (selectParams -> O_PRODUCTO .)
    R_INTERSECT     reduce using rule 324 (selectParams -> O_PRODUCTO .)
    R_EXCEPT        reduce using rule 324 (selectParams -> O_PRODUCTO .)
    S_PARDER        reduce using rule 324 (selectParams -> O_PRODUCTO .)


state 83

    (325) selectParams -> selectList .
    (326) selectList -> selectList . S_COMA selectListParams optAlias

    R_FROM          reduce using rule 325 (selectParams -> selectList .)
    S_PUNTOCOMA     reduce using rule 325 (selectParams -> selectList .)
    R_UNION         reduce using rule 325 (selectParams -> selectList .)
    R_INTERSECT     reduce using rule 325 (selectParams -> selectList .)
    R_EXCEPT        reduce using rule 325 (selectParams -> selectList .)
    S_PARDER        reduce using rule 325 (selectParams -> selectList .)
    S_COMA          shift and go to state 170


state 84

    (327) selectList -> selectListParams . optAlias
    (330) optAlias -> . R_AS idOrString
    (331) optAlias -> . idOrString
    (332) optAlias -> .
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    R_AS            shift and go to state 160
    S_COMA          reduce using rule 332 (optAlias -> .)
    R_FROM          reduce using rule 332 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 332 (optAlias -> .)
    R_UNION         reduce using rule 332 (optAlias -> .)
    R_INTERSECT     reduce using rule 332 (optAlias -> .)
    R_EXCEPT        reduce using rule 332 (optAlias -> .)
    S_PARDER        reduce using rule 332 (optAlias -> .)
    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    optAlias                       shift and go to state 171
    idOrString                     shift and go to state 161

state 85

    (328) selectListParams -> expresion .

    R_AS            reduce using rule 328 (selectListParams -> expresion .)
    ID              reduce using rule 328 (selectListParams -> expresion .)
    STRING          reduce using rule 328 (selectListParams -> expresion .)
    CHARACTER       reduce using rule 328 (selectListParams -> expresion .)
    S_COMA          reduce using rule 328 (selectListParams -> expresion .)
    R_FROM          reduce using rule 328 (selectListParams -> expresion .)
    S_PUNTOCOMA     reduce using rule 328 (selectListParams -> expresion .)
    R_UNION         reduce using rule 328 (selectListParams -> expresion .)
    R_INTERSECT     reduce using rule 328 (selectListParams -> expresion .)
    R_EXCEPT        reduce using rule 328 (selectListParams -> expresion .)
    S_PARDER        reduce using rule 328 (selectListParams -> expresion .)


state 86

    (329) selectListParams -> ID . S_PUNTO O_PRODUCTO
    (260) columnName -> ID .
    (261) columnName -> ID . S_PUNTO ID
    (136) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (137) funcCall -> ID . S_PARIZQ S_PARDER

    S_PUNTO         shift and go to state 172
    O_SUMA          reduce using rule 260 (columnName -> ID .)
    O_RESTA         reduce using rule 260 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 260 (columnName -> ID .)
    O_DIVISION      reduce using rule 260 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 260 (columnName -> ID .)
    O_MODULAR       reduce using rule 260 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 260 (columnName -> ID .)
    R_IN            reduce using rule 260 (columnName -> ID .)
    R_NOT           reduce using rule 260 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 260 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 260 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 260 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 260 (columnName -> ID .)
    S_IGUAL         reduce using rule 260 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 260 (columnName -> ID .)
    R_IS            reduce using rule 260 (columnName -> ID .)
    R_BETWEEN       reduce using rule 260 (columnName -> ID .)
    R_ISNULL        reduce using rule 260 (columnName -> ID .)
    R_NOTNULL       reduce using rule 260 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 260 (columnName -> ID .)
    R_AS            reduce using rule 260 (columnName -> ID .)
    ID              reduce using rule 260 (columnName -> ID .)
    STRING          reduce using rule 260 (columnName -> ID .)
    CHARACTER       reduce using rule 260 (columnName -> ID .)
    S_COMA          reduce using rule 260 (columnName -> ID .)
    R_FROM          reduce using rule 260 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 260 (columnName -> ID .)
    R_UNION         reduce using rule 260 (columnName -> ID .)
    R_INTERSECT     reduce using rule 260 (columnName -> ID .)
    R_EXCEPT        reduce using rule 260 (columnName -> ID .)
    S_PARDER        reduce using rule 260 (columnName -> ID .)
    R_LIKE          reduce using rule 260 (columnName -> ID .)
    S_PARIZQ        shift and go to state 173


state 87

    (133) expresion -> datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype
    (244) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (195) expComp -> datatype . OL_MENORQUE datatype
    (196) expComp -> datatype . OL_MAYORQUE datatype
    (197) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (198) expComp -> datatype . OL_MENORIGUALQUE datatype
    (199) expComp -> datatype . S_IGUAL datatype
    (200) expComp -> datatype . OL_DISTINTODE datatype
    (201) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (204) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> datatype . R_ISNULL
    (207) expComp -> datatype . R_NOTNULL
    (208) expComp -> datatype . R_IS R_NULL
    (209) expComp -> datatype . R_IS R_TRUE
    (210) expComp -> datatype . R_IS R_FALSE
    (211) expComp -> datatype . R_IS R_UNKNOWN
    (212) expComp -> datatype . R_IS R_NOT R_NULL
    (213) expComp -> datatype . R_IS R_NOT R_TRUE
    (214) expComp -> datatype . R_IS R_NOT R_FALSE
    (215) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (216) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_AS            reduce using rule 133 (expresion -> datatype .)
    ID              reduce using rule 133 (expresion -> datatype .)
    STRING          reduce using rule 133 (expresion -> datatype .)
    CHARACTER       reduce using rule 133 (expresion -> datatype .)
    S_COMA          reduce using rule 133 (expresion -> datatype .)
    R_FROM          reduce using rule 133 (expresion -> datatype .)
    S_PUNTOCOMA     reduce using rule 133 (expresion -> datatype .)
    R_UNION         reduce using rule 133 (expresion -> datatype .)
    R_INTERSECT     reduce using rule 133 (expresion -> datatype .)
    R_EXCEPT        reduce using rule 133 (expresion -> datatype .)
    S_PARDER        reduce using rule 133 (expresion -> datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180
    R_IN            shift and go to state 181
    R_NOT           shift and go to state 182
    OL_MENORQUE     shift and go to state 183
    OL_MAYORQUE     shift and go to state 184
    OL_MAYORIGUALQUE shift and go to state 185
    OL_MENORIGUALQUE shift and go to state 186
    S_IGUAL         shift and go to state 187
    OL_DISTINTODE   shift and go to state 188
    R_IS            shift and go to state 189
    R_BETWEEN       shift and go to state 190
    R_ISNULL        shift and go to state 191
    R_NOTNULL       shift and go to state 192
    OL_ESIGUAL      shift and go to state 193


state 88

    (134) expresion -> expBool .
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 134 (expresion -> expBool .)
    ID              reduce using rule 134 (expresion -> expBool .)
    STRING          reduce using rule 134 (expresion -> expBool .)
    CHARACTER       reduce using rule 134 (expresion -> expBool .)
    S_COMA          reduce using rule 134 (expresion -> expBool .)
    R_FROM          reduce using rule 134 (expresion -> expBool .)
    S_PUNTOCOMA     reduce using rule 134 (expresion -> expBool .)
    R_UNION         reduce using rule 134 (expresion -> expBool .)
    R_INTERSECT     reduce using rule 134 (expresion -> expBool .)
    R_EXCEPT        reduce using rule 134 (expresion -> expBool .)
    S_PARDER        reduce using rule 134 (expresion -> expBool .)
    R_AND           shift and go to state 194
    R_OR            shift and go to state 195
    R_IS            shift and go to state 197

    optBoolPredicate               shift and go to state 196

state 89

    (135) expresion -> S_PARIZQ . selectStmt S_PARDER
    (194) datatype -> S_PARIZQ . datatype S_PARDER
    (251) expBool -> S_PARIZQ . expBool S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 198
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    selectStmt                     shift and go to state 199
    datatype                       shift and go to state 200
    expBool                        shift and go to state 201
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 90

    (187) datatype -> O_SUMA . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 202
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 91

    (186) datatype -> O_RESTA . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 206
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 92

    (180) datatype -> R_CASE . caseList optElse R_END
    (181) caseList -> . caseList caseWhen
    (182) caseList -> . caseWhen
    (183) caseWhen -> . R_WHEN expBool R_THEN literal

    R_WHEN          shift and go to state 209

    caseList                       shift and go to state 207
    caseWhen                       shift and go to state 208

state 93

    (188) datatype -> columnName .
    (239) stringExp -> columnName .

    O_SUMA          reduce using rule 188 (datatype -> columnName .)
    O_RESTA         reduce using rule 188 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 188 (datatype -> columnName .)
    O_DIVISION      reduce using rule 188 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 188 (datatype -> columnName .)
    O_MODULAR       reduce using rule 188 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 188 (datatype -> columnName .)
    R_IN            reduce using rule 188 (datatype -> columnName .)
    R_NOT           reduce using rule 188 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 188 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 188 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 188 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 188 (datatype -> columnName .)
    S_IGUAL         reduce using rule 188 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 188 (datatype -> columnName .)
    R_IS            reduce using rule 188 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 188 (datatype -> columnName .)
    R_ISNULL        reduce using rule 188 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 188 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 188 (datatype -> columnName .)
    R_AS            reduce using rule 188 (datatype -> columnName .)
    ID              reduce using rule 188 (datatype -> columnName .)
    STRING          reduce using rule 188 (datatype -> columnName .)
    CHARACTER       reduce using rule 188 (datatype -> columnName .)
    S_COMA          reduce using rule 188 (datatype -> columnName .)
    R_FROM          reduce using rule 188 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 188 (datatype -> columnName .)
    R_UNION         reduce using rule 188 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 188 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 188 (datatype -> columnName .)
    S_PARDER        reduce using rule 188 (datatype -> columnName .)
    R_LIKE          reduce using rule 239 (stringExp -> columnName .)


state 94

    (189) datatype -> literal .

    O_SUMA          reduce using rule 189 (datatype -> literal .)
    O_RESTA         reduce using rule 189 (datatype -> literal .)
    O_PRODUCTO      reduce using rule 189 (datatype -> literal .)
    O_DIVISION      reduce using rule 189 (datatype -> literal .)
    O_EXPONENTE     reduce using rule 189 (datatype -> literal .)
    O_MODULAR       reduce using rule 189 (datatype -> literal .)
    OC_CONCATENAR   reduce using rule 189 (datatype -> literal .)
    R_IN            reduce using rule 189 (datatype -> literal .)
    R_NOT           reduce using rule 189 (datatype -> literal .)
    OL_MENORQUE     reduce using rule 189 (datatype -> literal .)
    OL_MAYORQUE     reduce using rule 189 (datatype -> literal .)
    OL_MAYORIGUALQUE reduce using rule 189 (datatype -> literal .)
    OL_MENORIGUALQUE reduce using rule 189 (datatype -> literal .)
    S_IGUAL         reduce using rule 189 (datatype -> literal .)
    OL_DISTINTODE   reduce using rule 189 (datatype -> literal .)
    R_IS            reduce using rule 189 (datatype -> literal .)
    R_BETWEEN       reduce using rule 189 (datatype -> literal .)
    R_ISNULL        reduce using rule 189 (datatype -> literal .)
    R_NOTNULL       reduce using rule 189 (datatype -> literal .)
    OL_ESIGUAL      reduce using rule 189 (datatype -> literal .)
    R_AS            reduce using rule 189 (datatype -> literal .)
    ID              reduce using rule 189 (datatype -> literal .)
    STRING          reduce using rule 189 (datatype -> literal .)
    CHARACTER       reduce using rule 189 (datatype -> literal .)
    S_COMA          reduce using rule 189 (datatype -> literal .)
    R_FROM          reduce using rule 189 (datatype -> literal .)
    S_PUNTOCOMA     reduce using rule 189 (datatype -> literal .)
    R_UNION         reduce using rule 189 (datatype -> literal .)
    R_INTERSECT     reduce using rule 189 (datatype -> literal .)
    R_EXCEPT        reduce using rule 189 (datatype -> literal .)
    S_PARDER        reduce using rule 189 (datatype -> literal .)
    R_AND           reduce using rule 189 (datatype -> literal .)
    R_OR            reduce using rule 189 (datatype -> literal .)
    R_GROUP         reduce using rule 189 (datatype -> literal .)
    R_ORDER         reduce using rule 189 (datatype -> literal .)
    R_LIMIT         reduce using rule 189 (datatype -> literal .)
    R_THEN          reduce using rule 189 (datatype -> literal .)
    R_NATURAL       reduce using rule 189 (datatype -> literal .)
    R_INNER         reduce using rule 189 (datatype -> literal .)
    R_LEFT          reduce using rule 189 (datatype -> literal .)
    R_RIGHT         reduce using rule 189 (datatype -> literal .)
    R_FULL          reduce using rule 189 (datatype -> literal .)
    R_WHERE         reduce using rule 189 (datatype -> literal .)
    R_ALL           reduce using rule 189 (datatype -> literal .)
    R_ANY           reduce using rule 189 (datatype -> literal .)
    R_SOME          reduce using rule 189 (datatype -> literal .)


state 95

    (190) datatype -> funcCall .

    O_SUMA          reduce using rule 190 (datatype -> funcCall .)
    O_RESTA         reduce using rule 190 (datatype -> funcCall .)
    O_PRODUCTO      reduce using rule 190 (datatype -> funcCall .)
    O_DIVISION      reduce using rule 190 (datatype -> funcCall .)
    O_EXPONENTE     reduce using rule 190 (datatype -> funcCall .)
    O_MODULAR       reduce using rule 190 (datatype -> funcCall .)
    OC_CONCATENAR   reduce using rule 190 (datatype -> funcCall .)
    R_IN            reduce using rule 190 (datatype -> funcCall .)
    R_NOT           reduce using rule 190 (datatype -> funcCall .)
    OL_MENORQUE     reduce using rule 190 (datatype -> funcCall .)
    OL_MAYORQUE     reduce using rule 190 (datatype -> funcCall .)
    OL_MAYORIGUALQUE reduce using rule 190 (datatype -> funcCall .)
    OL_MENORIGUALQUE reduce using rule 190 (datatype -> funcCall .)
    S_IGUAL         reduce using rule 190 (datatype -> funcCall .)
    OL_DISTINTODE   reduce using rule 190 (datatype -> funcCall .)
    R_IS            reduce using rule 190 (datatype -> funcCall .)
    R_BETWEEN       reduce using rule 190 (datatype -> funcCall .)
    R_ISNULL        reduce using rule 190 (datatype -> funcCall .)
    R_NOTNULL       reduce using rule 190 (datatype -> funcCall .)
    OL_ESIGUAL      reduce using rule 190 (datatype -> funcCall .)
    R_AS            reduce using rule 190 (datatype -> funcCall .)
    ID              reduce using rule 190 (datatype -> funcCall .)
    STRING          reduce using rule 190 (datatype -> funcCall .)
    CHARACTER       reduce using rule 190 (datatype -> funcCall .)
    S_COMA          reduce using rule 190 (datatype -> funcCall .)
    R_FROM          reduce using rule 190 (datatype -> funcCall .)
    S_PUNTOCOMA     reduce using rule 190 (datatype -> funcCall .)
    R_UNION         reduce using rule 190 (datatype -> funcCall .)
    R_INTERSECT     reduce using rule 190 (datatype -> funcCall .)
    R_EXCEPT        reduce using rule 190 (datatype -> funcCall .)
    S_PARDER        reduce using rule 190 (datatype -> funcCall .)
    R_AND           reduce using rule 190 (datatype -> funcCall .)
    R_OR            reduce using rule 190 (datatype -> funcCall .)
    R_GROUP         reduce using rule 190 (datatype -> funcCall .)
    R_ORDER         reduce using rule 190 (datatype -> funcCall .)
    R_LIMIT         reduce using rule 190 (datatype -> funcCall .)
    R_THEN          reduce using rule 190 (datatype -> funcCall .)
    R_NATURAL       reduce using rule 190 (datatype -> funcCall .)
    R_INNER         reduce using rule 190 (datatype -> funcCall .)
    R_LEFT          reduce using rule 190 (datatype -> funcCall .)
    R_RIGHT         reduce using rule 190 (datatype -> funcCall .)
    R_FULL          reduce using rule 190 (datatype -> funcCall .)
    R_WHERE         reduce using rule 190 (datatype -> funcCall .)
    R_ALL           reduce using rule 190 (datatype -> funcCall .)
    R_ANY           reduce using rule 190 (datatype -> funcCall .)
    R_SOME          reduce using rule 190 (datatype -> funcCall .)


state 96

    (191) datatype -> extract .

    O_SUMA          reduce using rule 191 (datatype -> extract .)
    O_RESTA         reduce using rule 191 (datatype -> extract .)
    O_PRODUCTO      reduce using rule 191 (datatype -> extract .)
    O_DIVISION      reduce using rule 191 (datatype -> extract .)
    O_EXPONENTE     reduce using rule 191 (datatype -> extract .)
    O_MODULAR       reduce using rule 191 (datatype -> extract .)
    OC_CONCATENAR   reduce using rule 191 (datatype -> extract .)
    R_IN            reduce using rule 191 (datatype -> extract .)
    R_NOT           reduce using rule 191 (datatype -> extract .)
    OL_MENORQUE     reduce using rule 191 (datatype -> extract .)
    OL_MAYORQUE     reduce using rule 191 (datatype -> extract .)
    OL_MAYORIGUALQUE reduce using rule 191 (datatype -> extract .)
    OL_MENORIGUALQUE reduce using rule 191 (datatype -> extract .)
    S_IGUAL         reduce using rule 191 (datatype -> extract .)
    OL_DISTINTODE   reduce using rule 191 (datatype -> extract .)
    R_IS            reduce using rule 191 (datatype -> extract .)
    R_BETWEEN       reduce using rule 191 (datatype -> extract .)
    R_ISNULL        reduce using rule 191 (datatype -> extract .)
    R_NOTNULL       reduce using rule 191 (datatype -> extract .)
    OL_ESIGUAL      reduce using rule 191 (datatype -> extract .)
    R_AS            reduce using rule 191 (datatype -> extract .)
    ID              reduce using rule 191 (datatype -> extract .)
    STRING          reduce using rule 191 (datatype -> extract .)
    CHARACTER       reduce using rule 191 (datatype -> extract .)
    S_COMA          reduce using rule 191 (datatype -> extract .)
    R_FROM          reduce using rule 191 (datatype -> extract .)
    S_PUNTOCOMA     reduce using rule 191 (datatype -> extract .)
    R_UNION         reduce using rule 191 (datatype -> extract .)
    R_INTERSECT     reduce using rule 191 (datatype -> extract .)
    R_EXCEPT        reduce using rule 191 (datatype -> extract .)
    S_PARDER        reduce using rule 191 (datatype -> extract .)
    R_AND           reduce using rule 191 (datatype -> extract .)
    R_OR            reduce using rule 191 (datatype -> extract .)
    R_GROUP         reduce using rule 191 (datatype -> extract .)
    R_ORDER         reduce using rule 191 (datatype -> extract .)
    R_LIMIT         reduce using rule 191 (datatype -> extract .)
    R_THEN          reduce using rule 191 (datatype -> extract .)
    R_NATURAL       reduce using rule 191 (datatype -> extract .)
    R_INNER         reduce using rule 191 (datatype -> extract .)
    R_LEFT          reduce using rule 191 (datatype -> extract .)
    R_RIGHT         reduce using rule 191 (datatype -> extract .)
    R_FULL          reduce using rule 191 (datatype -> extract .)
    R_WHERE         reduce using rule 191 (datatype -> extract .)
    R_ALL           reduce using rule 191 (datatype -> extract .)
    R_ANY           reduce using rule 191 (datatype -> extract .)
    R_SOME          reduce using rule 191 (datatype -> extract .)


state 97

    (192) datatype -> datePart .

    O_SUMA          reduce using rule 192 (datatype -> datePart .)
    O_RESTA         reduce using rule 192 (datatype -> datePart .)
    O_PRODUCTO      reduce using rule 192 (datatype -> datePart .)
    O_DIVISION      reduce using rule 192 (datatype -> datePart .)
    O_EXPONENTE     reduce using rule 192 (datatype -> datePart .)
    O_MODULAR       reduce using rule 192 (datatype -> datePart .)
    OC_CONCATENAR   reduce using rule 192 (datatype -> datePart .)
    R_IN            reduce using rule 192 (datatype -> datePart .)
    R_NOT           reduce using rule 192 (datatype -> datePart .)
    OL_MENORQUE     reduce using rule 192 (datatype -> datePart .)
    OL_MAYORQUE     reduce using rule 192 (datatype -> datePart .)
    OL_MAYORIGUALQUE reduce using rule 192 (datatype -> datePart .)
    OL_MENORIGUALQUE reduce using rule 192 (datatype -> datePart .)
    S_IGUAL         reduce using rule 192 (datatype -> datePart .)
    OL_DISTINTODE   reduce using rule 192 (datatype -> datePart .)
    R_IS            reduce using rule 192 (datatype -> datePart .)
    R_BETWEEN       reduce using rule 192 (datatype -> datePart .)
    R_ISNULL        reduce using rule 192 (datatype -> datePart .)
    R_NOTNULL       reduce using rule 192 (datatype -> datePart .)
    OL_ESIGUAL      reduce using rule 192 (datatype -> datePart .)
    R_AS            reduce using rule 192 (datatype -> datePart .)
    ID              reduce using rule 192 (datatype -> datePart .)
    STRING          reduce using rule 192 (datatype -> datePart .)
    CHARACTER       reduce using rule 192 (datatype -> datePart .)
    S_COMA          reduce using rule 192 (datatype -> datePart .)
    R_FROM          reduce using rule 192 (datatype -> datePart .)
    S_PUNTOCOMA     reduce using rule 192 (datatype -> datePart .)
    R_UNION         reduce using rule 192 (datatype -> datePart .)
    R_INTERSECT     reduce using rule 192 (datatype -> datePart .)
    R_EXCEPT        reduce using rule 192 (datatype -> datePart .)
    S_PARDER        reduce using rule 192 (datatype -> datePart .)
    R_AND           reduce using rule 192 (datatype -> datePart .)
    R_OR            reduce using rule 192 (datatype -> datePart .)
    R_GROUP         reduce using rule 192 (datatype -> datePart .)
    R_ORDER         reduce using rule 192 (datatype -> datePart .)
    R_LIMIT         reduce using rule 192 (datatype -> datePart .)
    R_THEN          reduce using rule 192 (datatype -> datePart .)
    R_NATURAL       reduce using rule 192 (datatype -> datePart .)
    R_INNER         reduce using rule 192 (datatype -> datePart .)
    R_LEFT          reduce using rule 192 (datatype -> datePart .)
    R_RIGHT         reduce using rule 192 (datatype -> datePart .)
    R_FULL          reduce using rule 192 (datatype -> datePart .)
    R_WHERE         reduce using rule 192 (datatype -> datePart .)
    R_ALL           reduce using rule 192 (datatype -> datePart .)
    R_ANY           reduce using rule 192 (datatype -> datePart .)
    R_SOME          reduce using rule 192 (datatype -> datePart .)


state 98

    (193) datatype -> current .

    O_SUMA          reduce using rule 193 (datatype -> current .)
    O_RESTA         reduce using rule 193 (datatype -> current .)
    O_PRODUCTO      reduce using rule 193 (datatype -> current .)
    O_DIVISION      reduce using rule 193 (datatype -> current .)
    O_EXPONENTE     reduce using rule 193 (datatype -> current .)
    O_MODULAR       reduce using rule 193 (datatype -> current .)
    OC_CONCATENAR   reduce using rule 193 (datatype -> current .)
    R_IN            reduce using rule 193 (datatype -> current .)
    R_NOT           reduce using rule 193 (datatype -> current .)
    OL_MENORQUE     reduce using rule 193 (datatype -> current .)
    OL_MAYORQUE     reduce using rule 193 (datatype -> current .)
    OL_MAYORIGUALQUE reduce using rule 193 (datatype -> current .)
    OL_MENORIGUALQUE reduce using rule 193 (datatype -> current .)
    S_IGUAL         reduce using rule 193 (datatype -> current .)
    OL_DISTINTODE   reduce using rule 193 (datatype -> current .)
    R_IS            reduce using rule 193 (datatype -> current .)
    R_BETWEEN       reduce using rule 193 (datatype -> current .)
    R_ISNULL        reduce using rule 193 (datatype -> current .)
    R_NOTNULL       reduce using rule 193 (datatype -> current .)
    OL_ESIGUAL      reduce using rule 193 (datatype -> current .)
    R_AS            reduce using rule 193 (datatype -> current .)
    ID              reduce using rule 193 (datatype -> current .)
    STRING          reduce using rule 193 (datatype -> current .)
    CHARACTER       reduce using rule 193 (datatype -> current .)
    S_COMA          reduce using rule 193 (datatype -> current .)
    R_FROM          reduce using rule 193 (datatype -> current .)
    S_PUNTOCOMA     reduce using rule 193 (datatype -> current .)
    R_UNION         reduce using rule 193 (datatype -> current .)
    R_INTERSECT     reduce using rule 193 (datatype -> current .)
    R_EXCEPT        reduce using rule 193 (datatype -> current .)
    S_PARDER        reduce using rule 193 (datatype -> current .)
    R_AND           reduce using rule 193 (datatype -> current .)
    R_OR            reduce using rule 193 (datatype -> current .)
    R_GROUP         reduce using rule 193 (datatype -> current .)
    R_ORDER         reduce using rule 193 (datatype -> current .)
    R_LIMIT         reduce using rule 193 (datatype -> current .)
    R_THEN          reduce using rule 193 (datatype -> current .)
    R_NATURAL       reduce using rule 193 (datatype -> current .)
    R_INNER         reduce using rule 193 (datatype -> current .)
    R_LEFT          reduce using rule 193 (datatype -> current .)
    R_RIGHT         reduce using rule 193 (datatype -> current .)
    R_FULL          reduce using rule 193 (datatype -> current .)
    R_WHERE         reduce using rule 193 (datatype -> current .)
    R_ALL           reduce using rule 193 (datatype -> current .)
    R_ANY           reduce using rule 193 (datatype -> current .)
    R_SOME          reduce using rule 193 (datatype -> current .)


state 99

    (250) expBool -> R_NOT . expBool
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 99
    S_PARIZQ        shift and go to state 211
    R_EXISTS        shift and go to state 117
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expBool                        shift and go to state 210
    boolean                        shift and go to state 100
    datatype                       shift and go to state 212
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    stringExp                      shift and go to state 122
    timeStamp                      shift and go to state 113

state 100

    (253) expBool -> boolean .

    R_AND           reduce using rule 253 (expBool -> boolean .)
    R_OR            reduce using rule 253 (expBool -> boolean .)
    R_IS            reduce using rule 253 (expBool -> boolean .)
    R_AS            reduce using rule 253 (expBool -> boolean .)
    ID              reduce using rule 253 (expBool -> boolean .)
    STRING          reduce using rule 253 (expBool -> boolean .)
    CHARACTER       reduce using rule 253 (expBool -> boolean .)
    S_COMA          reduce using rule 253 (expBool -> boolean .)
    R_FROM          reduce using rule 253 (expBool -> boolean .)
    S_PUNTOCOMA     reduce using rule 253 (expBool -> boolean .)
    R_UNION         reduce using rule 253 (expBool -> boolean .)
    R_INTERSECT     reduce using rule 253 (expBool -> boolean .)
    R_EXCEPT        reduce using rule 253 (expBool -> boolean .)
    S_PARDER        reduce using rule 253 (expBool -> boolean .)
    R_GROUP         reduce using rule 253 (expBool -> boolean .)
    R_ORDER         reduce using rule 253 (expBool -> boolean .)
    R_LIMIT         reduce using rule 253 (expBool -> boolean .)
    R_THEN          reduce using rule 253 (expBool -> boolean .)
    R_NATURAL       reduce using rule 253 (expBool -> boolean .)
    R_INNER         reduce using rule 253 (expBool -> boolean .)
    R_LEFT          reduce using rule 253 (expBool -> boolean .)
    R_RIGHT         reduce using rule 253 (expBool -> boolean .)
    R_FULL          reduce using rule 253 (expBool -> boolean .)
    R_WHERE         reduce using rule 253 (expBool -> boolean .)


state 101

    (164) literal -> INTEGER .

    O_SUMA          reduce using rule 164 (literal -> INTEGER .)
    O_RESTA         reduce using rule 164 (literal -> INTEGER .)
    O_PRODUCTO      reduce using rule 164 (literal -> INTEGER .)
    O_DIVISION      reduce using rule 164 (literal -> INTEGER .)
    O_EXPONENTE     reduce using rule 164 (literal -> INTEGER .)
    O_MODULAR       reduce using rule 164 (literal -> INTEGER .)
    OC_CONCATENAR   reduce using rule 164 (literal -> INTEGER .)
    R_IN            reduce using rule 164 (literal -> INTEGER .)
    R_NOT           reduce using rule 164 (literal -> INTEGER .)
    OL_MENORQUE     reduce using rule 164 (literal -> INTEGER .)
    OL_MAYORQUE     reduce using rule 164 (literal -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 164 (literal -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 164 (literal -> INTEGER .)
    S_IGUAL         reduce using rule 164 (literal -> INTEGER .)
    OL_DISTINTODE   reduce using rule 164 (literal -> INTEGER .)
    R_IS            reduce using rule 164 (literal -> INTEGER .)
    R_BETWEEN       reduce using rule 164 (literal -> INTEGER .)
    R_ISNULL        reduce using rule 164 (literal -> INTEGER .)
    R_NOTNULL       reduce using rule 164 (literal -> INTEGER .)
    OL_ESIGUAL      reduce using rule 164 (literal -> INTEGER .)
    R_AS            reduce using rule 164 (literal -> INTEGER .)
    ID              reduce using rule 164 (literal -> INTEGER .)
    STRING          reduce using rule 164 (literal -> INTEGER .)
    CHARACTER       reduce using rule 164 (literal -> INTEGER .)
    S_COMA          reduce using rule 164 (literal -> INTEGER .)
    R_FROM          reduce using rule 164 (literal -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 164 (literal -> INTEGER .)
    R_UNION         reduce using rule 164 (literal -> INTEGER .)
    R_INTERSECT     reduce using rule 164 (literal -> INTEGER .)
    R_EXCEPT        reduce using rule 164 (literal -> INTEGER .)
    S_PARDER        reduce using rule 164 (literal -> INTEGER .)
    R_AND           reduce using rule 164 (literal -> INTEGER .)
    R_OR            reduce using rule 164 (literal -> INTEGER .)
    R_GROUP         reduce using rule 164 (literal -> INTEGER .)
    R_ORDER         reduce using rule 164 (literal -> INTEGER .)
    R_LIMIT         reduce using rule 164 (literal -> INTEGER .)
    R_THEN          reduce using rule 164 (literal -> INTEGER .)
    R_NATURAL       reduce using rule 164 (literal -> INTEGER .)
    R_INNER         reduce using rule 164 (literal -> INTEGER .)
    R_LEFT          reduce using rule 164 (literal -> INTEGER .)
    R_RIGHT         reduce using rule 164 (literal -> INTEGER .)
    R_FULL          reduce using rule 164 (literal -> INTEGER .)
    R_WHERE         reduce using rule 164 (literal -> INTEGER .)
    R_ALL           reduce using rule 164 (literal -> INTEGER .)
    R_ANY           reduce using rule 164 (literal -> INTEGER .)
    R_SOME          reduce using rule 164 (literal -> INTEGER .)
    R_END           reduce using rule 164 (literal -> INTEGER .)
    R_ELSE          reduce using rule 164 (literal -> INTEGER .)
    R_WHEN          reduce using rule 164 (literal -> INTEGER .)
    R_DEFAULT       reduce using rule 164 (literal -> INTEGER .)
    R_NULL          reduce using rule 164 (literal -> INTEGER .)
    R_PRIMARY       reduce using rule 164 (literal -> INTEGER .)
    R_REFERENCES    reduce using rule 164 (literal -> INTEGER .)
    R_CONSTRAINT    reduce using rule 164 (literal -> INTEGER .)
    R_UNIQUE        reduce using rule 164 (literal -> INTEGER .)
    R_CHECK         reduce using rule 164 (literal -> INTEGER .)


state 102

    (165) literal -> STRING .
    (238) stringExp -> STRING .

    O_SUMA          reduce using rule 165 (literal -> STRING .)
    O_RESTA         reduce using rule 165 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 165 (literal -> STRING .)
    O_DIVISION      reduce using rule 165 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 165 (literal -> STRING .)
    O_MODULAR       reduce using rule 165 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 165 (literal -> STRING .)
    R_IN            reduce using rule 165 (literal -> STRING .)
    R_NOT           reduce using rule 165 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 165 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 165 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 165 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 165 (literal -> STRING .)
    S_IGUAL         reduce using rule 165 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 165 (literal -> STRING .)
    R_IS            reduce using rule 165 (literal -> STRING .)
    R_BETWEEN       reduce using rule 165 (literal -> STRING .)
    R_ISNULL        reduce using rule 165 (literal -> STRING .)
    R_NOTNULL       reduce using rule 165 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 165 (literal -> STRING .)
    R_AS            reduce using rule 165 (literal -> STRING .)
    ID              reduce using rule 165 (literal -> STRING .)
    STRING          reduce using rule 165 (literal -> STRING .)
    CHARACTER       reduce using rule 165 (literal -> STRING .)
    S_COMA          reduce using rule 165 (literal -> STRING .)
    R_FROM          reduce using rule 165 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 165 (literal -> STRING .)
    R_UNION         reduce using rule 165 (literal -> STRING .)
    R_INTERSECT     reduce using rule 165 (literal -> STRING .)
    R_EXCEPT        reduce using rule 165 (literal -> STRING .)
    S_PARDER        reduce using rule 165 (literal -> STRING .)
    R_LIKE          reduce using rule 238 (stringExp -> STRING .)


state 103

    (166) literal -> DECIMAL .

    O_SUMA          reduce using rule 166 (literal -> DECIMAL .)
    O_RESTA         reduce using rule 166 (literal -> DECIMAL .)
    O_PRODUCTO      reduce using rule 166 (literal -> DECIMAL .)
    O_DIVISION      reduce using rule 166 (literal -> DECIMAL .)
    O_EXPONENTE     reduce using rule 166 (literal -> DECIMAL .)
    O_MODULAR       reduce using rule 166 (literal -> DECIMAL .)
    OC_CONCATENAR   reduce using rule 166 (literal -> DECIMAL .)
    R_IN            reduce using rule 166 (literal -> DECIMAL .)
    R_NOT           reduce using rule 166 (literal -> DECIMAL .)
    OL_MENORQUE     reduce using rule 166 (literal -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 166 (literal -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 166 (literal -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 166 (literal -> DECIMAL .)
    S_IGUAL         reduce using rule 166 (literal -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 166 (literal -> DECIMAL .)
    R_IS            reduce using rule 166 (literal -> DECIMAL .)
    R_BETWEEN       reduce using rule 166 (literal -> DECIMAL .)
    R_ISNULL        reduce using rule 166 (literal -> DECIMAL .)
    R_NOTNULL       reduce using rule 166 (literal -> DECIMAL .)
    OL_ESIGUAL      reduce using rule 166 (literal -> DECIMAL .)
    R_AS            reduce using rule 166 (literal -> DECIMAL .)
    ID              reduce using rule 166 (literal -> DECIMAL .)
    STRING          reduce using rule 166 (literal -> DECIMAL .)
    CHARACTER       reduce using rule 166 (literal -> DECIMAL .)
    S_COMA          reduce using rule 166 (literal -> DECIMAL .)
    R_FROM          reduce using rule 166 (literal -> DECIMAL .)
    S_PUNTOCOMA     reduce using rule 166 (literal -> DECIMAL .)
    R_UNION         reduce using rule 166 (literal -> DECIMAL .)
    R_INTERSECT     reduce using rule 166 (literal -> DECIMAL .)
    R_EXCEPT        reduce using rule 166 (literal -> DECIMAL .)
    S_PARDER        reduce using rule 166 (literal -> DECIMAL .)
    R_AND           reduce using rule 166 (literal -> DECIMAL .)
    R_OR            reduce using rule 166 (literal -> DECIMAL .)
    R_GROUP         reduce using rule 166 (literal -> DECIMAL .)
    R_ORDER         reduce using rule 166 (literal -> DECIMAL .)
    R_LIMIT         reduce using rule 166 (literal -> DECIMAL .)
    R_THEN          reduce using rule 166 (literal -> DECIMAL .)
    R_NATURAL       reduce using rule 166 (literal -> DECIMAL .)
    R_INNER         reduce using rule 166 (literal -> DECIMAL .)
    R_LEFT          reduce using rule 166 (literal -> DECIMAL .)
    R_RIGHT         reduce using rule 166 (literal -> DECIMAL .)
    R_FULL          reduce using rule 166 (literal -> DECIMAL .)
    R_WHERE         reduce using rule 166 (literal -> DECIMAL .)
    R_ALL           reduce using rule 166 (literal -> DECIMAL .)
    R_ANY           reduce using rule 166 (literal -> DECIMAL .)
    R_SOME          reduce using rule 166 (literal -> DECIMAL .)
    R_END           reduce using rule 166 (literal -> DECIMAL .)
    R_ELSE          reduce using rule 166 (literal -> DECIMAL .)
    R_WHEN          reduce using rule 166 (literal -> DECIMAL .)
    R_DEFAULT       reduce using rule 166 (literal -> DECIMAL .)
    R_NULL          reduce using rule 166 (literal -> DECIMAL .)
    R_PRIMARY       reduce using rule 166 (literal -> DECIMAL .)
    R_REFERENCES    reduce using rule 166 (literal -> DECIMAL .)
    R_CONSTRAINT    reduce using rule 166 (literal -> DECIMAL .)
    R_UNIQUE        reduce using rule 166 (literal -> DECIMAL .)
    R_CHECK         reduce using rule 166 (literal -> DECIMAL .)


state 104

    (167) literal -> CHARACTER .

    O_SUMA          reduce using rule 167 (literal -> CHARACTER .)
    O_RESTA         reduce using rule 167 (literal -> CHARACTER .)
    O_PRODUCTO      reduce using rule 167 (literal -> CHARACTER .)
    O_DIVISION      reduce using rule 167 (literal -> CHARACTER .)
    O_EXPONENTE     reduce using rule 167 (literal -> CHARACTER .)
    O_MODULAR       reduce using rule 167 (literal -> CHARACTER .)
    OC_CONCATENAR   reduce using rule 167 (literal -> CHARACTER .)
    R_IN            reduce using rule 167 (literal -> CHARACTER .)
    R_NOT           reduce using rule 167 (literal -> CHARACTER .)
    OL_MENORQUE     reduce using rule 167 (literal -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 167 (literal -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 167 (literal -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 167 (literal -> CHARACTER .)
    S_IGUAL         reduce using rule 167 (literal -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 167 (literal -> CHARACTER .)
    R_IS            reduce using rule 167 (literal -> CHARACTER .)
    R_BETWEEN       reduce using rule 167 (literal -> CHARACTER .)
    R_ISNULL        reduce using rule 167 (literal -> CHARACTER .)
    R_NOTNULL       reduce using rule 167 (literal -> CHARACTER .)
    OL_ESIGUAL      reduce using rule 167 (literal -> CHARACTER .)
    R_AS            reduce using rule 167 (literal -> CHARACTER .)
    ID              reduce using rule 167 (literal -> CHARACTER .)
    STRING          reduce using rule 167 (literal -> CHARACTER .)
    CHARACTER       reduce using rule 167 (literal -> CHARACTER .)
    S_COMA          reduce using rule 167 (literal -> CHARACTER .)
    R_FROM          reduce using rule 167 (literal -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 167 (literal -> CHARACTER .)
    R_UNION         reduce using rule 167 (literal -> CHARACTER .)
    R_INTERSECT     reduce using rule 167 (literal -> CHARACTER .)
    R_EXCEPT        reduce using rule 167 (literal -> CHARACTER .)
    S_PARDER        reduce using rule 167 (literal -> CHARACTER .)
    R_AND           reduce using rule 167 (literal -> CHARACTER .)
    R_OR            reduce using rule 167 (literal -> CHARACTER .)
    R_GROUP         reduce using rule 167 (literal -> CHARACTER .)
    R_ORDER         reduce using rule 167 (literal -> CHARACTER .)
    R_LIMIT         reduce using rule 167 (literal -> CHARACTER .)
    R_THEN          reduce using rule 167 (literal -> CHARACTER .)
    R_NATURAL       reduce using rule 167 (literal -> CHARACTER .)
    R_INNER         reduce using rule 167 (literal -> CHARACTER .)
    R_LEFT          reduce using rule 167 (literal -> CHARACTER .)
    R_RIGHT         reduce using rule 167 (literal -> CHARACTER .)
    R_FULL          reduce using rule 167 (literal -> CHARACTER .)
    R_WHERE         reduce using rule 167 (literal -> CHARACTER .)
    R_ALL           reduce using rule 167 (literal -> CHARACTER .)
    R_ANY           reduce using rule 167 (literal -> CHARACTER .)
    R_SOME          reduce using rule 167 (literal -> CHARACTER .)
    R_END           reduce using rule 167 (literal -> CHARACTER .)
    R_ELSE          reduce using rule 167 (literal -> CHARACTER .)
    R_WHEN          reduce using rule 167 (literal -> CHARACTER .)
    R_DEFAULT       reduce using rule 167 (literal -> CHARACTER .)
    R_NULL          reduce using rule 167 (literal -> CHARACTER .)
    R_PRIMARY       reduce using rule 167 (literal -> CHARACTER .)
    R_REFERENCES    reduce using rule 167 (literal -> CHARACTER .)
    R_CONSTRAINT    reduce using rule 167 (literal -> CHARACTER .)
    R_UNIQUE        reduce using rule 167 (literal -> CHARACTER .)
    R_CHECK         reduce using rule 167 (literal -> CHARACTER .)


state 105

    (168) literal -> R_TRUE .

    O_SUMA          reduce using rule 168 (literal -> R_TRUE .)
    O_RESTA         reduce using rule 168 (literal -> R_TRUE .)
    O_PRODUCTO      reduce using rule 168 (literal -> R_TRUE .)
    O_DIVISION      reduce using rule 168 (literal -> R_TRUE .)
    O_EXPONENTE     reduce using rule 168 (literal -> R_TRUE .)
    O_MODULAR       reduce using rule 168 (literal -> R_TRUE .)
    OC_CONCATENAR   reduce using rule 168 (literal -> R_TRUE .)
    R_IN            reduce using rule 168 (literal -> R_TRUE .)
    R_NOT           reduce using rule 168 (literal -> R_TRUE .)
    OL_MENORQUE     reduce using rule 168 (literal -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 168 (literal -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 168 (literal -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 168 (literal -> R_TRUE .)
    S_IGUAL         reduce using rule 168 (literal -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 168 (literal -> R_TRUE .)
    R_IS            reduce using rule 168 (literal -> R_TRUE .)
    R_BETWEEN       reduce using rule 168 (literal -> R_TRUE .)
    R_ISNULL        reduce using rule 168 (literal -> R_TRUE .)
    R_NOTNULL       reduce using rule 168 (literal -> R_TRUE .)
    OL_ESIGUAL      reduce using rule 168 (literal -> R_TRUE .)
    R_AS            reduce using rule 168 (literal -> R_TRUE .)
    ID              reduce using rule 168 (literal -> R_TRUE .)
    STRING          reduce using rule 168 (literal -> R_TRUE .)
    CHARACTER       reduce using rule 168 (literal -> R_TRUE .)
    S_COMA          reduce using rule 168 (literal -> R_TRUE .)
    R_FROM          reduce using rule 168 (literal -> R_TRUE .)
    S_PUNTOCOMA     reduce using rule 168 (literal -> R_TRUE .)
    R_UNION         reduce using rule 168 (literal -> R_TRUE .)
    R_INTERSECT     reduce using rule 168 (literal -> R_TRUE .)
    R_EXCEPT        reduce using rule 168 (literal -> R_TRUE .)
    S_PARDER        reduce using rule 168 (literal -> R_TRUE .)
    R_AND           reduce using rule 168 (literal -> R_TRUE .)
    R_OR            reduce using rule 168 (literal -> R_TRUE .)
    R_GROUP         reduce using rule 168 (literal -> R_TRUE .)
    R_ORDER         reduce using rule 168 (literal -> R_TRUE .)
    R_LIMIT         reduce using rule 168 (literal -> R_TRUE .)
    R_THEN          reduce using rule 168 (literal -> R_TRUE .)
    R_NATURAL       reduce using rule 168 (literal -> R_TRUE .)
    R_INNER         reduce using rule 168 (literal -> R_TRUE .)
    R_LEFT          reduce using rule 168 (literal -> R_TRUE .)
    R_RIGHT         reduce using rule 168 (literal -> R_TRUE .)
    R_FULL          reduce using rule 168 (literal -> R_TRUE .)
    R_WHERE         reduce using rule 168 (literal -> R_TRUE .)
    R_ALL           reduce using rule 168 (literal -> R_TRUE .)
    R_ANY           reduce using rule 168 (literal -> R_TRUE .)
    R_SOME          reduce using rule 168 (literal -> R_TRUE .)
    R_END           reduce using rule 168 (literal -> R_TRUE .)
    R_ELSE          reduce using rule 168 (literal -> R_TRUE .)
    R_WHEN          reduce using rule 168 (literal -> R_TRUE .)
    R_DEFAULT       reduce using rule 168 (literal -> R_TRUE .)
    R_NULL          reduce using rule 168 (literal -> R_TRUE .)
    R_PRIMARY       reduce using rule 168 (literal -> R_TRUE .)
    R_REFERENCES    reduce using rule 168 (literal -> R_TRUE .)
    R_CONSTRAINT    reduce using rule 168 (literal -> R_TRUE .)
    R_UNIQUE        reduce using rule 168 (literal -> R_TRUE .)
    R_CHECK         reduce using rule 168 (literal -> R_TRUE .)


state 106

    (169) literal -> R_FALSE .

    O_SUMA          reduce using rule 169 (literal -> R_FALSE .)
    O_RESTA         reduce using rule 169 (literal -> R_FALSE .)
    O_PRODUCTO      reduce using rule 169 (literal -> R_FALSE .)
    O_DIVISION      reduce using rule 169 (literal -> R_FALSE .)
    O_EXPONENTE     reduce using rule 169 (literal -> R_FALSE .)
    O_MODULAR       reduce using rule 169 (literal -> R_FALSE .)
    OC_CONCATENAR   reduce using rule 169 (literal -> R_FALSE .)
    R_IN            reduce using rule 169 (literal -> R_FALSE .)
    R_NOT           reduce using rule 169 (literal -> R_FALSE .)
    OL_MENORQUE     reduce using rule 169 (literal -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 169 (literal -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 169 (literal -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 169 (literal -> R_FALSE .)
    S_IGUAL         reduce using rule 169 (literal -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 169 (literal -> R_FALSE .)
    R_IS            reduce using rule 169 (literal -> R_FALSE .)
    R_BETWEEN       reduce using rule 169 (literal -> R_FALSE .)
    R_ISNULL        reduce using rule 169 (literal -> R_FALSE .)
    R_NOTNULL       reduce using rule 169 (literal -> R_FALSE .)
    OL_ESIGUAL      reduce using rule 169 (literal -> R_FALSE .)
    R_AS            reduce using rule 169 (literal -> R_FALSE .)
    ID              reduce using rule 169 (literal -> R_FALSE .)
    STRING          reduce using rule 169 (literal -> R_FALSE .)
    CHARACTER       reduce using rule 169 (literal -> R_FALSE .)
    S_COMA          reduce using rule 169 (literal -> R_FALSE .)
    R_FROM          reduce using rule 169 (literal -> R_FALSE .)
    S_PUNTOCOMA     reduce using rule 169 (literal -> R_FALSE .)
    R_UNION         reduce using rule 169 (literal -> R_FALSE .)
    R_INTERSECT     reduce using rule 169 (literal -> R_FALSE .)
    R_EXCEPT        reduce using rule 169 (literal -> R_FALSE .)
    S_PARDER        reduce using rule 169 (literal -> R_FALSE .)
    R_AND           reduce using rule 169 (literal -> R_FALSE .)
    R_OR            reduce using rule 169 (literal -> R_FALSE .)
    R_GROUP         reduce using rule 169 (literal -> R_FALSE .)
    R_ORDER         reduce using rule 169 (literal -> R_FALSE .)
    R_LIMIT         reduce using rule 169 (literal -> R_FALSE .)
    R_THEN          reduce using rule 169 (literal -> R_FALSE .)
    R_NATURAL       reduce using rule 169 (literal -> R_FALSE .)
    R_INNER         reduce using rule 169 (literal -> R_FALSE .)
    R_LEFT          reduce using rule 169 (literal -> R_FALSE .)
    R_RIGHT         reduce using rule 169 (literal -> R_FALSE .)
    R_FULL          reduce using rule 169 (literal -> R_FALSE .)
    R_WHERE         reduce using rule 169 (literal -> R_FALSE .)
    R_ALL           reduce using rule 169 (literal -> R_FALSE .)
    R_ANY           reduce using rule 169 (literal -> R_FALSE .)
    R_SOME          reduce using rule 169 (literal -> R_FALSE .)
    R_END           reduce using rule 169 (literal -> R_FALSE .)
    R_ELSE          reduce using rule 169 (literal -> R_FALSE .)
    R_WHEN          reduce using rule 169 (literal -> R_FALSE .)
    R_DEFAULT       reduce using rule 169 (literal -> R_FALSE .)
    R_NULL          reduce using rule 169 (literal -> R_FALSE .)
    R_PRIMARY       reduce using rule 169 (literal -> R_FALSE .)
    R_REFERENCES    reduce using rule 169 (literal -> R_FALSE .)
    R_CONSTRAINT    reduce using rule 169 (literal -> R_FALSE .)
    R_UNIQUE        reduce using rule 169 (literal -> R_FALSE .)
    R_CHECK         reduce using rule 169 (literal -> R_FALSE .)


state 107

    (170) literal -> R_NULL .

    O_SUMA          reduce using rule 170 (literal -> R_NULL .)
    O_RESTA         reduce using rule 170 (literal -> R_NULL .)
    O_PRODUCTO      reduce using rule 170 (literal -> R_NULL .)
    O_DIVISION      reduce using rule 170 (literal -> R_NULL .)
    O_EXPONENTE     reduce using rule 170 (literal -> R_NULL .)
    O_MODULAR       reduce using rule 170 (literal -> R_NULL .)
    OC_CONCATENAR   reduce using rule 170 (literal -> R_NULL .)
    R_IN            reduce using rule 170 (literal -> R_NULL .)
    R_NOT           reduce using rule 170 (literal -> R_NULL .)
    OL_MENORQUE     reduce using rule 170 (literal -> R_NULL .)
    OL_MAYORQUE     reduce using rule 170 (literal -> R_NULL .)
    OL_MAYORIGUALQUE reduce using rule 170 (literal -> R_NULL .)
    OL_MENORIGUALQUE reduce using rule 170 (literal -> R_NULL .)
    S_IGUAL         reduce using rule 170 (literal -> R_NULL .)
    OL_DISTINTODE   reduce using rule 170 (literal -> R_NULL .)
    R_IS            reduce using rule 170 (literal -> R_NULL .)
    R_BETWEEN       reduce using rule 170 (literal -> R_NULL .)
    R_ISNULL        reduce using rule 170 (literal -> R_NULL .)
    R_NOTNULL       reduce using rule 170 (literal -> R_NULL .)
    OL_ESIGUAL      reduce using rule 170 (literal -> R_NULL .)
    R_AS            reduce using rule 170 (literal -> R_NULL .)
    ID              reduce using rule 170 (literal -> R_NULL .)
    STRING          reduce using rule 170 (literal -> R_NULL .)
    CHARACTER       reduce using rule 170 (literal -> R_NULL .)
    S_COMA          reduce using rule 170 (literal -> R_NULL .)
    R_FROM          reduce using rule 170 (literal -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 170 (literal -> R_NULL .)
    R_UNION         reduce using rule 170 (literal -> R_NULL .)
    R_INTERSECT     reduce using rule 170 (literal -> R_NULL .)
    R_EXCEPT        reduce using rule 170 (literal -> R_NULL .)
    S_PARDER        reduce using rule 170 (literal -> R_NULL .)
    R_AND           reduce using rule 170 (literal -> R_NULL .)
    R_OR            reduce using rule 170 (literal -> R_NULL .)
    R_GROUP         reduce using rule 170 (literal -> R_NULL .)
    R_ORDER         reduce using rule 170 (literal -> R_NULL .)
    R_LIMIT         reduce using rule 170 (literal -> R_NULL .)
    R_THEN          reduce using rule 170 (literal -> R_NULL .)
    R_NATURAL       reduce using rule 170 (literal -> R_NULL .)
    R_INNER         reduce using rule 170 (literal -> R_NULL .)
    R_LEFT          reduce using rule 170 (literal -> R_NULL .)
    R_RIGHT         reduce using rule 170 (literal -> R_NULL .)
    R_FULL          reduce using rule 170 (literal -> R_NULL .)
    R_WHERE         reduce using rule 170 (literal -> R_NULL .)
    R_ALL           reduce using rule 170 (literal -> R_NULL .)
    R_ANY           reduce using rule 170 (literal -> R_NULL .)
    R_SOME          reduce using rule 170 (literal -> R_NULL .)
    R_END           reduce using rule 170 (literal -> R_NULL .)
    R_ELSE          reduce using rule 170 (literal -> R_NULL .)
    R_WHEN          reduce using rule 170 (literal -> R_NULL .)
    R_DEFAULT       reduce using rule 170 (literal -> R_NULL .)
    R_NULL          reduce using rule 170 (literal -> R_NULL .)
    R_PRIMARY       reduce using rule 170 (literal -> R_NULL .)
    R_REFERENCES    reduce using rule 170 (literal -> R_NULL .)
    R_CONSTRAINT    reduce using rule 170 (literal -> R_NULL .)
    R_UNIQUE        reduce using rule 170 (literal -> R_NULL .)
    R_CHECK         reduce using rule 170 (literal -> R_NULL .)


state 108

    (138) funcCall -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 213


state 109

    (139) funcCall -> R_COUNT . S_PARIZQ datatype S_PARDER
    (140) funcCall -> R_COUNT . S_PARIZQ O_PRODUCTO S_PARDER

    S_PARIZQ        shift and go to state 214


state 110

    (141) funcCall -> R_SUM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 215


state 111

    (142) funcCall -> R_PROM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 216


state 112

    (143) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM columnName S_PARDER

    S_PARIZQ        shift and go to state 217


state 113

    (161) current -> timeStamp .

    O_SUMA          reduce using rule 161 (current -> timeStamp .)
    O_RESTA         reduce using rule 161 (current -> timeStamp .)
    O_PRODUCTO      reduce using rule 161 (current -> timeStamp .)
    O_DIVISION      reduce using rule 161 (current -> timeStamp .)
    O_EXPONENTE     reduce using rule 161 (current -> timeStamp .)
    O_MODULAR       reduce using rule 161 (current -> timeStamp .)
    OC_CONCATENAR   reduce using rule 161 (current -> timeStamp .)
    R_IN            reduce using rule 161 (current -> timeStamp .)
    R_NOT           reduce using rule 161 (current -> timeStamp .)
    OL_MENORQUE     reduce using rule 161 (current -> timeStamp .)
    OL_MAYORQUE     reduce using rule 161 (current -> timeStamp .)
    OL_MAYORIGUALQUE reduce using rule 161 (current -> timeStamp .)
    OL_MENORIGUALQUE reduce using rule 161 (current -> timeStamp .)
    S_IGUAL         reduce using rule 161 (current -> timeStamp .)
    OL_DISTINTODE   reduce using rule 161 (current -> timeStamp .)
    R_IS            reduce using rule 161 (current -> timeStamp .)
    R_BETWEEN       reduce using rule 161 (current -> timeStamp .)
    R_ISNULL        reduce using rule 161 (current -> timeStamp .)
    R_NOTNULL       reduce using rule 161 (current -> timeStamp .)
    OL_ESIGUAL      reduce using rule 161 (current -> timeStamp .)
    R_AS            reduce using rule 161 (current -> timeStamp .)
    ID              reduce using rule 161 (current -> timeStamp .)
    STRING          reduce using rule 161 (current -> timeStamp .)
    CHARACTER       reduce using rule 161 (current -> timeStamp .)
    S_COMA          reduce using rule 161 (current -> timeStamp .)
    R_FROM          reduce using rule 161 (current -> timeStamp .)
    S_PUNTOCOMA     reduce using rule 161 (current -> timeStamp .)
    R_UNION         reduce using rule 161 (current -> timeStamp .)
    R_INTERSECT     reduce using rule 161 (current -> timeStamp .)
    R_EXCEPT        reduce using rule 161 (current -> timeStamp .)
    S_PARDER        reduce using rule 161 (current -> timeStamp .)
    R_AND           reduce using rule 161 (current -> timeStamp .)
    R_OR            reduce using rule 161 (current -> timeStamp .)
    R_GROUP         reduce using rule 161 (current -> timeStamp .)
    R_ORDER         reduce using rule 161 (current -> timeStamp .)
    R_LIMIT         reduce using rule 161 (current -> timeStamp .)
    R_THEN          reduce using rule 161 (current -> timeStamp .)
    R_NATURAL       reduce using rule 161 (current -> timeStamp .)
    R_INNER         reduce using rule 161 (current -> timeStamp .)
    R_LEFT          reduce using rule 161 (current -> timeStamp .)
    R_RIGHT         reduce using rule 161 (current -> timeStamp .)
    R_FULL          reduce using rule 161 (current -> timeStamp .)
    R_WHERE         reduce using rule 161 (current -> timeStamp .)
    R_ALL           reduce using rule 161 (current -> timeStamp .)
    R_ANY           reduce using rule 161 (current -> timeStamp .)
    R_SOME          reduce using rule 161 (current -> timeStamp .)


state 114

    (153) datePart -> R_DATE_PART . S_PARIZQ STRING S_COMA dateSource S_PARDER

    S_PARIZQ        shift and go to state 218


state 115

    (159) current -> R_CURRENT_DATE .

    O_SUMA          reduce using rule 159 (current -> R_CURRENT_DATE .)
    O_RESTA         reduce using rule 159 (current -> R_CURRENT_DATE .)
    O_PRODUCTO      reduce using rule 159 (current -> R_CURRENT_DATE .)
    O_DIVISION      reduce using rule 159 (current -> R_CURRENT_DATE .)
    O_EXPONENTE     reduce using rule 159 (current -> R_CURRENT_DATE .)
    O_MODULAR       reduce using rule 159 (current -> R_CURRENT_DATE .)
    OC_CONCATENAR   reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_IN            reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_NOT           reduce using rule 159 (current -> R_CURRENT_DATE .)
    OL_MENORQUE     reduce using rule 159 (current -> R_CURRENT_DATE .)
    OL_MAYORQUE     reduce using rule 159 (current -> R_CURRENT_DATE .)
    OL_MAYORIGUALQUE reduce using rule 159 (current -> R_CURRENT_DATE .)
    OL_MENORIGUALQUE reduce using rule 159 (current -> R_CURRENT_DATE .)
    S_IGUAL         reduce using rule 159 (current -> R_CURRENT_DATE .)
    OL_DISTINTODE   reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_IS            reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_BETWEEN       reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_ISNULL        reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_NOTNULL       reduce using rule 159 (current -> R_CURRENT_DATE .)
    OL_ESIGUAL      reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_AS            reduce using rule 159 (current -> R_CURRENT_DATE .)
    ID              reduce using rule 159 (current -> R_CURRENT_DATE .)
    STRING          reduce using rule 159 (current -> R_CURRENT_DATE .)
    CHARACTER       reduce using rule 159 (current -> R_CURRENT_DATE .)
    S_COMA          reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_FROM          reduce using rule 159 (current -> R_CURRENT_DATE .)
    S_PUNTOCOMA     reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_UNION         reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_INTERSECT     reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_EXCEPT        reduce using rule 159 (current -> R_CURRENT_DATE .)
    S_PARDER        reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_AND           reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_OR            reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_GROUP         reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_ORDER         reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_LIMIT         reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_THEN          reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_NATURAL       reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_INNER         reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_LEFT          reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_RIGHT         reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_FULL          reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_WHERE         reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_ALL           reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_ANY           reduce using rule 159 (current -> R_CURRENT_DATE .)
    R_SOME          reduce using rule 159 (current -> R_CURRENT_DATE .)


state 116

    (160) current -> R_CURRENT_TIME .

    O_SUMA          reduce using rule 160 (current -> R_CURRENT_TIME .)
    O_RESTA         reduce using rule 160 (current -> R_CURRENT_TIME .)
    O_PRODUCTO      reduce using rule 160 (current -> R_CURRENT_TIME .)
    O_DIVISION      reduce using rule 160 (current -> R_CURRENT_TIME .)
    O_EXPONENTE     reduce using rule 160 (current -> R_CURRENT_TIME .)
    O_MODULAR       reduce using rule 160 (current -> R_CURRENT_TIME .)
    OC_CONCATENAR   reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_IN            reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_NOT           reduce using rule 160 (current -> R_CURRENT_TIME .)
    OL_MENORQUE     reduce using rule 160 (current -> R_CURRENT_TIME .)
    OL_MAYORQUE     reduce using rule 160 (current -> R_CURRENT_TIME .)
    OL_MAYORIGUALQUE reduce using rule 160 (current -> R_CURRENT_TIME .)
    OL_MENORIGUALQUE reduce using rule 160 (current -> R_CURRENT_TIME .)
    S_IGUAL         reduce using rule 160 (current -> R_CURRENT_TIME .)
    OL_DISTINTODE   reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_IS            reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_BETWEEN       reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_ISNULL        reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_NOTNULL       reduce using rule 160 (current -> R_CURRENT_TIME .)
    OL_ESIGUAL      reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_AS            reduce using rule 160 (current -> R_CURRENT_TIME .)
    ID              reduce using rule 160 (current -> R_CURRENT_TIME .)
    STRING          reduce using rule 160 (current -> R_CURRENT_TIME .)
    CHARACTER       reduce using rule 160 (current -> R_CURRENT_TIME .)
    S_COMA          reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_FROM          reduce using rule 160 (current -> R_CURRENT_TIME .)
    S_PUNTOCOMA     reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_UNION         reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_INTERSECT     reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_EXCEPT        reduce using rule 160 (current -> R_CURRENT_TIME .)
    S_PARDER        reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_AND           reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_OR            reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_GROUP         reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_ORDER         reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_LIMIT         reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_THEN          reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_NATURAL       reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_INNER         reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_LEFT          reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_RIGHT         reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_FULL          reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_WHERE         reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_ALL           reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_ANY           reduce using rule 160 (current -> R_CURRENT_TIME .)
    R_SOME          reduce using rule 160 (current -> R_CURRENT_TIME .)


state 117

    (243) boolean -> R_EXISTS . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 219


state 118

    (246) boolean -> expComp .

    R_AND           reduce using rule 246 (boolean -> expComp .)
    R_OR            reduce using rule 246 (boolean -> expComp .)
    R_IS            reduce using rule 246 (boolean -> expComp .)
    R_AS            reduce using rule 246 (boolean -> expComp .)
    ID              reduce using rule 246 (boolean -> expComp .)
    STRING          reduce using rule 246 (boolean -> expComp .)
    CHARACTER       reduce using rule 246 (boolean -> expComp .)
    S_COMA          reduce using rule 246 (boolean -> expComp .)
    R_FROM          reduce using rule 246 (boolean -> expComp .)
    S_PUNTOCOMA     reduce using rule 246 (boolean -> expComp .)
    R_UNION         reduce using rule 246 (boolean -> expComp .)
    R_INTERSECT     reduce using rule 246 (boolean -> expComp .)
    R_EXCEPT        reduce using rule 246 (boolean -> expComp .)
    S_PARDER        reduce using rule 246 (boolean -> expComp .)
    R_GROUP         reduce using rule 246 (boolean -> expComp .)
    R_ORDER         reduce using rule 246 (boolean -> expComp .)
    R_LIMIT         reduce using rule 246 (boolean -> expComp .)
    R_THEN          reduce using rule 246 (boolean -> expComp .)
    R_NATURAL       reduce using rule 246 (boolean -> expComp .)
    R_INNER         reduce using rule 246 (boolean -> expComp .)
    R_LEFT          reduce using rule 246 (boolean -> expComp .)
    R_RIGHT         reduce using rule 246 (boolean -> expComp .)
    R_FULL          reduce using rule 246 (boolean -> expComp .)
    R_WHERE         reduce using rule 246 (boolean -> expComp .)


state 119

    (247) boolean -> expSubq .

    R_AND           reduce using rule 247 (boolean -> expSubq .)
    R_OR            reduce using rule 247 (boolean -> expSubq .)
    R_IS            reduce using rule 247 (boolean -> expSubq .)
    R_AS            reduce using rule 247 (boolean -> expSubq .)
    ID              reduce using rule 247 (boolean -> expSubq .)
    STRING          reduce using rule 247 (boolean -> expSubq .)
    CHARACTER       reduce using rule 247 (boolean -> expSubq .)
    S_COMA          reduce using rule 247 (boolean -> expSubq .)
    R_FROM          reduce using rule 247 (boolean -> expSubq .)
    S_PUNTOCOMA     reduce using rule 247 (boolean -> expSubq .)
    R_UNION         reduce using rule 247 (boolean -> expSubq .)
    R_INTERSECT     reduce using rule 247 (boolean -> expSubq .)
    R_EXCEPT        reduce using rule 247 (boolean -> expSubq .)
    S_PARDER        reduce using rule 247 (boolean -> expSubq .)
    R_GROUP         reduce using rule 247 (boolean -> expSubq .)
    R_ORDER         reduce using rule 247 (boolean -> expSubq .)
    R_LIMIT         reduce using rule 247 (boolean -> expSubq .)
    R_THEN          reduce using rule 247 (boolean -> expSubq .)
    R_NATURAL       reduce using rule 247 (boolean -> expSubq .)
    R_INNER         reduce using rule 247 (boolean -> expSubq .)
    R_LEFT          reduce using rule 247 (boolean -> expSubq .)
    R_RIGHT         reduce using rule 247 (boolean -> expSubq .)
    R_FULL          reduce using rule 247 (boolean -> expSubq .)
    R_WHERE         reduce using rule 247 (boolean -> expSubq .)


state 120

    (145) timeStamp -> R_TIMESTAMP . STRING

    STRING          shift and go to state 220


state 121

    (146) timeStamp -> R_INTERVAL . STRING

    STRING          shift and go to state 221


state 122

    (237) expSubq -> stringExp . R_LIKE STRING

    R_LIKE          shift and go to state 222


state 123

    (441) executePL -> R_EXECUTE funcCall .

    S_PUNTOCOMA     reduce using rule 441 (executePL -> R_EXECUTE funcCall .)


state 124

    (136) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (137) funcCall -> ID . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 173


state 125

    (316) selectStmt -> selectStmt R_UNION allOpt . selectStmt
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 223

state 126

    (322) allOpt -> R_ALL .

    R_SELECT        reduce using rule 322 (allOpt -> R_ALL .)
    S_PARIZQ        reduce using rule 322 (allOpt -> R_ALL .)


state 127

    (317) selectStmt -> selectStmt R_INTERSECT allOpt . selectStmt
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 224

state 128

    (318) selectStmt -> selectStmt R_EXCEPT allOpt . selectStmt
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 225

state 129

    (17) stmt -> ifStmt R_END R_IF . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 226


state 130

    (19) ifStmt -> R_IF S_PARIZQ expresion . S_PARDER R_THEN List_body else_

    S_PARDER        shift and go to state 227


state 131

    (260) columnName -> ID .
    (261) columnName -> ID . S_PUNTO ID
    (136) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (137) funcCall -> ID . S_PARIZQ S_PARDER

    O_SUMA          reduce using rule 260 (columnName -> ID .)
    O_RESTA         reduce using rule 260 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 260 (columnName -> ID .)
    O_DIVISION      reduce using rule 260 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 260 (columnName -> ID .)
    O_MODULAR       reduce using rule 260 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 260 (columnName -> ID .)
    R_IN            reduce using rule 260 (columnName -> ID .)
    R_NOT           reduce using rule 260 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 260 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 260 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 260 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 260 (columnName -> ID .)
    S_IGUAL         reduce using rule 260 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 260 (columnName -> ID .)
    R_IS            reduce using rule 260 (columnName -> ID .)
    R_BETWEEN       reduce using rule 260 (columnName -> ID .)
    R_ISNULL        reduce using rule 260 (columnName -> ID .)
    R_NOTNULL       reduce using rule 260 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 260 (columnName -> ID .)
    S_PARDER        reduce using rule 260 (columnName -> ID .)
    R_LIKE          reduce using rule 260 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 260 (columnName -> ID .)
    R_AS            reduce using rule 260 (columnName -> ID .)
    ID              reduce using rule 260 (columnName -> ID .)
    STRING          reduce using rule 260 (columnName -> ID .)
    CHARACTER       reduce using rule 260 (columnName -> ID .)
    S_COMA          reduce using rule 260 (columnName -> ID .)
    R_FROM          reduce using rule 260 (columnName -> ID .)
    R_UNION         reduce using rule 260 (columnName -> ID .)
    R_INTERSECT     reduce using rule 260 (columnName -> ID .)
    R_EXCEPT        reduce using rule 260 (columnName -> ID .)
    R_AND           reduce using rule 260 (columnName -> ID .)
    R_OR            reduce using rule 260 (columnName -> ID .)
    R_GROUP         reduce using rule 260 (columnName -> ID .)
    R_ORDER         reduce using rule 260 (columnName -> ID .)
    R_LIMIT         reduce using rule 260 (columnName -> ID .)
    R_THEN          reduce using rule 260 (columnName -> ID .)
    R_NATURAL       reduce using rule 260 (columnName -> ID .)
    R_INNER         reduce using rule 260 (columnName -> ID .)
    R_LEFT          reduce using rule 260 (columnName -> ID .)
    R_RIGHT         reduce using rule 260 (columnName -> ID .)
    R_FULL          reduce using rule 260 (columnName -> ID .)
    R_WHERE         reduce using rule 260 (columnName -> ID .)
    R_ALL           reduce using rule 260 (columnName -> ID .)
    R_ANY           reduce using rule 260 (columnName -> ID .)
    R_SOME          reduce using rule 260 (columnName -> ID .)
    S_PUNTO         shift and go to state 228
    S_PARIZQ        shift and go to state 173


state 132

    (396) functionStmt -> R_CREATE R_FUNCTION ID . S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> R_CREATE R_FUNCTION ID . S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    S_PARIZQ        shift and go to state 229


state 133

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE . ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE . ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    ID              shift and go to state 230


state 134

    (58) createOpts -> orReplace R_DATABASE . ifNotExists idOrString createOwner createMode
    (62) ifNotExists -> . R_IF R_NOT R_EXISTS
    (63) ifNotExists -> .

    R_IF            shift and go to state 138
    ID              reduce using rule 63 (ifNotExists -> .)
    STRING          reduce using rule 63 (ifNotExists -> .)
    CHARACTER       reduce using rule 63 (ifNotExists -> .)

    ifNotExists                    shift and go to state 231

state 135

    (59) orReplace -> R_OR R_REPLACE .

    R_PROCEDURE     reduce using rule 59 (orReplace -> R_OR R_REPLACE .)
    R_DATABASE      reduce using rule 59 (orReplace -> R_OR R_REPLACE .)


state 136

    (46) createOpts -> unique_index R_INDEX . ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    ID              shift and go to state 232


state 137

    (57) createOpts -> R_TABLE ifNotExists . idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 233

state 138

    (62) ifNotExists -> R_IF . R_NOT R_EXISTS

    R_NOT           shift and go to state 234


state 139

    (61) createOpts -> R_TYPE ifNotExists . ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 235


state 140

    (392) showStmt -> R_SHOW R_DATABASES likeOpt .

    S_PUNTOCOMA     reduce using rule 392 (showStmt -> R_SHOW R_DATABASES likeOpt .)


state 141

    (393) likeOpt -> R_LIKE . STRING

    STRING          shift and go to state 236


state 142

    (277) alterStmt -> R_ALTER R_DATABASE idOrString . alterDb
    (282) alterDb -> . R_RENAME R_TO idOrString
    (283) alterDb -> . R_OWNER R_TO ownerOPts

    R_RENAME        shift and go to state 238
    R_OWNER         shift and go to state 239

    alterDb                        shift and go to state 237

state 143

    (41) idOrString -> ID .

    R_RENAME        reduce using rule 41 (idOrString -> ID .)
    R_OWNER         reduce using rule 41 (idOrString -> ID .)
    R_ADD           reduce using rule 41 (idOrString -> ID .)
    R_ALTER         reduce using rule 41 (idOrString -> ID .)
    R_DROP          reduce using rule 41 (idOrString -> ID .)
    R_SET           reduce using rule 41 (idOrString -> ID .)
    S_COMA          reduce using rule 41 (idOrString -> ID .)
    R_WHERE         reduce using rule 41 (idOrString -> ID .)
    S_PUNTOCOMA     reduce using rule 41 (idOrString -> ID .)
    R_NATURAL       reduce using rule 41 (idOrString -> ID .)
    R_INNER         reduce using rule 41 (idOrString -> ID .)
    R_LEFT          reduce using rule 41 (idOrString -> ID .)
    R_RIGHT         reduce using rule 41 (idOrString -> ID .)
    R_FULL          reduce using rule 41 (idOrString -> ID .)
    R_GROUP         reduce using rule 41 (idOrString -> ID .)
    R_ORDER         reduce using rule 41 (idOrString -> ID .)
    R_LIMIT         reduce using rule 41 (idOrString -> ID .)
    R_UNION         reduce using rule 41 (idOrString -> ID .)
    R_INTERSECT     reduce using rule 41 (idOrString -> ID .)
    R_EXCEPT        reduce using rule 41 (idOrString -> ID .)
    S_PARDER        reduce using rule 41 (idOrString -> ID .)
    R_FROM          reduce using rule 41 (idOrString -> ID .)
    S_PARIZQ        reduce using rule 41 (idOrString -> ID .)
    R_ON            reduce using rule 41 (idOrString -> ID .)
    R_USING         reduce using rule 41 (idOrString -> ID .)
    R_MODE          reduce using rule 41 (idOrString -> ID .)


state 144

    (42) idOrString -> STRING .

    R_RENAME        reduce using rule 42 (idOrString -> STRING .)
    R_OWNER         reduce using rule 42 (idOrString -> STRING .)
    R_ADD           reduce using rule 42 (idOrString -> STRING .)
    R_ALTER         reduce using rule 42 (idOrString -> STRING .)
    R_DROP          reduce using rule 42 (idOrString -> STRING .)
    R_SET           reduce using rule 42 (idOrString -> STRING .)
    S_COMA          reduce using rule 42 (idOrString -> STRING .)
    R_WHERE         reduce using rule 42 (idOrString -> STRING .)
    S_PUNTOCOMA     reduce using rule 42 (idOrString -> STRING .)
    R_NATURAL       reduce using rule 42 (idOrString -> STRING .)
    R_INNER         reduce using rule 42 (idOrString -> STRING .)
    R_LEFT          reduce using rule 42 (idOrString -> STRING .)
    R_RIGHT         reduce using rule 42 (idOrString -> STRING .)
    R_FULL          reduce using rule 42 (idOrString -> STRING .)
    R_GROUP         reduce using rule 42 (idOrString -> STRING .)
    R_ORDER         reduce using rule 42 (idOrString -> STRING .)
    R_LIMIT         reduce using rule 42 (idOrString -> STRING .)
    R_UNION         reduce using rule 42 (idOrString -> STRING .)
    R_INTERSECT     reduce using rule 42 (idOrString -> STRING .)
    R_EXCEPT        reduce using rule 42 (idOrString -> STRING .)
    S_PARDER        reduce using rule 42 (idOrString -> STRING .)
    R_FROM          reduce using rule 42 (idOrString -> STRING .)
    S_PARIZQ        reduce using rule 42 (idOrString -> STRING .)
    R_ON            reduce using rule 42 (idOrString -> STRING .)
    R_USING         reduce using rule 42 (idOrString -> STRING .)
    R_MODE          reduce using rule 42 (idOrString -> STRING .)


state 145

    (43) idOrString -> CHARACTER .

    R_RENAME        reduce using rule 43 (idOrString -> CHARACTER .)
    R_OWNER         reduce using rule 43 (idOrString -> CHARACTER .)
    R_ADD           reduce using rule 43 (idOrString -> CHARACTER .)
    R_ALTER         reduce using rule 43 (idOrString -> CHARACTER .)
    R_DROP          reduce using rule 43 (idOrString -> CHARACTER .)
    R_SET           reduce using rule 43 (idOrString -> CHARACTER .)
    S_COMA          reduce using rule 43 (idOrString -> CHARACTER .)
    R_WHERE         reduce using rule 43 (idOrString -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 43 (idOrString -> CHARACTER .)
    R_NATURAL       reduce using rule 43 (idOrString -> CHARACTER .)
    R_INNER         reduce using rule 43 (idOrString -> CHARACTER .)
    R_LEFT          reduce using rule 43 (idOrString -> CHARACTER .)
    R_RIGHT         reduce using rule 43 (idOrString -> CHARACTER .)
    R_FULL          reduce using rule 43 (idOrString -> CHARACTER .)
    R_GROUP         reduce using rule 43 (idOrString -> CHARACTER .)
    R_ORDER         reduce using rule 43 (idOrString -> CHARACTER .)
    R_LIMIT         reduce using rule 43 (idOrString -> CHARACTER .)
    R_UNION         reduce using rule 43 (idOrString -> CHARACTER .)
    R_INTERSECT     reduce using rule 43 (idOrString -> CHARACTER .)
    R_EXCEPT        reduce using rule 43 (idOrString -> CHARACTER .)
    S_PARDER        reduce using rule 43 (idOrString -> CHARACTER .)
    R_FROM          reduce using rule 43 (idOrString -> CHARACTER .)
    S_PARIZQ        reduce using rule 43 (idOrString -> CHARACTER .)
    R_ON            reduce using rule 43 (idOrString -> CHARACTER .)
    R_USING         reduce using rule 43 (idOrString -> CHARACTER .)
    R_MODE          reduce using rule 43 (idOrString -> CHARACTER .)


state 146

    (278) alterStmt -> R_ALTER R_TABLE idOrString . alterTableList
    (287) alterTableList -> . alterTableList S_COMA alterTable
    (288) alterTableList -> . alterTable
    (289) alterTable -> . R_ADD alterAdd
    (290) alterTable -> . R_ALTER alterAlter
    (291) alterTable -> . R_DROP alterDrop
    (292) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 243
    R_ALTER         shift and go to state 240
    R_DROP          shift and go to state 244
    R_RENAME        shift and go to state 245

    alterTableList                 shift and go to state 241
    alterTable                     shift and go to state 242

state 147

    (279) alterStmt -> R_ALTER R_INDEX ifExists . idOrString R_ALTER col_op idList
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 246

state 148

    (308) ifExists -> R_IF . R_EXISTS

    R_EXISTS        shift and go to state 247


state 149

    (304) dropStmt -> R_DROP R_TABLE ifExists . idOrString
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 248

state 150

    (305) dropStmt -> R_DROP R_DATABASE ifExists . idOrString
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 249

state 151

    (306) dropStmt -> R_DROP R_PROCEDURE ifExists . idOrString S_PARIZQ S_PARDER
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 250

state 152

    (307) dropStmt -> R_DROP R_INDEX concurrenly . ifExists idOrString
    (308) ifExists -> . R_IF R_EXISTS
    (309) ifExists -> .

    R_IF            shift and go to state 148
    ID              reduce using rule 309 (ifExists -> .)
    STRING          reduce using rule 309 (ifExists -> .)
    CHARACTER       reduce using rule 309 (ifExists -> .)

    ifExists                       shift and go to state 251

state 153

    (310) concurrenly -> R_CONCURRENTLY .

    R_IF            reduce using rule 310 (concurrenly -> R_CONCURRENTLY .)
    ID              reduce using rule 310 (concurrenly -> R_CONCURRENTLY .)
    STRING          reduce using rule 310 (concurrenly -> R_CONCURRENTLY .)
    CHARACTER       reduce using rule 310 (concurrenly -> R_CONCURRENTLY .)


state 154

    (319) selectStmt -> S_PARIZQ selectStmt S_PARDER .

    S_PUNTOCOMA     reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)


state 155

    (379) insertStmt -> R_INSERT R_INTO ID . paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (380) paramsColumn -> . S_PARIZQ idList S_PARDER
    (381) paramsColumn -> .

    S_PARIZQ        shift and go to state 253
    R_VALUES        reduce using rule 381 (paramsColumn -> .)

    paramsColumn                   shift and go to state 252

state 156

    (429) asignacionStmt -> ID S_DOSPUNTOS S_IGUAL . expresion
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 254
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 157

    (430) asignacionStmt -> ID S_IGUAL expresion .

    S_PUNTOCOMA     reduce using rule 430 (asignacionStmt -> ID S_IGUAL expresion .)


state 158

    (382) updateStmt -> R_UPDATE fromBody R_SET . updateCols whereCl
    (383) updateCols -> . updateCols S_COMA updateVals
    (384) updateCols -> . updateVals
    (385) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 257

    updateCols                     shift and go to state 255
    updateVals                     shift and go to state 256

state 159

    (335) fromBody -> ID optAlias .

    R_SET           reduce using rule 335 (fromBody -> ID optAlias .)
    S_COMA          reduce using rule 335 (fromBody -> ID optAlias .)
    R_WHERE         reduce using rule 335 (fromBody -> ID optAlias .)
    S_PUNTOCOMA     reduce using rule 335 (fromBody -> ID optAlias .)
    R_NATURAL       reduce using rule 335 (fromBody -> ID optAlias .)
    R_INNER         reduce using rule 335 (fromBody -> ID optAlias .)
    R_LEFT          reduce using rule 335 (fromBody -> ID optAlias .)
    R_RIGHT         reduce using rule 335 (fromBody -> ID optAlias .)
    R_FULL          reduce using rule 335 (fromBody -> ID optAlias .)
    R_GROUP         reduce using rule 335 (fromBody -> ID optAlias .)
    R_ORDER         reduce using rule 335 (fromBody -> ID optAlias .)
    R_LIMIT         reduce using rule 335 (fromBody -> ID optAlias .)
    R_UNION         reduce using rule 335 (fromBody -> ID optAlias .)
    R_INTERSECT     reduce using rule 335 (fromBody -> ID optAlias .)
    R_EXCEPT        reduce using rule 335 (fromBody -> ID optAlias .)
    S_PARDER        reduce using rule 335 (fromBody -> ID optAlias .)


state 160

    (330) optAlias -> R_AS . idOrString
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 258

state 161

    (331) optAlias -> idOrString .

    R_SET           reduce using rule 331 (optAlias -> idOrString .)
    S_COMA          reduce using rule 331 (optAlias -> idOrString .)
    R_WHERE         reduce using rule 331 (optAlias -> idOrString .)
    S_PUNTOCOMA     reduce using rule 331 (optAlias -> idOrString .)
    R_NATURAL       reduce using rule 331 (optAlias -> idOrString .)
    R_INNER         reduce using rule 331 (optAlias -> idOrString .)
    R_LEFT          reduce using rule 331 (optAlias -> idOrString .)
    R_RIGHT         reduce using rule 331 (optAlias -> idOrString .)
    R_FULL          reduce using rule 331 (optAlias -> idOrString .)
    R_GROUP         reduce using rule 331 (optAlias -> idOrString .)
    R_ORDER         reduce using rule 331 (optAlias -> idOrString .)
    R_LIMIT         reduce using rule 331 (optAlias -> idOrString .)
    R_UNION         reduce using rule 331 (optAlias -> idOrString .)
    R_INTERSECT     reduce using rule 331 (optAlias -> idOrString .)
    R_EXCEPT        reduce using rule 331 (optAlias -> idOrString .)
    S_PARDER        reduce using rule 331 (optAlias -> idOrString .)
    R_FROM          reduce using rule 331 (optAlias -> idOrString .)
    R_ON            reduce using rule 331 (optAlias -> idOrString .)
    R_USING         reduce using rule 331 (optAlias -> idOrString .)


state 162

    (336) fromBody -> S_PARIZQ selectStmt . S_PARDER R_AS idOrString
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 259
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 163

    (388) deleteStmt -> R_DELETE fromCl whereCl .

    S_PUNTOCOMA     reduce using rule 388 (deleteStmt -> R_DELETE fromCl whereCl .)


state 164

    (352) whereCl -> R_WHERE . expBool
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 99
    S_PARIZQ        shift and go to state 211
    R_EXISTS        shift and go to state 117
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expBool                        shift and go to state 260
    boolean                        shift and go to state 100
    datatype                       shift and go to state 212
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    stringExp                      shift and go to state 122
    timeStamp                      shift and go to state 113

state 165

    (320) fromCl -> R_FROM tableExp .
    (333) tableExp -> tableExp . S_COMA fromBody

    R_WHERE         reduce using rule 320 (fromCl -> R_FROM tableExp .)
    S_PUNTOCOMA     reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_NATURAL       reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_INNER         reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_LEFT          reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_RIGHT         reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_FULL          reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_GROUP         reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_ORDER         reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_LIMIT         reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_UNION         reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_INTERSECT     reduce using rule 320 (fromCl -> R_FROM tableExp .)
    R_EXCEPT        reduce using rule 320 (fromCl -> R_FROM tableExp .)
    S_PARDER        reduce using rule 320 (fromCl -> R_FROM tableExp .)
    S_COMA          shift and go to state 261


state 166

    (334) tableExp -> fromBody .

    S_COMA          reduce using rule 334 (tableExp -> fromBody .)
    R_WHERE         reduce using rule 334 (tableExp -> fromBody .)
    S_PUNTOCOMA     reduce using rule 334 (tableExp -> fromBody .)
    R_NATURAL       reduce using rule 334 (tableExp -> fromBody .)
    R_INNER         reduce using rule 334 (tableExp -> fromBody .)
    R_LEFT          reduce using rule 334 (tableExp -> fromBody .)
    R_RIGHT         reduce using rule 334 (tableExp -> fromBody .)
    R_FULL          reduce using rule 334 (tableExp -> fromBody .)
    R_GROUP         reduce using rule 334 (tableExp -> fromBody .)
    R_ORDER         reduce using rule 334 (tableExp -> fromBody .)
    R_LIMIT         reduce using rule 334 (tableExp -> fromBody .)
    R_UNION         reduce using rule 334 (tableExp -> fromBody .)
    R_INTERSECT     reduce using rule 334 (tableExp -> fromBody .)
    R_EXCEPT        reduce using rule 334 (tableExp -> fromBody .)
    S_PARDER        reduce using rule 334 (tableExp -> fromBody .)


state 167

    (389) truncateStmt -> R_TRUNCATE tableOpt ID .

    S_PUNTOCOMA     reduce using rule 389 (truncateStmt -> R_TRUNCATE tableOpt ID .)


state 168

    (312) selectStmt -> R_SELECT R_DISTINCT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (320) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 76

    fromCl                         shift and go to state 262

state 169

    (313) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl limitCl
    (352) whereCl -> . R_WHERE expBool
    (353) whereCl -> .
    (337) joinList -> . joinList2
    (338) joinList2 -> . joinList2 joinCl
    (339) joinList2 -> . joinCl
    (340) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (341) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (342) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (345) joinOpt -> . R_INNER
    (346) joinOpt -> . R_LEFT
    (347) joinOpt -> . R_LEFT R_OUTER
    (348) joinOpt -> . R_RIGHT
    (349) joinOpt -> . R_RIGHT R_OUTER
    (350) joinOpt -> . R_FULL
    (351) joinOpt -> . R_FULL R_OUTER

    R_WHERE         shift and go to state 164
    R_GROUP         reduce using rule 353 (whereCl -> .)
    R_ORDER         reduce using rule 353 (whereCl -> .)
    R_LIMIT         reduce using rule 353 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 353 (whereCl -> .)
    R_UNION         reduce using rule 353 (whereCl -> .)
    R_INTERSECT     reduce using rule 353 (whereCl -> .)
    R_EXCEPT        reduce using rule 353 (whereCl -> .)
    S_PARDER        reduce using rule 353 (whereCl -> .)
    R_NATURAL       shift and go to state 268
    R_INNER         shift and go to state 269
    R_LEFT          shift and go to state 270
    R_RIGHT         shift and go to state 271
    R_FULL          shift and go to state 272

    whereCl                        shift and go to state 263
    joinList                       shift and go to state 264
    joinList2                      shift and go to state 265
    joinCl                         shift and go to state 266
    joinOpt                        shift and go to state 267

state 170

    (326) selectList -> selectList S_COMA . selectListParams optAlias
    (328) selectListParams -> . expresion
    (329) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    ID              shift and go to state 86
    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    selectListParams               shift and go to state 273
    expresion                      shift and go to state 85
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 171

    (327) selectList -> selectListParams optAlias .

    S_COMA          reduce using rule 327 (selectList -> selectListParams optAlias .)
    R_FROM          reduce using rule 327 (selectList -> selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 327 (selectList -> selectListParams optAlias .)
    R_UNION         reduce using rule 327 (selectList -> selectListParams optAlias .)
    R_INTERSECT     reduce using rule 327 (selectList -> selectListParams optAlias .)
    R_EXCEPT        reduce using rule 327 (selectList -> selectListParams optAlias .)
    S_PARDER        reduce using rule 327 (selectList -> selectListParams optAlias .)


state 172

    (329) selectListParams -> ID S_PUNTO . O_PRODUCTO
    (261) columnName -> ID S_PUNTO . ID

    O_PRODUCTO      shift and go to state 275
    ID              shift and go to state 274


state 173

    (136) funcCall -> ID S_PARIZQ . paramsList S_PARDER
    (137) funcCall -> ID S_PARIZQ . S_PARDER
    (171) paramsList -> . paramsList S_COMA datatype
    (172) paramsList -> . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    S_PARDER        shift and go to state 277
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    paramsList                     shift and go to state 276
    datatype                       shift and go to state 278
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 174

    (173) datatype -> datatype O_SUMA . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 279
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 175

    (174) datatype -> datatype O_RESTA . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 280
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 176

    (175) datatype -> datatype O_PRODUCTO . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 281
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 177

    (176) datatype -> datatype O_DIVISION . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 282
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 178

    (177) datatype -> datatype O_EXPONENTE . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 283
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 179

    (178) datatype -> datatype O_MODULAR . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 284
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 180

    (179) datatype -> datatype OC_CONCATENAR . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 285
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 181

    (244) boolean -> datatype R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 286


state 182

    (245) boolean -> datatype R_NOT . R_IN S_PARIZQ selectStmt S_PARDER
    (204) expComp -> datatype R_NOT . R_BETWEEN datatype R_AND datatype
    (223) expSubq -> datatype R_NOT . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 287
    R_BETWEEN       shift and go to state 288


state 183

    (195) expComp -> datatype OL_MENORQUE . datatype
    (216) expSubq -> datatype OL_MENORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 289
    subqValues                     shift and go to state 290
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 184

    (196) expComp -> datatype OL_MAYORQUE . datatype
    (217) expSubq -> datatype OL_MAYORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 294
    subqValues                     shift and go to state 295
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 185

    (197) expComp -> datatype OL_MAYORIGUALQUE . datatype
    (218) expSubq -> datatype OL_MAYORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 296
    subqValues                     shift and go to state 297
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 186

    (198) expComp -> datatype OL_MENORIGUALQUE . datatype
    (219) expSubq -> datatype OL_MENORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 298
    subqValues                     shift and go to state 299
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 187

    (199) expComp -> datatype S_IGUAL . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 300
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 188

    (200) expComp -> datatype OL_DISTINTODE . datatype
    (221) expSubq -> datatype OL_DISTINTODE . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 301
    subqValues                     shift and go to state 302
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 189

    (201) expComp -> datatype R_IS . R_DISTINCT R_FROM datatype
    (202) expComp -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype
    (208) expComp -> datatype R_IS . R_NULL
    (209) expComp -> datatype R_IS . R_TRUE
    (210) expComp -> datatype R_IS . R_FALSE
    (211) expComp -> datatype R_IS . R_UNKNOWN
    (212) expComp -> datatype R_IS . R_NOT R_NULL
    (213) expComp -> datatype R_IS . R_NOT R_TRUE
    (214) expComp -> datatype R_IS . R_NOT R_FALSE
    (215) expComp -> datatype R_IS . R_NOT R_UNKNOWN
    (225) expSubq -> datatype R_IS . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype R_IS . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype R_IS . R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype R_IS . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype R_IS . R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> datatype R_IS . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype R_IS . R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> datatype R_IS . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype R_IS . R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 303
    R_NOT           shift and go to state 304
    R_NULL          shift and go to state 305
    R_TRUE          shift and go to state 306
    R_FALSE         shift and go to state 307
    R_UNKNOWN       shift and go to state 308


state 190

    (203) expComp -> datatype R_BETWEEN . datatype R_AND datatype
    (205) expComp -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype
    (222) expSubq -> datatype R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_SYMMETRIC     shift and go to state 310
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 309
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 191

    (206) expComp -> datatype R_ISNULL .
    (229) expSubq -> datatype R_ISNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_OR            reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_IS            reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_AS            reduce using rule 206 (expComp -> datatype R_ISNULL .)
    ID              reduce using rule 206 (expComp -> datatype R_ISNULL .)
    STRING          reduce using rule 206 (expComp -> datatype R_ISNULL .)
    CHARACTER       reduce using rule 206 (expComp -> datatype R_ISNULL .)
    S_COMA          reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_FROM          reduce using rule 206 (expComp -> datatype R_ISNULL .)
    S_PUNTOCOMA     reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_UNION         reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_INTERSECT     reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_EXCEPT        reduce using rule 206 (expComp -> datatype R_ISNULL .)
    S_PARDER        reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_GROUP         reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_ORDER         reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_LIMIT         reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_THEN          reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_NATURAL       reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_INNER         reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_LEFT          reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_RIGHT         reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_FULL          reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_WHERE         reduce using rule 206 (expComp -> datatype R_ISNULL .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 311

state 192

    (207) expComp -> datatype R_NOTNULL .
    (230) expSubq -> datatype R_NOTNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_OR            reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_IS            reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_AS            reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    ID              reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    STRING          reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    CHARACTER       reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    S_COMA          reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_FROM          reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    S_PUNTOCOMA     reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_UNION         reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_INTERSECT     reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_EXCEPT        reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    S_PARDER        reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_GROUP         reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_ORDER         reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_LIMIT         reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_THEN          reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_NATURAL       reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_INNER         reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_LEFT          reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_RIGHT         reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_FULL          reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_WHERE         reduce using rule 207 (expComp -> datatype R_NOTNULL .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 312

state 193

    (220) expSubq -> datatype OL_ESIGUAL . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 313

state 194

    (248) expBool -> expBool R_AND . expBool
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 99
    S_PARIZQ        shift and go to state 211
    R_EXISTS        shift and go to state 117
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expBool                        shift and go to state 314
    boolean                        shift and go to state 100
    datatype                       shift and go to state 212
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    stringExp                      shift and go to state 122
    timeStamp                      shift and go to state 113

state 195

    (249) expBool -> expBool R_OR . expBool
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 99
    S_PARIZQ        shift and go to state 211
    R_EXISTS        shift and go to state 117
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expBool                        shift and go to state 315
    boolean                        shift and go to state 100
    datatype                       shift and go to state 212
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    stringExp                      shift and go to state 122
    timeStamp                      shift and go to state 113

state 196

    (252) expBool -> expBool optBoolPredicate .

    R_AND           reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_OR            reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_IS            reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_AS            reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    ID              reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    STRING          reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    CHARACTER       reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    S_COMA          reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_FROM          reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    S_PUNTOCOMA     reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_UNION         reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_INTERSECT     reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_EXCEPT        reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    S_PARDER        reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_GROUP         reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_ORDER         reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_LIMIT         reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_THEN          reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_NATURAL       reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_INNER         reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_LEFT          reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_RIGHT         reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_FULL          reduce using rule 252 (expBool -> expBool optBoolPredicate .)
    R_WHERE         reduce using rule 252 (expBool -> expBool optBoolPredicate .)


state 197

    (254) optBoolPredicate -> R_IS . R_TRUE
    (255) optBoolPredicate -> R_IS . R_FALSE
    (256) optBoolPredicate -> R_IS . R_UNKNOWN
    (257) optBoolPredicate -> R_IS . R_NOT R_TRUE
    (258) optBoolPredicate -> R_IS . R_NOT R_FALSE
    (259) optBoolPredicate -> R_IS . R_NOT R_UNKNOWN

    R_TRUE          shift and go to state 316
    R_FALSE         shift and go to state 317
    R_UNKNOWN       shift and go to state 318
    R_NOT           shift and go to state 319


state 198

    (319) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (194) datatype -> S_PARIZQ . datatype S_PARDER
    (251) expBool -> S_PARIZQ . expBool S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 198
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    selectStmt                     shift and go to state 68
    datatype                       shift and go to state 200
    expBool                        shift and go to state 201
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 199

    (135) expresion -> S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 320
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 200

    (194) datatype -> S_PARIZQ datatype . S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype
    (244) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (195) expComp -> datatype . OL_MENORQUE datatype
    (196) expComp -> datatype . OL_MAYORQUE datatype
    (197) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (198) expComp -> datatype . OL_MENORIGUALQUE datatype
    (199) expComp -> datatype . S_IGUAL datatype
    (200) expComp -> datatype . OL_DISTINTODE datatype
    (201) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (204) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> datatype . R_ISNULL
    (207) expComp -> datatype . R_NOTNULL
    (208) expComp -> datatype . R_IS R_NULL
    (209) expComp -> datatype . R_IS R_TRUE
    (210) expComp -> datatype . R_IS R_FALSE
    (211) expComp -> datatype . R_IS R_UNKNOWN
    (212) expComp -> datatype . R_IS R_NOT R_NULL
    (213) expComp -> datatype . R_IS R_NOT R_TRUE
    (214) expComp -> datatype . R_IS R_NOT R_FALSE
    (215) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (216) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    S_PARDER        shift and go to state 321
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180
    R_IN            shift and go to state 181
    R_NOT           shift and go to state 182
    OL_MENORQUE     shift and go to state 183
    OL_MAYORQUE     shift and go to state 184
    OL_MAYORIGUALQUE shift and go to state 185
    OL_MENORIGUALQUE shift and go to state 186
    S_IGUAL         shift and go to state 187
    OL_DISTINTODE   shift and go to state 188
    R_IS            shift and go to state 189
    R_BETWEEN       shift and go to state 190
    R_ISNULL        shift and go to state 191
    R_NOTNULL       shift and go to state 192
    OL_ESIGUAL      shift and go to state 193


state 201

    (251) expBool -> S_PARIZQ expBool . S_PARDER
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PARDER        shift and go to state 322
    R_AND           shift and go to state 194
    R_OR            shift and go to state 195
    R_IS            shift and go to state 197

    optBoolPredicate               shift and go to state 196

state 202

    (187) datatype -> O_SUMA datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 187 (datatype -> O_SUMA datatype .)
    O_RESTA         reduce using rule 187 (datatype -> O_SUMA datatype .)
    O_PRODUCTO      reduce using rule 187 (datatype -> O_SUMA datatype .)
    O_DIVISION      reduce using rule 187 (datatype -> O_SUMA datatype .)
    O_MODULAR       reduce using rule 187 (datatype -> O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_IN            reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_NOT           reduce using rule 187 (datatype -> O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 187 (datatype -> O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 187 (datatype -> O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 187 (datatype -> O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 187 (datatype -> O_SUMA datatype .)
    S_IGUAL         reduce using rule 187 (datatype -> O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_IS            reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_BETWEEN       reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_ISNULL        reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_NOTNULL       reduce using rule 187 (datatype -> O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_AS            reduce using rule 187 (datatype -> O_SUMA datatype .)
    ID              reduce using rule 187 (datatype -> O_SUMA datatype .)
    STRING          reduce using rule 187 (datatype -> O_SUMA datatype .)
    CHARACTER       reduce using rule 187 (datatype -> O_SUMA datatype .)
    S_COMA          reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_FROM          reduce using rule 187 (datatype -> O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_UNION         reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_INTERSECT     reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_EXCEPT        reduce using rule 187 (datatype -> O_SUMA datatype .)
    S_PARDER        reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_AND           reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_OR            reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_GROUP         reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_ORDER         reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_LIMIT         reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_THEN          reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_NATURAL       reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_INNER         reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_LEFT          reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_RIGHT         reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_FULL          reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_WHERE         reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_ALL           reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_ANY           reduce using rule 187 (datatype -> O_SUMA datatype .)
    R_SOME          reduce using rule 187 (datatype -> O_SUMA datatype .)
    O_EXPONENTE     shift and go to state 178

  ! O_EXPONENTE     [ reduce using rule 187 (datatype -> O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 174 ]
  ! O_RESTA         [ shift and go to state 175 ]
  ! O_PRODUCTO      [ shift and go to state 176 ]
  ! O_DIVISION      [ shift and go to state 177 ]
  ! O_MODULAR       [ shift and go to state 179 ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 203

    (188) datatype -> columnName .

    O_SUMA          reduce using rule 188 (datatype -> columnName .)
    O_RESTA         reduce using rule 188 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 188 (datatype -> columnName .)
    O_DIVISION      reduce using rule 188 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 188 (datatype -> columnName .)
    O_MODULAR       reduce using rule 188 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 188 (datatype -> columnName .)
    R_IN            reduce using rule 188 (datatype -> columnName .)
    R_NOT           reduce using rule 188 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 188 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 188 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 188 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 188 (datatype -> columnName .)
    S_IGUAL         reduce using rule 188 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 188 (datatype -> columnName .)
    R_IS            reduce using rule 188 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 188 (datatype -> columnName .)
    R_ISNULL        reduce using rule 188 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 188 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 188 (datatype -> columnName .)
    R_AS            reduce using rule 188 (datatype -> columnName .)
    ID              reduce using rule 188 (datatype -> columnName .)
    STRING          reduce using rule 188 (datatype -> columnName .)
    CHARACTER       reduce using rule 188 (datatype -> columnName .)
    S_COMA          reduce using rule 188 (datatype -> columnName .)
    R_FROM          reduce using rule 188 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 188 (datatype -> columnName .)
    R_UNION         reduce using rule 188 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 188 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 188 (datatype -> columnName .)
    S_PARDER        reduce using rule 188 (datatype -> columnName .)
    R_AND           reduce using rule 188 (datatype -> columnName .)
    R_OR            reduce using rule 188 (datatype -> columnName .)
    R_GROUP         reduce using rule 188 (datatype -> columnName .)
    R_ORDER         reduce using rule 188 (datatype -> columnName .)
    R_LIMIT         reduce using rule 188 (datatype -> columnName .)
    R_THEN          reduce using rule 188 (datatype -> columnName .)
    R_NATURAL       reduce using rule 188 (datatype -> columnName .)
    R_INNER         reduce using rule 188 (datatype -> columnName .)
    R_LEFT          reduce using rule 188 (datatype -> columnName .)
    R_RIGHT         reduce using rule 188 (datatype -> columnName .)
    R_FULL          reduce using rule 188 (datatype -> columnName .)
    R_WHERE         reduce using rule 188 (datatype -> columnName .)
    R_ALL           reduce using rule 188 (datatype -> columnName .)
    R_ANY           reduce using rule 188 (datatype -> columnName .)
    R_SOME          reduce using rule 188 (datatype -> columnName .)


state 204

    (194) datatype -> S_PARIZQ . datatype S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 323
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 205

    (165) literal -> STRING .

    O_SUMA          reduce using rule 165 (literal -> STRING .)
    O_RESTA         reduce using rule 165 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 165 (literal -> STRING .)
    O_DIVISION      reduce using rule 165 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 165 (literal -> STRING .)
    O_MODULAR       reduce using rule 165 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 165 (literal -> STRING .)
    R_IN            reduce using rule 165 (literal -> STRING .)
    R_NOT           reduce using rule 165 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 165 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 165 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 165 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 165 (literal -> STRING .)
    S_IGUAL         reduce using rule 165 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 165 (literal -> STRING .)
    R_IS            reduce using rule 165 (literal -> STRING .)
    R_BETWEEN       reduce using rule 165 (literal -> STRING .)
    R_ISNULL        reduce using rule 165 (literal -> STRING .)
    R_NOTNULL       reduce using rule 165 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 165 (literal -> STRING .)
    R_AS            reduce using rule 165 (literal -> STRING .)
    ID              reduce using rule 165 (literal -> STRING .)
    STRING          reduce using rule 165 (literal -> STRING .)
    CHARACTER       reduce using rule 165 (literal -> STRING .)
    S_COMA          reduce using rule 165 (literal -> STRING .)
    R_FROM          reduce using rule 165 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 165 (literal -> STRING .)
    R_UNION         reduce using rule 165 (literal -> STRING .)
    R_INTERSECT     reduce using rule 165 (literal -> STRING .)
    R_EXCEPT        reduce using rule 165 (literal -> STRING .)
    S_PARDER        reduce using rule 165 (literal -> STRING .)
    R_AND           reduce using rule 165 (literal -> STRING .)
    R_OR            reduce using rule 165 (literal -> STRING .)
    R_GROUP         reduce using rule 165 (literal -> STRING .)
    R_ORDER         reduce using rule 165 (literal -> STRING .)
    R_LIMIT         reduce using rule 165 (literal -> STRING .)
    R_THEN          reduce using rule 165 (literal -> STRING .)
    R_NATURAL       reduce using rule 165 (literal -> STRING .)
    R_INNER         reduce using rule 165 (literal -> STRING .)
    R_LEFT          reduce using rule 165 (literal -> STRING .)
    R_RIGHT         reduce using rule 165 (literal -> STRING .)
    R_FULL          reduce using rule 165 (literal -> STRING .)
    R_WHERE         reduce using rule 165 (literal -> STRING .)
    R_ALL           reduce using rule 165 (literal -> STRING .)
    R_ANY           reduce using rule 165 (literal -> STRING .)
    R_SOME          reduce using rule 165 (literal -> STRING .)
    R_END           reduce using rule 165 (literal -> STRING .)
    R_ELSE          reduce using rule 165 (literal -> STRING .)
    R_WHEN          reduce using rule 165 (literal -> STRING .)
    R_DEFAULT       reduce using rule 165 (literal -> STRING .)
    R_NULL          reduce using rule 165 (literal -> STRING .)
    R_PRIMARY       reduce using rule 165 (literal -> STRING .)
    R_REFERENCES    reduce using rule 165 (literal -> STRING .)
    R_CONSTRAINT    reduce using rule 165 (literal -> STRING .)
    R_UNIQUE        reduce using rule 165 (literal -> STRING .)
    R_CHECK         reduce using rule 165 (literal -> STRING .)


state 206

    (186) datatype -> O_RESTA datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 186 (datatype -> O_RESTA datatype .)
    O_RESTA         reduce using rule 186 (datatype -> O_RESTA datatype .)
    O_PRODUCTO      reduce using rule 186 (datatype -> O_RESTA datatype .)
    O_DIVISION      reduce using rule 186 (datatype -> O_RESTA datatype .)
    O_MODULAR       reduce using rule 186 (datatype -> O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_IN            reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_NOT           reduce using rule 186 (datatype -> O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 186 (datatype -> O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 186 (datatype -> O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 186 (datatype -> O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 186 (datatype -> O_RESTA datatype .)
    S_IGUAL         reduce using rule 186 (datatype -> O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_IS            reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_BETWEEN       reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_ISNULL        reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_NOTNULL       reduce using rule 186 (datatype -> O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_AS            reduce using rule 186 (datatype -> O_RESTA datatype .)
    ID              reduce using rule 186 (datatype -> O_RESTA datatype .)
    STRING          reduce using rule 186 (datatype -> O_RESTA datatype .)
    CHARACTER       reduce using rule 186 (datatype -> O_RESTA datatype .)
    S_COMA          reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_FROM          reduce using rule 186 (datatype -> O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_UNION         reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_INTERSECT     reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_EXCEPT        reduce using rule 186 (datatype -> O_RESTA datatype .)
    S_PARDER        reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_AND           reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_OR            reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_GROUP         reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_ORDER         reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_LIMIT         reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_THEN          reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_NATURAL       reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_INNER         reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_LEFT          reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_RIGHT         reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_FULL          reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_WHERE         reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_ALL           reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_ANY           reduce using rule 186 (datatype -> O_RESTA datatype .)
    R_SOME          reduce using rule 186 (datatype -> O_RESTA datatype .)
    O_EXPONENTE     shift and go to state 178

  ! O_EXPONENTE     [ reduce using rule 186 (datatype -> O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 174 ]
  ! O_RESTA         [ shift and go to state 175 ]
  ! O_PRODUCTO      [ shift and go to state 176 ]
  ! O_DIVISION      [ shift and go to state 177 ]
  ! O_MODULAR       [ shift and go to state 179 ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 207

    (180) datatype -> R_CASE caseList . optElse R_END
    (181) caseList -> caseList . caseWhen
    (184) optElse -> . R_ELSE literal
    (185) optElse -> .
    (183) caseWhen -> . R_WHEN expBool R_THEN literal

    R_ELSE          shift and go to state 326
    R_END           reduce using rule 185 (optElse -> .)
    R_WHEN          shift and go to state 209

    optElse                        shift and go to state 324
    caseWhen                       shift and go to state 325

state 208

    (182) caseList -> caseWhen .

    R_ELSE          reduce using rule 182 (caseList -> caseWhen .)
    R_WHEN          reduce using rule 182 (caseList -> caseWhen .)
    R_END           reduce using rule 182 (caseList -> caseWhen .)


state 209

    (183) caseWhen -> R_WHEN . expBool R_THEN literal
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 99
    S_PARIZQ        shift and go to state 211
    R_EXISTS        shift and go to state 117
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expBool                        shift and go to state 327
    literal                        shift and go to state 94
    boolean                        shift and go to state 100
    datatype                       shift and go to state 212
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    columnName                     shift and go to state 93
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    stringExp                      shift and go to state 122
    timeStamp                      shift and go to state 113

state 210

    (250) expBool -> R_NOT expBool .
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 250 (expBool -> R_NOT expBool .)
    ID              reduce using rule 250 (expBool -> R_NOT expBool .)
    STRING          reduce using rule 250 (expBool -> R_NOT expBool .)
    CHARACTER       reduce using rule 250 (expBool -> R_NOT expBool .)
    S_COMA          reduce using rule 250 (expBool -> R_NOT expBool .)
    R_FROM          reduce using rule 250 (expBool -> R_NOT expBool .)
    S_PUNTOCOMA     reduce using rule 250 (expBool -> R_NOT expBool .)
    R_UNION         reduce using rule 250 (expBool -> R_NOT expBool .)
    R_INTERSECT     reduce using rule 250 (expBool -> R_NOT expBool .)
    R_EXCEPT        reduce using rule 250 (expBool -> R_NOT expBool .)
    S_PARDER        reduce using rule 250 (expBool -> R_NOT expBool .)
    R_GROUP         reduce using rule 250 (expBool -> R_NOT expBool .)
    R_ORDER         reduce using rule 250 (expBool -> R_NOT expBool .)
    R_LIMIT         reduce using rule 250 (expBool -> R_NOT expBool .)
    R_THEN          reduce using rule 250 (expBool -> R_NOT expBool .)
    R_NATURAL       reduce using rule 250 (expBool -> R_NOT expBool .)
    R_INNER         reduce using rule 250 (expBool -> R_NOT expBool .)
    R_LEFT          reduce using rule 250 (expBool -> R_NOT expBool .)
    R_RIGHT         reduce using rule 250 (expBool -> R_NOT expBool .)
    R_FULL          reduce using rule 250 (expBool -> R_NOT expBool .)
    R_WHERE         reduce using rule 250 (expBool -> R_NOT expBool .)
    R_AND           shift and go to state 194
    R_OR            shift and go to state 195
    R_IS            shift and go to state 197

  ! R_AND           [ reduce using rule 250 (expBool -> R_NOT expBool .) ]
  ! R_OR            [ reduce using rule 250 (expBool -> R_NOT expBool .) ]
  ! R_IS            [ reduce using rule 250 (expBool -> R_NOT expBool .) ]

    optBoolPredicate               shift and go to state 196

state 211

    (251) expBool -> S_PARIZQ . expBool S_PARDER
    (194) datatype -> S_PARIZQ . datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_NOT           shift and go to state 99
    S_PARIZQ        shift and go to state 211
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_EXISTS        shift and go to state 117
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expBool                        shift and go to state 201
    datatype                       shift and go to state 200
    boolean                        shift and go to state 100
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    timeStamp                      shift and go to state 113
    stringExp                      shift and go to state 122

state 212

    (244) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype
    (195) expComp -> datatype . OL_MENORQUE datatype
    (196) expComp -> datatype . OL_MAYORQUE datatype
    (197) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (198) expComp -> datatype . OL_MENORIGUALQUE datatype
    (199) expComp -> datatype . S_IGUAL datatype
    (200) expComp -> datatype . OL_DISTINTODE datatype
    (201) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (204) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> datatype . R_ISNULL
    (207) expComp -> datatype . R_NOTNULL
    (208) expComp -> datatype . R_IS R_NULL
    (209) expComp -> datatype . R_IS R_TRUE
    (210) expComp -> datatype . R_IS R_FALSE
    (211) expComp -> datatype . R_IS R_UNKNOWN
    (212) expComp -> datatype . R_IS R_NOT R_NULL
    (213) expComp -> datatype . R_IS R_NOT R_TRUE
    (214) expComp -> datatype . R_IS R_NOT R_FALSE
    (215) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (216) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 181
    R_NOT           shift and go to state 182
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180
    OL_MENORQUE     shift and go to state 183
    OL_MAYORQUE     shift and go to state 184
    OL_MAYORIGUALQUE shift and go to state 185
    OL_MENORIGUALQUE shift and go to state 186
    S_IGUAL         shift and go to state 187
    OL_DISTINTODE   shift and go to state 188
    R_IS            shift and go to state 189
    R_BETWEEN       shift and go to state 190
    R_ISNULL        shift and go to state 191
    R_NOTNULL       shift and go to state 192
    OL_ESIGUAL      shift and go to state 193


state 213

    (138) funcCall -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 328


state 214

    (139) funcCall -> R_COUNT S_PARIZQ . datatype S_PARDER
    (140) funcCall -> R_COUNT S_PARIZQ . O_PRODUCTO S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    O_PRODUCTO      shift and go to state 330
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 329
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 215

    (141) funcCall -> R_SUM S_PARIZQ . datatype S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 331
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 216

    (142) funcCall -> R_PROM S_PARIZQ . datatype S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 332
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 217

    (143) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM columnName S_PARDER
    (147) optsExtract -> . R_YEAR
    (148) optsExtract -> . R_MONTH
    (149) optsExtract -> . R_DAY
    (150) optsExtract -> . R_HOUR
    (151) optsExtract -> . R_MINUTE
    (152) optsExtract -> . R_SECOND

    R_YEAR          shift and go to state 334
    R_MONTH         shift and go to state 335
    R_DAY           shift and go to state 336
    R_HOUR          shift and go to state 337
    R_MINUTE        shift and go to state 338
    R_SECOND        shift and go to state 339

    optsExtract                    shift and go to state 333

state 218

    (153) datePart -> R_DATE_PART S_PARIZQ . STRING S_COMA dateSource S_PARDER

    STRING          shift and go to state 340


state 219

    (243) boolean -> R_EXISTS S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 341

state 220

    (145) timeStamp -> R_TIMESTAMP STRING .

    O_SUMA          reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    O_RESTA         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    O_PRODUCTO      reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    O_DIVISION      reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    O_EXPONENTE     reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    O_MODULAR       reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    OC_CONCATENAR   reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_IN            reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOT           reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORQUE     reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORQUE     reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORIGUALQUE reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORIGUALQUE reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    S_IGUAL         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    OL_DISTINTODE   reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_IS            reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_BETWEEN       reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_ISNULL        reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOTNULL       reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    OL_ESIGUAL      reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_AS            reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    ID              reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    STRING          reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    CHARACTER       reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    S_COMA          reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_FROM          reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    S_PUNTOCOMA     reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_UNION         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_INTERSECT     reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_EXCEPT        reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    S_PARDER        reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_AND           reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_OR            reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_GROUP         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_ORDER         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_LIMIT         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_THEN          reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_NATURAL       reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_INNER         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_LEFT          reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_RIGHT         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_FULL          reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_WHERE         reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_ALL           reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_ANY           reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)
    R_SOME          reduce using rule 145 (timeStamp -> R_TIMESTAMP STRING .)


state 221

    (146) timeStamp -> R_INTERVAL STRING .

    O_SUMA          reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    O_RESTA         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    O_PRODUCTO      reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    O_DIVISION      reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    O_EXPONENTE     reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    O_MODULAR       reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    OC_CONCATENAR   reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_IN            reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_NOT           reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORQUE     reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORQUE     reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORIGUALQUE reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORIGUALQUE reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    S_IGUAL         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    OL_DISTINTODE   reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_IS            reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_BETWEEN       reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_ISNULL        reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_NOTNULL       reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    OL_ESIGUAL      reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_AS            reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    ID              reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    STRING          reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    CHARACTER       reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    S_COMA          reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_FROM          reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    S_PUNTOCOMA     reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_UNION         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_INTERSECT     reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_EXCEPT        reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    S_PARDER        reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_AND           reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_OR            reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_GROUP         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_ORDER         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_LIMIT         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_THEN          reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_NATURAL       reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_INNER         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_LEFT          reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_RIGHT         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_FULL          reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_WHERE         reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_ALL           reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_ANY           reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)
    R_SOME          reduce using rule 146 (timeStamp -> R_INTERVAL STRING .)


state 222

    (237) expSubq -> stringExp R_LIKE . STRING

    STRING          shift and go to state 342


state 223

    (316) selectStmt -> selectStmt R_UNION allOpt selectStmt .
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 316 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_UNION         reduce using rule 316 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_INTERSECT     reduce using rule 316 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_EXCEPT        reduce using rule 316 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    S_PARDER        reduce using rule 316 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 44 ]
  ! R_INTERSECT     [ shift and go to state 45 ]
  ! R_EXCEPT        [ shift and go to state 46 ]


state 224

    (317) selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 317 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_UNION         reduce using rule 317 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 317 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 317 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    S_PARDER        reduce using rule 317 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 44 ]
  ! R_INTERSECT     [ shift and go to state 45 ]
  ! R_EXCEPT        [ shift and go to state 46 ]


state 225

    (318) selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 318 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_UNION         reduce using rule 318 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 318 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 318 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    S_PARDER        reduce using rule 318 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 44 ]
  ! R_INTERSECT     [ shift and go to state 45 ]
  ! R_EXCEPT        [ shift and go to state 46 ]


state 226

    (17) stmt -> ifStmt R_END R_IF S_PUNTOCOMA .

    R_CREATE        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SHOW          reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ALTER         reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DROP          reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_INSERT        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DELETE        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_USE           reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SELECT        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_IF            reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    ID              reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    $end            reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_END           reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_RETURN        reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 17 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)


state 227

    (19) ifStmt -> R_IF S_PARIZQ expresion S_PARDER . R_THEN List_body else_

    R_THEN          shift and go to state 343


state 228

    (261) columnName -> ID S_PUNTO . ID

    ID              shift and go to state 274


state 229

    (396) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ . params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ . S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (399) params_list -> . params_list S_COMA param_item
    (400) params_list -> . param_item
    (401) param_item -> . ID types

    S_PARDER        shift and go to state 346
    ID              shift and go to state 344

    params_list                    shift and go to state 345
    param_item                     shift and go to state 347

state 230

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID . S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID . S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_PARIZQ        shift and go to state 348


state 231

    (58) createOpts -> orReplace R_DATABASE ifNotExists . idOrString createOwner createMode
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 349

state 232

    (46) createOpts -> unique_index R_INDEX ID . R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    R_ON            shift and go to state 350


state 233

    (57) createOpts -> R_TABLE ifNotExists idOrString . S_PARIZQ createTableList S_PARDER inheritsOpt

    S_PARIZQ        shift and go to state 351


state 234

    (62) ifNotExists -> R_IF R_NOT . R_EXISTS

    R_EXISTS        shift and go to state 352


state 235

    (61) createOpts -> R_TYPE ifNotExists ID . R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    R_AS            shift and go to state 353


state 236

    (393) likeOpt -> R_LIKE STRING .

    S_PUNTOCOMA     reduce using rule 393 (likeOpt -> R_LIKE STRING .)


state 237

    (277) alterStmt -> R_ALTER R_DATABASE idOrString alterDb .

    S_PUNTOCOMA     reduce using rule 277 (alterStmt -> R_ALTER R_DATABASE idOrString alterDb .)


state 238

    (282) alterDb -> R_RENAME . R_TO idOrString

    R_TO            shift and go to state 354


state 239

    (283) alterDb -> R_OWNER . R_TO ownerOPts

    R_TO            shift and go to state 355


state 240

    (290) alterTable -> R_ALTER . alterAlter
    (298) alterAlter -> . R_COLUMN ID R_SET nullOpt
    (299) alterAlter -> . R_COLUMN ID R_SET defaultVal
    (300) alterAlter -> . R_COLUMN ID R_TYPE types

    R_COLUMN        shift and go to state 357

    alterAlter                     shift and go to state 356

state 241

    (278) alterStmt -> R_ALTER R_TABLE idOrString alterTableList .
    (287) alterTableList -> alterTableList . S_COMA alterTable

    S_PUNTOCOMA     reduce using rule 278 (alterStmt -> R_ALTER R_TABLE idOrString alterTableList .)
    S_COMA          shift and go to state 358


state 242

    (288) alterTableList -> alterTable .

    S_COMA          reduce using rule 288 (alterTableList -> alterTable .)
    S_PUNTOCOMA     reduce using rule 288 (alterTableList -> alterTable .)


state 243

    (289) alterTable -> R_ADD . alterAdd
    (293) alterAdd -> . R_COLUMN ID types
    (294) alterAdd -> . createConstraint
    (295) alterAdd -> . createPrimary
    (296) alterAdd -> . createForeign
    (297) alterAdd -> . constrName R_UNIQUE S_PARIZQ ID S_PARDER
    (83) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (85) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (86) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (87) constrName -> . R_CONSTRAINT ID
    (88) constrName -> .

    R_COLUMN        shift and go to state 360
    R_PRIMARY       shift and go to state 365
    R_CONSTRAINT    shift and go to state 366
    R_UNIQUE        reduce using rule 88 (constrName -> .)
    R_CHECK         reduce using rule 88 (constrName -> .)
    R_FOREIGN       reduce using rule 88 (constrName -> .)

    alterAdd                       shift and go to state 359
    createConstraint               shift and go to state 361
    createPrimary                  shift and go to state 362
    createForeign                  shift and go to state 363
    constrName                     shift and go to state 364

state 244

    (291) alterTable -> R_DROP . alterDrop
    (301) alterDrop -> . R_CONSTRAINT ID
    (302) alterDrop -> . R_COLUMN ID

    R_CONSTRAINT    shift and go to state 368
    R_COLUMN        shift and go to state 369

    alterDrop                      shift and go to state 367

state 245

    (292) alterTable -> R_RENAME . alterRename
    (303) alterRename -> . R_COLUMN ID R_TO ID

    R_COLUMN        shift and go to state 371

    alterRename                    shift and go to state 370

state 246

    (279) alterStmt -> R_ALTER R_INDEX ifExists idOrString . R_ALTER col_op idList

    R_ALTER         shift and go to state 372


state 247

    (308) ifExists -> R_IF R_EXISTS .

    ID              reduce using rule 308 (ifExists -> R_IF R_EXISTS .)
    STRING          reduce using rule 308 (ifExists -> R_IF R_EXISTS .)
    CHARACTER       reduce using rule 308 (ifExists -> R_IF R_EXISTS .)


state 248

    (304) dropStmt -> R_DROP R_TABLE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 304 (dropStmt -> R_DROP R_TABLE ifExists idOrString .)


state 249

    (305) dropStmt -> R_DROP R_DATABASE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 305 (dropStmt -> R_DROP R_DATABASE ifExists idOrString .)


state 250

    (306) dropStmt -> R_DROP R_PROCEDURE ifExists idOrString . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 373


state 251

    (307) dropStmt -> R_DROP R_INDEX concurrenly ifExists . idOrString
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 374

state 252

    (379) insertStmt -> R_INSERT R_INTO ID paramsColumn . R_VALUES S_PARIZQ paramsList S_PARDER

    R_VALUES        shift and go to state 375


state 253

    (380) paramsColumn -> S_PARIZQ . idList S_PARDER
    (89) idList -> . idList S_COMA ID
    (90) idList -> . ID

    ID              shift and go to state 377

    idList                         shift and go to state 376

state 254

    (429) asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion .

    S_PUNTOCOMA     reduce using rule 429 (asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion .)


state 255

    (382) updateStmt -> R_UPDATE fromBody R_SET updateCols . whereCl
    (383) updateCols -> updateCols . S_COMA updateVals
    (352) whereCl -> . R_WHERE expBool
    (353) whereCl -> .

    S_COMA          shift and go to state 379
    R_WHERE         shift and go to state 164
    S_PUNTOCOMA     reduce using rule 353 (whereCl -> .)

    whereCl                        shift and go to state 378

state 256

    (384) updateCols -> updateVals .

    S_COMA          reduce using rule 384 (updateCols -> updateVals .)
    R_WHERE         reduce using rule 384 (updateCols -> updateVals .)
    S_PUNTOCOMA     reduce using rule 384 (updateCols -> updateVals .)


state 257

    (385) updateVals -> ID . S_IGUAL updateExp

    S_IGUAL         shift and go to state 380


state 258

    (330) optAlias -> R_AS idOrString .

    R_SET           reduce using rule 330 (optAlias -> R_AS idOrString .)
    S_COMA          reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_WHERE         reduce using rule 330 (optAlias -> R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_NATURAL       reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_INNER         reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_LEFT          reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_RIGHT         reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_FULL          reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_GROUP         reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_ORDER         reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_LIMIT         reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_UNION         reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_INTERSECT     reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_EXCEPT        reduce using rule 330 (optAlias -> R_AS idOrString .)
    S_PARDER        reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_FROM          reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_ON            reduce using rule 330 (optAlias -> R_AS idOrString .)
    R_USING         reduce using rule 330 (optAlias -> R_AS idOrString .)


state 259

    (336) fromBody -> S_PARIZQ selectStmt S_PARDER . R_AS idOrString

    R_AS            shift and go to state 381


state 260

    (352) whereCl -> R_WHERE expBool .
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PUNTOCOMA     reduce using rule 352 (whereCl -> R_WHERE expBool .)
    R_GROUP         reduce using rule 352 (whereCl -> R_WHERE expBool .)
    R_ORDER         reduce using rule 352 (whereCl -> R_WHERE expBool .)
    R_LIMIT         reduce using rule 352 (whereCl -> R_WHERE expBool .)
    R_UNION         reduce using rule 352 (whereCl -> R_WHERE expBool .)
    R_INTERSECT     reduce using rule 352 (whereCl -> R_WHERE expBool .)
    R_EXCEPT        reduce using rule 352 (whereCl -> R_WHERE expBool .)
    S_PARDER        reduce using rule 352 (whereCl -> R_WHERE expBool .)
    R_AND           shift and go to state 194
    R_OR            shift and go to state 195
    R_IS            shift and go to state 197

    optBoolPredicate               shift and go to state 196

state 261

    (333) tableExp -> tableExp S_COMA . fromBody
    (335) fromBody -> . ID optAlias
    (336) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 73
    S_PARIZQ        shift and go to state 74

    fromBody                       shift and go to state 382

state 262

    (312) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (352) whereCl -> . R_WHERE expBool
    (353) whereCl -> .

    R_WHERE         shift and go to state 164
    R_GROUP         reduce using rule 353 (whereCl -> .)
    R_ORDER         reduce using rule 353 (whereCl -> .)
    R_LIMIT         reduce using rule 353 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 353 (whereCl -> .)
    R_UNION         reduce using rule 353 (whereCl -> .)
    R_INTERSECT     reduce using rule 353 (whereCl -> .)
    R_EXCEPT        reduce using rule 353 (whereCl -> .)
    S_PARDER        reduce using rule 353 (whereCl -> .)

    whereCl                        shift and go to state 383

state 263

    (313) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (354) groupByCl -> . R_GROUP R_BY groupList havingCl
    (355) groupByCl -> .

    R_GROUP         shift and go to state 385
    R_ORDER         reduce using rule 355 (groupByCl -> .)
    R_LIMIT         reduce using rule 355 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 355 (groupByCl -> .)
    R_UNION         reduce using rule 355 (groupByCl -> .)
    R_INTERSECT     reduce using rule 355 (groupByCl -> .)
    R_EXCEPT        reduce using rule 355 (groupByCl -> .)
    S_PARDER        reduce using rule 355 (groupByCl -> .)

    groupByCl                      shift and go to state 384

state 264

    (314) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl limitCl
    (352) whereCl -> . R_WHERE expBool
    (353) whereCl -> .

    R_WHERE         shift and go to state 164
    R_GROUP         reduce using rule 353 (whereCl -> .)
    R_ORDER         reduce using rule 353 (whereCl -> .)
    R_LIMIT         reduce using rule 353 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 353 (whereCl -> .)
    R_UNION         reduce using rule 353 (whereCl -> .)
    R_INTERSECT     reduce using rule 353 (whereCl -> .)
    R_EXCEPT        reduce using rule 353 (whereCl -> .)
    S_PARDER        reduce using rule 353 (whereCl -> .)

    whereCl                        shift and go to state 386

state 265

    (337) joinList -> joinList2 .
    (338) joinList2 -> joinList2 . joinCl
    (340) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (341) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (342) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (345) joinOpt -> . R_INNER
    (346) joinOpt -> . R_LEFT
    (347) joinOpt -> . R_LEFT R_OUTER
    (348) joinOpt -> . R_RIGHT
    (349) joinOpt -> . R_RIGHT R_OUTER
    (350) joinOpt -> . R_FULL
    (351) joinOpt -> . R_FULL R_OUTER

    R_WHERE         reduce using rule 337 (joinList -> joinList2 .)
    R_GROUP         reduce using rule 337 (joinList -> joinList2 .)
    R_ORDER         reduce using rule 337 (joinList -> joinList2 .)
    R_LIMIT         reduce using rule 337 (joinList -> joinList2 .)
    S_PUNTOCOMA     reduce using rule 337 (joinList -> joinList2 .)
    R_UNION         reduce using rule 337 (joinList -> joinList2 .)
    R_INTERSECT     reduce using rule 337 (joinList -> joinList2 .)
    R_EXCEPT        reduce using rule 337 (joinList -> joinList2 .)
    S_PARDER        reduce using rule 337 (joinList -> joinList2 .)
    R_NATURAL       shift and go to state 268
    R_INNER         shift and go to state 269
    R_LEFT          shift and go to state 270
    R_RIGHT         shift and go to state 271
    R_FULL          shift and go to state 272

    joinCl                         shift and go to state 387
    joinOpt                        shift and go to state 267

state 266

    (339) joinList2 -> joinCl .

    R_NATURAL       reduce using rule 339 (joinList2 -> joinCl .)
    R_INNER         reduce using rule 339 (joinList2 -> joinCl .)
    R_LEFT          reduce using rule 339 (joinList2 -> joinCl .)
    R_RIGHT         reduce using rule 339 (joinList2 -> joinCl .)
    R_FULL          reduce using rule 339 (joinList2 -> joinCl .)
    R_WHERE         reduce using rule 339 (joinList2 -> joinCl .)
    R_GROUP         reduce using rule 339 (joinList2 -> joinCl .)
    R_ORDER         reduce using rule 339 (joinList2 -> joinCl .)
    R_LIMIT         reduce using rule 339 (joinList2 -> joinCl .)
    S_PUNTOCOMA     reduce using rule 339 (joinList2 -> joinCl .)
    R_UNION         reduce using rule 339 (joinList2 -> joinCl .)
    R_INTERSECT     reduce using rule 339 (joinList2 -> joinCl .)
    R_EXCEPT        reduce using rule 339 (joinList2 -> joinCl .)
    S_PARDER        reduce using rule 339 (joinList2 -> joinCl .)


state 267

    (340) joinCl -> joinOpt . R_JOIN columnName optAlias R_ON expBool
    (341) joinCl -> joinOpt . R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER

    R_JOIN          shift and go to state 388


state 268

    (342) joinCl -> R_NATURAL . joinOpt R_JOIN columnName optAlias
    (345) joinOpt -> . R_INNER
    (346) joinOpt -> . R_LEFT
    (347) joinOpt -> . R_LEFT R_OUTER
    (348) joinOpt -> . R_RIGHT
    (349) joinOpt -> . R_RIGHT R_OUTER
    (350) joinOpt -> . R_FULL
    (351) joinOpt -> . R_FULL R_OUTER

    R_INNER         shift and go to state 269
    R_LEFT          shift and go to state 270
    R_RIGHT         shift and go to state 271
    R_FULL          shift and go to state 272

    joinOpt                        shift and go to state 389

state 269

    (345) joinOpt -> R_INNER .

    R_JOIN          reduce using rule 345 (joinOpt -> R_INNER .)


state 270

    (346) joinOpt -> R_LEFT .
    (347) joinOpt -> R_LEFT . R_OUTER

    R_JOIN          reduce using rule 346 (joinOpt -> R_LEFT .)
    R_OUTER         shift and go to state 390


state 271

    (348) joinOpt -> R_RIGHT .
    (349) joinOpt -> R_RIGHT . R_OUTER

    R_JOIN          reduce using rule 348 (joinOpt -> R_RIGHT .)
    R_OUTER         shift and go to state 391


state 272

    (350) joinOpt -> R_FULL .
    (351) joinOpt -> R_FULL . R_OUTER

    R_JOIN          reduce using rule 350 (joinOpt -> R_FULL .)
    R_OUTER         shift and go to state 392


state 273

    (326) selectList -> selectList S_COMA selectListParams . optAlias
    (330) optAlias -> . R_AS idOrString
    (331) optAlias -> . idOrString
    (332) optAlias -> .
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    R_AS            shift and go to state 160
    S_COMA          reduce using rule 332 (optAlias -> .)
    R_FROM          reduce using rule 332 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 332 (optAlias -> .)
    R_UNION         reduce using rule 332 (optAlias -> .)
    R_INTERSECT     reduce using rule 332 (optAlias -> .)
    R_EXCEPT        reduce using rule 332 (optAlias -> .)
    S_PARDER        reduce using rule 332 (optAlias -> .)
    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    optAlias                       shift and go to state 393
    idOrString                     shift and go to state 161

state 274

    (261) columnName -> ID S_PUNTO ID .

    O_SUMA          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    O_RESTA         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    O_PRODUCTO      reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    O_DIVISION      reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    O_EXPONENTE     reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    O_MODULAR       reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    OC_CONCATENAR   reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_IN            reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_NOT           reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    OL_MENORQUE     reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    OL_MAYORQUE     reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    OL_MAYORIGUALQUE reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    OL_MENORIGUALQUE reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    S_IGUAL         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    OL_DISTINTODE   reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_IS            reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_BETWEEN       reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_ISNULL        reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_NOTNULL       reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    OL_ESIGUAL      reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_AS            reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    ID              reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    STRING          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    CHARACTER       reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    S_COMA          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_FROM          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    S_PUNTOCOMA     reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_UNION         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_INTERSECT     reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_EXCEPT        reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    S_PARDER        reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_LIKE          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_AND           reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_OR            reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_GROUP         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_ORDER         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_LIMIT         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_THEN          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_NATURAL       reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_INNER         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_LEFT          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_RIGHT         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_FULL          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_WHERE         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_ALL           reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_ANY           reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_SOME          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_ON            reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_USING         reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_HAVING        reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_ASC           reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_DESC          reduce using rule 261 (columnName -> ID S_PUNTO ID .)
    R_NULL          reduce using rule 261 (columnName -> ID S_PUNTO ID .)


state 275

    (329) selectListParams -> ID S_PUNTO O_PRODUCTO .

    R_AS            reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    ID              reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    STRING          reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    CHARACTER       reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_COMA          reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_FROM          reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_UNION         reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_INTERSECT     reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_EXCEPT        reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PARDER        reduce using rule 329 (selectListParams -> ID S_PUNTO O_PRODUCTO .)


state 276

    (136) funcCall -> ID S_PARIZQ paramsList . S_PARDER
    (171) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 394
    S_COMA          shift and go to state 395


state 277

    (137) funcCall -> ID S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    ID              reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    STRING          reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 137 (funcCall -> ID S_PARIZQ S_PARDER .)


state 278

    (172) paramsList -> datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 172 (paramsList -> datatype .)
    S_COMA          reduce using rule 172 (paramsList -> datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 279

    (173) datatype -> datatype O_SUMA datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    O_RESTA         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_IN            reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_NOT           reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    S_IGUAL         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_IS            reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_BETWEEN       reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_ISNULL        reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_NOTNULL       reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_AS            reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    ID              reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    STRING          reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    CHARACTER       reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    S_COMA          reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_FROM          reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_UNION         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_INTERSECT     reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_EXCEPT        reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    S_PARDER        reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_AND           reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_OR            reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_GROUP         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_ORDER         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_LIMIT         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_THEN          reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_NATURAL       reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_INNER         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_LEFT          reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_RIGHT         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_FULL          reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_WHERE         reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_ALL           reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_ANY           reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    R_SOME          reduce using rule 173 (datatype -> datatype O_SUMA datatype .)
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179

  ! O_PRODUCTO      [ reduce using rule 173 (datatype -> datatype O_SUMA datatype .) ]
  ! O_DIVISION      [ reduce using rule 173 (datatype -> datatype O_SUMA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 173 (datatype -> datatype O_SUMA datatype .) ]
  ! O_MODULAR       [ reduce using rule 173 (datatype -> datatype O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 174 ]
  ! O_RESTA         [ shift and go to state 175 ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 280

    (174) datatype -> datatype O_RESTA datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    O_RESTA         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_IN            reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_NOT           reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    S_IGUAL         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_IS            reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_BETWEEN       reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_ISNULL        reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_NOTNULL       reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_AS            reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    ID              reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    STRING          reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    CHARACTER       reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    S_COMA          reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_FROM          reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_UNION         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_INTERSECT     reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_EXCEPT        reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    S_PARDER        reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_AND           reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_OR            reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_GROUP         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_ORDER         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_LIMIT         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_THEN          reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_NATURAL       reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_INNER         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_LEFT          reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_RIGHT         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_FULL          reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_WHERE         reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_ALL           reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_ANY           reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    R_SOME          reduce using rule 174 (datatype -> datatype O_RESTA datatype .)
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179

  ! O_PRODUCTO      [ reduce using rule 174 (datatype -> datatype O_RESTA datatype .) ]
  ! O_DIVISION      [ reduce using rule 174 (datatype -> datatype O_RESTA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 174 (datatype -> datatype O_RESTA datatype .) ]
  ! O_MODULAR       [ reduce using rule 174 (datatype -> datatype O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 174 ]
  ! O_RESTA         [ shift and go to state 175 ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 281

    (175) datatype -> datatype O_PRODUCTO datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    O_RESTA         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    O_PRODUCTO      reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    O_DIVISION      reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    O_MODULAR       reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    OC_CONCATENAR   reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_IN            reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOT           reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORQUE     reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORQUE     reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORIGUALQUE reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORIGUALQUE reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    S_IGUAL         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    OL_DISTINTODE   reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_IS            reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_BETWEEN       reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_ISNULL        reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOTNULL       reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    OL_ESIGUAL      reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_AS            reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    ID              reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    STRING          reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    CHARACTER       reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    S_COMA          reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_FROM          reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    S_PUNTOCOMA     reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_UNION         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_INTERSECT     reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_EXCEPT        reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    S_PARDER        reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_AND           reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_OR            reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_GROUP         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_ORDER         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_LIMIT         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_THEN          reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_NATURAL       reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_INNER         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_LEFT          reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_RIGHT         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_FULL          reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_WHERE         reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_ALL           reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_ANY           reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    R_SOME          reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .)
    O_EXPONENTE     shift and go to state 178

  ! O_EXPONENTE     [ reduce using rule 175 (datatype -> datatype O_PRODUCTO datatype .) ]
  ! O_SUMA          [ shift and go to state 174 ]
  ! O_RESTA         [ shift and go to state 175 ]
  ! O_PRODUCTO      [ shift and go to state 176 ]
  ! O_DIVISION      [ shift and go to state 177 ]
  ! O_MODULAR       [ shift and go to state 179 ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 282

    (176) datatype -> datatype O_DIVISION datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    O_RESTA         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    O_PRODUCTO      reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    O_DIVISION      reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    O_MODULAR       reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    OC_CONCATENAR   reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_IN            reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_NOT           reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORQUE     reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORQUE     reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORIGUALQUE reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORIGUALQUE reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    S_IGUAL         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    OL_DISTINTODE   reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_IS            reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_BETWEEN       reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_ISNULL        reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_NOTNULL       reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    OL_ESIGUAL      reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_AS            reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    ID              reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    STRING          reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    CHARACTER       reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    S_COMA          reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_FROM          reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    S_PUNTOCOMA     reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_UNION         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_INTERSECT     reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_EXCEPT        reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    S_PARDER        reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_AND           reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_OR            reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_GROUP         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_ORDER         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_LIMIT         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_THEN          reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_NATURAL       reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_INNER         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_LEFT          reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_RIGHT         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_FULL          reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_WHERE         reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_ALL           reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_ANY           reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    R_SOME          reduce using rule 176 (datatype -> datatype O_DIVISION datatype .)
    O_EXPONENTE     shift and go to state 178

  ! O_EXPONENTE     [ reduce using rule 176 (datatype -> datatype O_DIVISION datatype .) ]
  ! O_SUMA          [ shift and go to state 174 ]
  ! O_RESTA         [ shift and go to state 175 ]
  ! O_PRODUCTO      [ shift and go to state 176 ]
  ! O_DIVISION      [ shift and go to state 177 ]
  ! O_MODULAR       [ shift and go to state 179 ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 283

    (177) datatype -> datatype O_EXPONENTE datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    O_RESTA         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    O_PRODUCTO      reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    O_DIVISION      reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    O_EXPONENTE     reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    O_MODULAR       reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    OC_CONCATENAR   reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_IN            reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOT           reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORQUE     reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORQUE     reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORIGUALQUE reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORIGUALQUE reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    S_IGUAL         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    OL_DISTINTODE   reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_IS            reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_BETWEEN       reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_ISNULL        reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOTNULL       reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    OL_ESIGUAL      reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_AS            reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    ID              reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    STRING          reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    CHARACTER       reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    S_COMA          reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_FROM          reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    S_PUNTOCOMA     reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_UNION         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_INTERSECT     reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_EXCEPT        reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    S_PARDER        reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_AND           reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_OR            reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_GROUP         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_ORDER         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_LIMIT         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_THEN          reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_NATURAL       reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_INNER         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_LEFT          reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_RIGHT         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_FULL          reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_WHERE         reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_ALL           reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_ANY           reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)
    R_SOME          reduce using rule 177 (datatype -> datatype O_EXPONENTE datatype .)

  ! O_SUMA          [ shift and go to state 174 ]
  ! O_RESTA         [ shift and go to state 175 ]
  ! O_PRODUCTO      [ shift and go to state 176 ]
  ! O_DIVISION      [ shift and go to state 177 ]
  ! O_EXPONENTE     [ shift and go to state 178 ]
  ! O_MODULAR       [ shift and go to state 179 ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 284

    (178) datatype -> datatype O_MODULAR datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    O_RESTA         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    O_PRODUCTO      reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    O_DIVISION      reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    O_MODULAR       reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    OC_CONCATENAR   reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_IN            reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_NOT           reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORQUE     reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORQUE     reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORIGUALQUE reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    S_IGUAL         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    OL_DISTINTODE   reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_IS            reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_BETWEEN       reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_ISNULL        reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_NOTNULL       reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    OL_ESIGUAL      reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_AS            reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    ID              reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    STRING          reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    CHARACTER       reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    S_COMA          reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_FROM          reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    S_PUNTOCOMA     reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_UNION         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_INTERSECT     reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_EXCEPT        reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    S_PARDER        reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_AND           reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_OR            reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_GROUP         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_ORDER         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_LIMIT         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_THEN          reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_NATURAL       reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_INNER         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_LEFT          reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_RIGHT         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_FULL          reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_WHERE         reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_ALL           reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_ANY           reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    R_SOME          reduce using rule 178 (datatype -> datatype O_MODULAR datatype .)
    O_EXPONENTE     shift and go to state 178

  ! O_EXPONENTE     [ reduce using rule 178 (datatype -> datatype O_MODULAR datatype .) ]
  ! O_SUMA          [ shift and go to state 174 ]
  ! O_RESTA         [ shift and go to state 175 ]
  ! O_PRODUCTO      [ shift and go to state 176 ]
  ! O_DIVISION      [ shift and go to state 177 ]
  ! O_MODULAR       [ shift and go to state 179 ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 285

    (179) datatype -> datatype OC_CONCATENAR datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    OC_CONCATENAR   reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IN            reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOT           reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORQUE     reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORQUE     reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORIGUALQUE reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    S_IGUAL         reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_DISTINTODE   reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IS            reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_BETWEEN       reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ISNULL        reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOTNULL       reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_ESIGUAL      reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AS            reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    ID              reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    STRING          reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    CHARACTER       reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    S_COMA          reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FROM          reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PUNTOCOMA     reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_UNION         reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INTERSECT     reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_EXCEPT        reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PARDER        reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AND           reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_OR            reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_GROUP         reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ORDER         reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LIMIT         reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_THEN          reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NATURAL       reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INNER         reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LEFT          reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_RIGHT         reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FULL          reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_WHERE         reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ALL           reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ANY           reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    R_SOME          reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179

  ! O_SUMA          [ reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_RESTA         [ reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_PRODUCTO      [ reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_DIVISION      [ reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_MODULAR       [ reduce using rule 179 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! OC_CONCATENAR   [ shift and go to state 180 ]


state 286

    (244) boolean -> datatype R_IN S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 396

state 287

    (245) boolean -> datatype R_NOT R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 397


state 288

    (204) expComp -> datatype R_NOT R_BETWEEN . datatype R_AND datatype
    (223) expSubq -> datatype R_NOT R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 398
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 289

    (195) expComp -> datatype OL_MENORQUE datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_OR            reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_IS            reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_AS            reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    ID              reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    STRING          reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    CHARACTER       reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    S_COMA          reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_FROM          reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_UNION         reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_INTERSECT     reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_EXCEPT        reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    S_PARDER        reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_GROUP         reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_ORDER         reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_LIMIT         reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_THEN          reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_NATURAL       reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_INNER         reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_LEFT          reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_RIGHT         reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_FULL          reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    R_WHERE         reduce using rule 195 (expComp -> datatype OL_MENORQUE datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 290

    (216) expSubq -> datatype OL_MENORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 399


state 291

    (240) subqValues -> R_ALL .

    S_PARIZQ        reduce using rule 240 (subqValues -> R_ALL .)


state 292

    (241) subqValues -> R_ANY .

    S_PARIZQ        reduce using rule 241 (subqValues -> R_ANY .)


state 293

    (242) subqValues -> R_SOME .

    S_PARIZQ        reduce using rule 242 (subqValues -> R_SOME .)


state 294

    (196) expComp -> datatype OL_MAYORQUE datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_OR            reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_IS            reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_AS            reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    ID              reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    STRING          reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    CHARACTER       reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    S_COMA          reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FROM          reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_UNION         reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INTERSECT     reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_EXCEPT        reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PARDER        reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_GROUP         reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_ORDER         reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LIMIT         reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_THEN          reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_NATURAL       reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INNER         reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LEFT          reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_RIGHT         reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FULL          reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    R_WHERE         reduce using rule 196 (expComp -> datatype OL_MAYORQUE datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 295

    (217) expSubq -> datatype OL_MAYORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 400


state 296

    (197) expComp -> datatype OL_MAYORIGUALQUE datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_OR            reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_IS            reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_AS            reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    ID              reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    STRING          reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    CHARACTER       reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_COMA          reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FROM          reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_UNION         reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PARDER        reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_GROUP         reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_ORDER         reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_THEN          reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INNER         reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LEFT          reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FULL          reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_WHERE         reduce using rule 197 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 297

    (218) expSubq -> datatype OL_MAYORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 401


state 298

    (198) expComp -> datatype OL_MENORIGUALQUE datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_OR            reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_IS            reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_AS            reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    ID              reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    STRING          reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    CHARACTER       reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_COMA          reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FROM          reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_UNION         reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PARDER        reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_GROUP         reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_ORDER         reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_THEN          reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INNER         reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LEFT          reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FULL          reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_WHERE         reduce using rule 198 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 299

    (219) expSubq -> datatype OL_MENORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 402


state 300

    (199) expComp -> datatype S_IGUAL datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_OR            reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_IS            reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_AS            reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    ID              reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    STRING          reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    CHARACTER       reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    S_COMA          reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_FROM          reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    S_PUNTOCOMA     reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_UNION         reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_INTERSECT     reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_EXCEPT        reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    S_PARDER        reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_GROUP         reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_ORDER         reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_LIMIT         reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_THEN          reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_NATURAL       reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_INNER         reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_LEFT          reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_RIGHT         reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_FULL          reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    R_WHERE         reduce using rule 199 (expComp -> datatype S_IGUAL datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 301

    (200) expComp -> datatype OL_DISTINTODE datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_OR            reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_IS            reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_AS            reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    ID              reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    STRING          reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    CHARACTER       reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    S_COMA          reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FROM          reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PUNTOCOMA     reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_UNION         reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INTERSECT     reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_EXCEPT        reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PARDER        reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_GROUP         reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_ORDER         reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LIMIT         reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_THEN          reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_NATURAL       reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INNER         reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LEFT          reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_RIGHT         reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FULL          reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    R_WHERE         reduce using rule 200 (expComp -> datatype OL_DISTINTODE datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 302

    (221) expSubq -> datatype OL_DISTINTODE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 403


state 303

    (201) expComp -> datatype R_IS R_DISTINCT . R_FROM datatype
    (225) expSubq -> datatype R_IS R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 404


state 304

    (202) expComp -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype
    (212) expComp -> datatype R_IS R_NOT . R_NULL
    (213) expComp -> datatype R_IS R_NOT . R_TRUE
    (214) expComp -> datatype R_IS R_NOT . R_FALSE
    (215) expComp -> datatype R_IS R_NOT . R_UNKNOWN
    (226) expSubq -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype R_IS R_NOT . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype R_IS R_NOT . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> datatype R_IS R_NOT . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> datatype R_IS R_NOT . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 405
    R_NULL          shift and go to state 406
    R_TRUE          shift and go to state 407
    R_FALSE         shift and go to state 408
    R_UNKNOWN       shift and go to state 409


state 305

    (208) expComp -> datatype R_IS R_NULL .
    (227) expSubq -> datatype R_IS R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_OR            reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_IS            reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_AS            reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    ID              reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    STRING          reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    CHARACTER       reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    S_COMA          reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_FROM          reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    S_PUNTOCOMA     reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_UNION         reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_INTERSECT     reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_EXCEPT        reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    S_PARDER        reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_GROUP         reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_ORDER         reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_LIMIT         reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_THEN          reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_NATURAL       reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_INNER         reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_LEFT          reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_RIGHT         reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_FULL          reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_WHERE         reduce using rule 208 (expComp -> datatype R_IS R_NULL .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 410

state 306

    (209) expComp -> datatype R_IS R_TRUE .
    (231) expSubq -> datatype R_IS R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_OR            reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_IS            reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_AS            reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    ID              reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    STRING          reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    CHARACTER       reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    S_COMA          reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_FROM          reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_UNION         reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    S_PARDER        reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_GROUP         reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_ORDER         reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_LIMIT         reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_THEN          reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_NATURAL       reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_INNER         reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_LEFT          reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_RIGHT         reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_FULL          reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_WHERE         reduce using rule 209 (expComp -> datatype R_IS R_TRUE .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 411

state 307

    (210) expComp -> datatype R_IS R_FALSE .
    (233) expSubq -> datatype R_IS R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_OR            reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_IS            reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_AS            reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    ID              reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    STRING          reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    CHARACTER       reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    S_COMA          reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_FROM          reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_UNION         reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    S_PARDER        reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_GROUP         reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_ORDER         reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_LIMIT         reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_THEN          reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_NATURAL       reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_INNER         reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_LEFT          reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_RIGHT         reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_FULL          reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_WHERE         reduce using rule 210 (expComp -> datatype R_IS R_FALSE .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 412

state 308

    (211) expComp -> datatype R_IS R_UNKNOWN .
    (235) expSubq -> datatype R_IS R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_OR            reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_IS            reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_AS            reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    ID              reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    STRING          reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 211 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 413

state 309

    (203) expComp -> datatype R_BETWEEN datatype . R_AND datatype
    (222) expSubq -> datatype R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 414
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 310

    (205) expComp -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype
    (224) expSubq -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 415
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 311

    (229) expSubq -> datatype R_ISNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 416


state 312

    (230) expSubq -> datatype R_NOTNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 417


state 313

    (220) expSubq -> datatype OL_ESIGUAL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 418


state 314

    (248) expBool -> expBool R_AND expBool .
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_OR            reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_AS            reduce using rule 248 (expBool -> expBool R_AND expBool .)
    ID              reduce using rule 248 (expBool -> expBool R_AND expBool .)
    STRING          reduce using rule 248 (expBool -> expBool R_AND expBool .)
    CHARACTER       reduce using rule 248 (expBool -> expBool R_AND expBool .)
    S_COMA          reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_FROM          reduce using rule 248 (expBool -> expBool R_AND expBool .)
    S_PUNTOCOMA     reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_UNION         reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_INTERSECT     reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_EXCEPT        reduce using rule 248 (expBool -> expBool R_AND expBool .)
    S_PARDER        reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_GROUP         reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_ORDER         reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_LIMIT         reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_THEN          reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_NATURAL       reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_INNER         reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_LEFT          reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_RIGHT         reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_FULL          reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_WHERE         reduce using rule 248 (expBool -> expBool R_AND expBool .)
    R_IS            shift and go to state 197

  ! R_IS            [ reduce using rule 248 (expBool -> expBool R_AND expBool .) ]
  ! R_AND           [ shift and go to state 194 ]
  ! R_OR            [ shift and go to state 195 ]

    optBoolPredicate               shift and go to state 196

state 315

    (249) expBool -> expBool R_OR expBool .
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_OR            reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_AS            reduce using rule 249 (expBool -> expBool R_OR expBool .)
    ID              reduce using rule 249 (expBool -> expBool R_OR expBool .)
    STRING          reduce using rule 249 (expBool -> expBool R_OR expBool .)
    CHARACTER       reduce using rule 249 (expBool -> expBool R_OR expBool .)
    S_COMA          reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_FROM          reduce using rule 249 (expBool -> expBool R_OR expBool .)
    S_PUNTOCOMA     reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_UNION         reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_INTERSECT     reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_EXCEPT        reduce using rule 249 (expBool -> expBool R_OR expBool .)
    S_PARDER        reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_GROUP         reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_ORDER         reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_LIMIT         reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_THEN          reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_NATURAL       reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_INNER         reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_LEFT          reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_RIGHT         reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_FULL          reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_WHERE         reduce using rule 249 (expBool -> expBool R_OR expBool .)
    R_IS            shift and go to state 197

  ! R_IS            [ reduce using rule 249 (expBool -> expBool R_OR expBool .) ]
  ! R_AND           [ shift and go to state 194 ]
  ! R_OR            [ shift and go to state 195 ]

    optBoolPredicate               shift and go to state 196

state 316

    (254) optBoolPredicate -> R_IS R_TRUE .

    R_AND           reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_OR            reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_IS            reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_AS            reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    ID              reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    STRING          reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    CHARACTER       reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    S_COMA          reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_FROM          reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_UNION         reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    S_PARDER        reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_GROUP         reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_ORDER         reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_LIMIT         reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_THEN          reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_NATURAL       reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_INNER         reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_LEFT          reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_RIGHT         reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_FULL          reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)
    R_WHERE         reduce using rule 254 (optBoolPredicate -> R_IS R_TRUE .)


state 317

    (255) optBoolPredicate -> R_IS R_FALSE .

    R_AND           reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_OR            reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_IS            reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_AS            reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    ID              reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    STRING          reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    CHARACTER       reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    S_COMA          reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_FROM          reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_UNION         reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    S_PARDER        reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_GROUP         reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_ORDER         reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_LIMIT         reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_THEN          reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_NATURAL       reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_INNER         reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_LEFT          reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_RIGHT         reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_FULL          reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)
    R_WHERE         reduce using rule 255 (optBoolPredicate -> R_IS R_FALSE .)


state 318

    (256) optBoolPredicate -> R_IS R_UNKNOWN .

    R_AND           reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_OR            reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_IS            reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_AS            reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    ID              reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    STRING          reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 256 (optBoolPredicate -> R_IS R_UNKNOWN .)


state 319

    (257) optBoolPredicate -> R_IS R_NOT . R_TRUE
    (258) optBoolPredicate -> R_IS R_NOT . R_FALSE
    (259) optBoolPredicate -> R_IS R_NOT . R_UNKNOWN

    R_TRUE          shift and go to state 419
    R_FALSE         shift and go to state 420
    R_UNKNOWN       shift and go to state 421


state 320

    (135) expresion -> S_PARIZQ selectStmt S_PARDER .

    R_AS            reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)


state 321

    (194) datatype -> S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 194 (datatype -> S_PARIZQ datatype S_PARDER .)


state 322

    (251) expBool -> S_PARIZQ expBool S_PARDER .

    R_AND           reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_OR            reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_IS            reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_AS            reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    ID              reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    STRING          reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    CHARACTER       reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_COMA          reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FROM          reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PUNTOCOMA     reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_UNION         reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INTERSECT     reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_EXCEPT        reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PARDER        reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_GROUP         reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_ORDER         reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LIMIT         reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_THEN          reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_NATURAL       reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INNER         reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LEFT          reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_RIGHT         reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FULL          reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_WHERE         reduce using rule 251 (expBool -> S_PARIZQ expBool S_PARDER .)


state 323

    (194) datatype -> S_PARIZQ datatype . S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 321
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 324

    (180) datatype -> R_CASE caseList optElse . R_END

    R_END           shift and go to state 422


state 325

    (181) caseList -> caseList caseWhen .

    R_ELSE          reduce using rule 181 (caseList -> caseList caseWhen .)
    R_WHEN          reduce using rule 181 (caseList -> caseList caseWhen .)
    R_END           reduce using rule 181 (caseList -> caseList caseWhen .)


state 326

    (184) optElse -> R_ELSE . literal
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL

    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107

    literal                        shift and go to state 423

state 327

    (183) caseWhen -> R_WHEN expBool . R_THEN literal
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_THEN          shift and go to state 424
    R_AND           shift and go to state 194
    R_OR            shift and go to state 195
    R_IS            shift and go to state 197

    optBoolPredicate               shift and go to state 196

state 328

    (138) funcCall -> R_NOW S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    ID              reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    STRING          reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 138 (funcCall -> R_NOW S_PARIZQ S_PARDER .)


state 329

    (139) funcCall -> R_COUNT S_PARIZQ datatype . S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 425
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 330

    (140) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO . S_PARDER

    S_PARDER        shift and go to state 426


state 331

    (141) funcCall -> R_SUM S_PARIZQ datatype . S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 427
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 332

    (142) funcCall -> R_PROM S_PARIZQ datatype . S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 428
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 333

    (143) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM timeStamp S_PARDER
    (144) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM columnName S_PARDER

    R_FROM          shift and go to state 429


state 334

    (147) optsExtract -> R_YEAR .

    R_FROM          reduce using rule 147 (optsExtract -> R_YEAR .)


state 335

    (148) optsExtract -> R_MONTH .

    R_FROM          reduce using rule 148 (optsExtract -> R_MONTH .)


state 336

    (149) optsExtract -> R_DAY .

    R_FROM          reduce using rule 149 (optsExtract -> R_DAY .)


state 337

    (150) optsExtract -> R_HOUR .

    R_FROM          reduce using rule 150 (optsExtract -> R_HOUR .)


state 338

    (151) optsExtract -> R_MINUTE .

    R_FROM          reduce using rule 151 (optsExtract -> R_MINUTE .)


state 339

    (152) optsExtract -> R_SECOND .

    R_FROM          reduce using rule 152 (optsExtract -> R_SECOND .)


state 340

    (153) datePart -> R_DATE_PART S_PARIZQ STRING . S_COMA dateSource S_PARDER

    S_COMA          shift and go to state 430


state 341

    (243) boolean -> R_EXISTS S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 431
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 342

    (237) expSubq -> stringExp R_LIKE STRING .

    R_AND           reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_OR            reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_IS            reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_AS            reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    ID              reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    STRING          reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    CHARACTER       reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    S_COMA          reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_FROM          reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    S_PUNTOCOMA     reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_UNION         reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_INTERSECT     reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_EXCEPT        reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    S_PARDER        reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_GROUP         reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_ORDER         reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_LIMIT         reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_THEN          reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_NATURAL       reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_INNER         reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_LEFT          reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_RIGHT         reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_FULL          reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)
    R_WHERE         reduce using rule 237 (expSubq -> stringExp R_LIKE STRING .)


state 343

    (19) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN . List_body else_
    (26) List_body -> . List_body body
    (27) List_body -> . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt S_PUNTOCOMA
    (39) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) body -> . expresion S_PUNTOCOMA
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_CREATE        shift and go to state 448
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 432
    R_IF            shift and go to state 18
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 433
    List_body                      shift and go to state 434
    body                           shift and go to state 435
    createStmt                     shift and go to state 436
    showStmt                       shift and go to state 437
    alterStmt                      shift and go to state 438
    dropStmt                       shift and go to state 439
    insertStmt                     shift and go to state 440
    updateStmt                     shift and go to state 441
    deleteStmt                     shift and go to state 442
    truncateStmt                   shift and go to state 443
    useStmt                        shift and go to state 444
    selectStmt                     shift and go to state 445
    functionStmt                   shift and go to state 446
    ifStmt                         shift and go to state 447
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 344

    (401) param_item -> ID . types
    (91) types -> . ID
    (92) types -> . T_SMALLINT
    (93) types -> . T_INTEGER
    (94) types -> . T_BIGINT
    (95) types -> . T_REAL
    (96) types -> . T_DOUBLE T_PRECISION
    (97) types -> . T_MONEY
    (98) types -> . T_TEXT
    (99) types -> . T_BOOLEAN
    (100) types -> . R_TIMESTAMP
    (101) types -> . T_DATE
    (102) types -> . T_TIME
    (103) types -> . T_DECIMAL optParams
    (104) types -> . T_NUMERIC optParams
    (105) types -> . T_VARCHAR optParams
    (106) types -> . T_CHARACTER optParams
    (107) types -> . T_CHAR optParams
    (108) types -> . T_CHARACTER T_VARYING optParams
    (109) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 449
    T_SMALLINT      shift and go to state 451
    T_INTEGER       shift and go to state 452
    T_BIGINT        shift and go to state 453
    T_REAL          shift and go to state 454
    T_DOUBLE        shift and go to state 455
    T_MONEY         shift and go to state 456
    T_TEXT          shift and go to state 457
    T_BOOLEAN       shift and go to state 458
    R_TIMESTAMP     shift and go to state 459
    T_DATE          shift and go to state 460
    T_TIME          shift and go to state 461
    T_DECIMAL       shift and go to state 462
    T_NUMERIC       shift and go to state 463
    T_VARCHAR       shift and go to state 464
    T_CHARACTER     shift and go to state 465
    T_CHAR          shift and go to state 466
    R_INTERVAL      shift and go to state 467

    types                          shift and go to state 450

state 345

    (396) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list . S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (399) params_list -> params_list . S_COMA param_item

    S_PARDER        shift and go to state 468
    S_COMA          shift and go to state 469


state 346

    (397) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER . returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (402) returnsStmt -> . R_RETURNS types
    (403) returnsStmt -> .

    R_RETURNS       shift and go to state 471
    R_AS            reduce using rule 403 (returnsStmt -> .)

    returnsStmt                    shift and go to state 470

state 347

    (400) params_list -> param_item .

    S_PARDER        reduce using rule 400 (params_list -> param_item .)
    S_COMA          reduce using rule 400 (params_list -> param_item .)


state 348

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ . params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ . S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (399) params_list -> . params_list S_COMA param_item
    (400) params_list -> . param_item
    (401) param_item -> . ID types

    S_PARDER        shift and go to state 473
    ID              shift and go to state 344

    params_list                    shift and go to state 472
    param_item                     shift and go to state 347

state 349

    (58) createOpts -> orReplace R_DATABASE ifNotExists idOrString . createOwner createMode
    (66) createOwner -> . R_OWNER ID
    (67) createOwner -> . R_OWNER STRING
    (68) createOwner -> . R_OWNER S_IGUAL ID
    (69) createOwner -> . R_OWNER S_IGUAL STRING
    (70) createOwner -> .

    R_OWNER         shift and go to state 475
    R_MODE          reduce using rule 70 (createOwner -> .)
    S_PUNTOCOMA     reduce using rule 70 (createOwner -> .)

    createOwner                    shift and go to state 474

state 350

    (46) createOpts -> unique_index R_INDEX ID R_ON . ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    ID              shift and go to state 476


state 351

    (57) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ . createTableList S_PARDER inheritsOpt
    (74) createTableList -> . createTableList S_COMA createTable
    (75) createTableList -> . createTable
    (76) createTable -> . ID types createColumns
    (77) createTable -> . createConstraint
    (78) createTable -> . createUnique
    (79) createTable -> . createPrimary
    (80) createTable -> . createForeign
    (83) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (84) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (85) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (86) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (87) constrName -> . R_CONSTRAINT ID
    (88) constrName -> .

    ID              shift and go to state 479
    R_UNIQUE        shift and go to state 485
    R_PRIMARY       shift and go to state 365
    R_CONSTRAINT    shift and go to state 366
    R_CHECK         reduce using rule 88 (constrName -> .)
    R_FOREIGN       reduce using rule 88 (constrName -> .)

    createTableList                shift and go to state 477
    createTable                    shift and go to state 478
    createConstraint               shift and go to state 480
    createUnique                   shift and go to state 481
    createPrimary                  shift and go to state 482
    createForeign                  shift and go to state 483
    constrName                     shift and go to state 484

state 352

    (62) ifNotExists -> R_IF R_NOT R_EXISTS .

    ID              reduce using rule 62 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    STRING          reduce using rule 62 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    CHARACTER       reduce using rule 62 (ifNotExists -> R_IF R_NOT R_EXISTS .)


state 353

    (61) createOpts -> R_TYPE ifNotExists ID R_AS . R_ENUM S_PARIZQ paramsList S_PARDER

    R_ENUM          shift and go to state 486


state 354

    (282) alterDb -> R_RENAME R_TO . idOrString
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 487

state 355

    (283) alterDb -> R_OWNER R_TO . ownerOPts
    (284) ownerOPts -> . idOrString
    (285) ownerOPts -> . R_CURRENT_USER
    (286) ownerOPts -> . R_SESSION_USER
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    R_CURRENT_USER  shift and go to state 490
    R_SESSION_USER  shift and go to state 491
    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    ownerOPts                      shift and go to state 488
    idOrString                     shift and go to state 489

state 356

    (290) alterTable -> R_ALTER alterAlter .

    S_COMA          reduce using rule 290 (alterTable -> R_ALTER alterAlter .)
    S_PUNTOCOMA     reduce using rule 290 (alterTable -> R_ALTER alterAlter .)


state 357

    (298) alterAlter -> R_COLUMN . ID R_SET nullOpt
    (299) alterAlter -> R_COLUMN . ID R_SET defaultVal
    (300) alterAlter -> R_COLUMN . ID R_TYPE types

    ID              shift and go to state 492


state 358

    (287) alterTableList -> alterTableList S_COMA . alterTable
    (289) alterTable -> . R_ADD alterAdd
    (290) alterTable -> . R_ALTER alterAlter
    (291) alterTable -> . R_DROP alterDrop
    (292) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 243
    R_ALTER         shift and go to state 240
    R_DROP          shift and go to state 244
    R_RENAME        shift and go to state 245

    alterTable                     shift and go to state 493

state 359

    (289) alterTable -> R_ADD alterAdd .

    S_COMA          reduce using rule 289 (alterTable -> R_ADD alterAdd .)
    S_PUNTOCOMA     reduce using rule 289 (alterTable -> R_ADD alterAdd .)


state 360

    (293) alterAdd -> R_COLUMN . ID types

    ID              shift and go to state 494


state 361

    (294) alterAdd -> createConstraint .

    S_COMA          reduce using rule 294 (alterAdd -> createConstraint .)
    S_PUNTOCOMA     reduce using rule 294 (alterAdd -> createConstraint .)


state 362

    (295) alterAdd -> createPrimary .

    S_COMA          reduce using rule 295 (alterAdd -> createPrimary .)
    S_PUNTOCOMA     reduce using rule 295 (alterAdd -> createPrimary .)


state 363

    (296) alterAdd -> createForeign .

    S_COMA          reduce using rule 296 (alterAdd -> createForeign .)
    S_PUNTOCOMA     reduce using rule 296 (alterAdd -> createForeign .)


state 364

    (297) alterAdd -> constrName . R_UNIQUE S_PARIZQ ID S_PARDER
    (83) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (86) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_UNIQUE        shift and go to state 495
    R_CHECK         shift and go to state 496
    R_FOREIGN       shift and go to state 497


state 365

    (85) createPrimary -> R_PRIMARY . R_KEY S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 498


state 366

    (87) constrName -> R_CONSTRAINT . ID

    ID              shift and go to state 499


state 367

    (291) alterTable -> R_DROP alterDrop .

    S_COMA          reduce using rule 291 (alterTable -> R_DROP alterDrop .)
    S_PUNTOCOMA     reduce using rule 291 (alterTable -> R_DROP alterDrop .)


state 368

    (301) alterDrop -> R_CONSTRAINT . ID

    ID              shift and go to state 500


state 369

    (302) alterDrop -> R_COLUMN . ID

    ID              shift and go to state 501


state 370

    (292) alterTable -> R_RENAME alterRename .

    S_COMA          reduce using rule 292 (alterTable -> R_RENAME alterRename .)
    S_PUNTOCOMA     reduce using rule 292 (alterTable -> R_RENAME alterRename .)


state 371

    (303) alterRename -> R_COLUMN . ID R_TO ID

    ID              shift and go to state 502


state 372

    (279) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER . col_op idList
    (280) col_op -> . R_COLUMN
    (281) col_op -> .

    R_COLUMN        shift and go to state 504
    ID              reduce using rule 281 (col_op -> .)

    col_op                         shift and go to state 503

state 373

    (306) dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 505


state 374

    (307) dropStmt -> R_DROP R_INDEX concurrenly ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 307 (dropStmt -> R_DROP R_INDEX concurrenly ifExists idOrString .)


state 375

    (379) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 506


state 376

    (380) paramsColumn -> S_PARIZQ idList . S_PARDER
    (89) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 507
    S_COMA          shift and go to state 508


state 377

    (90) idList -> ID .

    S_PARDER        reduce using rule 90 (idList -> ID .)
    S_COMA          reduce using rule 90 (idList -> ID .)
    S_PUNTOCOMA     reduce using rule 90 (idList -> ID .)
    R_DESC          reduce using rule 90 (idList -> ID .)
    R_ASC           reduce using rule 90 (idList -> ID .)
    R_NULLS         reduce using rule 90 (idList -> ID .)


state 378

    (382) updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .

    S_PUNTOCOMA     reduce using rule 382 (updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .)


state 379

    (383) updateCols -> updateCols S_COMA . updateVals
    (385) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 257

    updateVals                     shift and go to state 509

state 380

    (385) updateVals -> ID S_IGUAL . updateExp
    (386) updateExp -> . datatype
    (387) updateExp -> . R_DEFAULT
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_DEFAULT       shift and go to state 512
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    updateExp                      shift and go to state 510
    datatype                       shift and go to state 511
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 381

    (336) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS . idOrString
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    idOrString                     shift and go to state 513

state 382

    (333) tableExp -> tableExp S_COMA fromBody .

    S_COMA          reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_WHERE         reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    S_PUNTOCOMA     reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_NATURAL       reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_INNER         reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_LEFT          reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_RIGHT         reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_FULL          reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_GROUP         reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_ORDER         reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_LIMIT         reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_UNION         reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_INTERSECT     reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    R_EXCEPT        reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)
    S_PARDER        reduce using rule 333 (tableExp -> tableExp S_COMA fromBody .)


state 383

    (312) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (354) groupByCl -> . R_GROUP R_BY groupList havingCl
    (355) groupByCl -> .

    R_GROUP         shift and go to state 385
    R_ORDER         reduce using rule 355 (groupByCl -> .)
    R_LIMIT         reduce using rule 355 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 355 (groupByCl -> .)
    R_UNION         reduce using rule 355 (groupByCl -> .)
    R_INTERSECT     reduce using rule 355 (groupByCl -> .)
    R_EXCEPT        reduce using rule 355 (groupByCl -> .)
    S_PARDER        reduce using rule 355 (groupByCl -> .)

    groupByCl                      shift and go to state 514

state 384

    (313) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (362) orderByCl -> . R_ORDER R_BY orderList
    (363) orderByCl -> .

    R_ORDER         shift and go to state 516
    R_LIMIT         reduce using rule 363 (orderByCl -> .)
    S_PUNTOCOMA     reduce using rule 363 (orderByCl -> .)
    R_UNION         reduce using rule 363 (orderByCl -> .)
    R_INTERSECT     reduce using rule 363 (orderByCl -> .)
    R_EXCEPT        reduce using rule 363 (orderByCl -> .)
    S_PARDER        reduce using rule 363 (orderByCl -> .)

    orderByCl                      shift and go to state 515

state 385

    (354) groupByCl -> R_GROUP . R_BY groupList havingCl

    R_BY            shift and go to state 517


state 386

    (314) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl orderByCl limitCl
    (315) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl limitCl
    (354) groupByCl -> . R_GROUP R_BY groupList havingCl
    (355) groupByCl -> .

    R_GROUP         shift and go to state 385
    R_ORDER         reduce using rule 355 (groupByCl -> .)
    R_LIMIT         reduce using rule 355 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 355 (groupByCl -> .)
    R_UNION         reduce using rule 355 (groupByCl -> .)
    R_INTERSECT     reduce using rule 355 (groupByCl -> .)
    R_EXCEPT        reduce using rule 355 (groupByCl -> .)
    S_PARDER        reduce using rule 355 (groupByCl -> .)

    groupByCl                      shift and go to state 518

state 387

    (338) joinList2 -> joinList2 joinCl .

    R_NATURAL       reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_INNER         reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_LEFT          reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_RIGHT         reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_FULL          reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_WHERE         reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_GROUP         reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_ORDER         reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_LIMIT         reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    S_PUNTOCOMA     reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_UNION         reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_INTERSECT     reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    R_EXCEPT        reduce using rule 338 (joinList2 -> joinList2 joinCl .)
    S_PARDER        reduce using rule 338 (joinList2 -> joinList2 joinCl .)


state 388

    (340) joinCl -> joinOpt R_JOIN . columnName optAlias R_ON expBool
    (341) joinCl -> joinOpt R_JOIN . columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 520

    columnName                     shift and go to state 519

state 389

    (342) joinCl -> R_NATURAL joinOpt . R_JOIN columnName optAlias

    R_JOIN          shift and go to state 521


state 390

    (347) joinOpt -> R_LEFT R_OUTER .

    R_JOIN          reduce using rule 347 (joinOpt -> R_LEFT R_OUTER .)


state 391

    (349) joinOpt -> R_RIGHT R_OUTER .

    R_JOIN          reduce using rule 349 (joinOpt -> R_RIGHT R_OUTER .)


state 392

    (351) joinOpt -> R_FULL R_OUTER .

    R_JOIN          reduce using rule 351 (joinOpt -> R_FULL R_OUTER .)


state 393

    (326) selectList -> selectList S_COMA selectListParams optAlias .

    S_COMA          reduce using rule 326 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_FROM          reduce using rule 326 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 326 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_UNION         reduce using rule 326 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_INTERSECT     reduce using rule 326 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_EXCEPT        reduce using rule 326 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PARDER        reduce using rule 326 (selectList -> selectList S_COMA selectListParams optAlias .)


state 394

    (136) funcCall -> ID S_PARIZQ paramsList S_PARDER .

    O_SUMA          reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_RESTA         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_PRODUCTO      reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_DIVISION      reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_EXPONENTE     reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_MODULAR       reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OC_CONCATENAR   reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IN            reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOT           reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORQUE     reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORQUE     reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_IGUAL         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_DISTINTODE   reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IS            reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_BETWEEN       reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ISNULL        reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOTNULL       reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_ESIGUAL      reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AS            reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    ID              reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    STRING          reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    CHARACTER       reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_COMA          reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FROM          reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_UNION         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INTERSECT     reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_EXCEPT        reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PARDER        reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AND           reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_OR            reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_GROUP         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ORDER         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LIMIT         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_THEN          reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NATURAL       reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INNER         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LEFT          reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_RIGHT         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FULL          reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_WHERE         reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ALL           reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ANY           reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_SOME          reduce using rule 136 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)


state 395

    (171) paramsList -> paramsList S_COMA . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 522
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 396

    (244) boolean -> datatype R_IN S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 523
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 397

    (245) boolean -> datatype R_NOT R_IN S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 524

state 398

    (204) expComp -> datatype R_NOT R_BETWEEN datatype . R_AND datatype
    (223) expSubq -> datatype R_NOT R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 525
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 399

    (216) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 526

state 400

    (217) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 527

state 401

    (218) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 528

state 402

    (219) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 529

state 403

    (221) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 530

state 404

    (201) expComp -> datatype R_IS R_DISTINCT R_FROM . datatype
    (225) expSubq -> datatype R_IS R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 531
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 405

    (202) expComp -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype
    (226) expSubq -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 532


state 406

    (212) expComp -> datatype R_IS R_NOT R_NULL .
    (228) expSubq -> datatype R_IS R_NOT R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_OR            reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_IS            reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_AS            reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    ID              reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    STRING          reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    CHARACTER       reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_COMA          reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FROM          reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_UNION         reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INTERSECT     reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_EXCEPT        reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PARDER        reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_GROUP         reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ORDER         reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LIMIT         reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_THEN          reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_NATURAL       reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INNER         reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LEFT          reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_RIGHT         reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FULL          reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_WHERE         reduce using rule 212 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 533

state 407

    (213) expComp -> datatype R_IS R_NOT R_TRUE .
    (232) expSubq -> datatype R_IS R_NOT R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    ID              reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 213 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 534

state 408

    (214) expComp -> datatype R_IS R_NOT R_FALSE .
    (234) expSubq -> datatype R_IS R_NOT R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    ID              reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 214 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 535

state 409

    (215) expComp -> datatype R_IS R_NOT R_UNKNOWN .
    (236) expSubq -> datatype R_IS R_NOT R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 215 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 536

state 410

    (227) expSubq -> datatype R_IS R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 537


state 411

    (231) expSubq -> datatype R_IS R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 538


state 412

    (233) expSubq -> datatype R_IS R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 539


state 413

    (235) expSubq -> datatype R_IS R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 540


state 414

    (203) expComp -> datatype R_BETWEEN datatype R_AND . datatype
    (222) expSubq -> datatype R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 541
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 415

    (205) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype
    (224) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 542
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 416

    (229) expSubq -> datatype R_ISNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 543

state 417

    (230) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 544

state 418

    (220) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 545

state 419

    (257) optBoolPredicate -> R_IS R_NOT R_TRUE .

    R_AND           reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    ID              reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 257 (optBoolPredicate -> R_IS R_NOT R_TRUE .)


state 420

    (258) optBoolPredicate -> R_IS R_NOT R_FALSE .

    R_AND           reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    ID              reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 258 (optBoolPredicate -> R_IS R_NOT R_FALSE .)


state 421

    (259) optBoolPredicate -> R_IS R_NOT R_UNKNOWN .

    R_AND           reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 259 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)


state 422

    (180) datatype -> R_CASE caseList optElse R_END .

    O_SUMA          reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    O_RESTA         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    O_PRODUCTO      reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    O_DIVISION      reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    O_EXPONENTE     reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    O_MODULAR       reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    OC_CONCATENAR   reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_IN            reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_NOT           reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORQUE     reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORQUE     reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORIGUALQUE reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORIGUALQUE reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    S_IGUAL         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    OL_DISTINTODE   reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_IS            reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_BETWEEN       reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_ISNULL        reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_NOTNULL       reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    OL_ESIGUAL      reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_AS            reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    ID              reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    STRING          reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    CHARACTER       reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    S_COMA          reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_FROM          reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    S_PUNTOCOMA     reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_UNION         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_INTERSECT     reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_EXCEPT        reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    S_PARDER        reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_AND           reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_OR            reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_GROUP         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_ORDER         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_LIMIT         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_THEN          reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_NATURAL       reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_INNER         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_LEFT          reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_RIGHT         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_FULL          reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_WHERE         reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_ALL           reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_ANY           reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)
    R_SOME          reduce using rule 180 (datatype -> R_CASE caseList optElse R_END .)


state 423

    (184) optElse -> R_ELSE literal .

    R_END           reduce using rule 184 (optElse -> R_ELSE literal .)


state 424

    (183) caseWhen -> R_WHEN expBool R_THEN . literal
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL

    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107

    literal                        shift and go to state 546

state 425

    (139) funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 139 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)


state 426

    (140) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .

    O_SUMA          reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_RESTA         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_PRODUCTO      reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_DIVISION      reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_EXPONENTE     reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_MODULAR       reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OC_CONCATENAR   reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IN            reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOT           reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORQUE     reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORQUE     reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_IGUAL         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_DISTINTODE   reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IS            reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_BETWEEN       reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ISNULL        reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOTNULL       reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_ESIGUAL      reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AS            reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    ID              reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    STRING          reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    CHARACTER       reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_COMA          reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FROM          reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PUNTOCOMA     reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_UNION         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INTERSECT     reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_EXCEPT        reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PARDER        reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AND           reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_OR            reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_GROUP         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ORDER         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LIMIT         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_THEN          reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NATURAL       reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INNER         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LEFT          reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_RIGHT         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FULL          reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_WHERE         reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ALL           reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ANY           reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_SOME          reduce using rule 140 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)


state 427

    (141) funcCall -> R_SUM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 141 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)


state 428

    (142) funcCall -> R_PROM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 142 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)


state 429

    (143) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . timeStamp S_PARDER
    (144) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . columnName S_PARDER
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121
    ID              shift and go to state 520

    timeStamp                      shift and go to state 547
    columnName                     shift and go to state 548

state 430

    (153) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA . dateSource S_PARDER
    (154) dateSource -> . R_TIMESTAMP STRING
    (155) dateSource -> . T_DATE STRING
    (156) dateSource -> . T_TIME STRING
    (157) dateSource -> . R_INTERVAL STRING
    (158) dateSource -> . R_NOW S_PARIZQ S_PARDER

    R_TIMESTAMP     shift and go to state 550
    T_DATE          shift and go to state 551
    T_TIME          shift and go to state 552
    R_INTERVAL      shift and go to state 553
    R_NOW           shift and go to state 554

    dateSource                     shift and go to state 549

state 431

    (243) boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 243 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)


state 432

    (319) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (135) expresion -> S_PARIZQ . selectStmt S_PARDER
    (194) datatype -> S_PARIZQ . datatype S_PARDER
    (251) expBool -> S_PARIZQ . expBool S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 198
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    selectStmt                     shift and go to state 555
    datatype                       shift and go to state 200
    expBool                        shift and go to state 201
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 433

    (40) body -> expresion . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 556


state 434

    (19) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body . else_
    (26) List_body -> List_body . body
    (20) else_ -> . R_ELSE List_body
    (21) else_ -> . Lista_elsif_
    (22) else_ -> .
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt S_PUNTOCOMA
    (39) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) body -> . expresion S_PUNTOCOMA
    (23) Lista_elsif_ -> . Lista_elsif_ elsif_
    (24) Lista_elsif_ -> . elsif_
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (25) elsif_ -> . R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_ELSE          shift and go to state 559
    R_END           reduce using rule 22 (else_ -> .)
    R_CREATE        shift and go to state 448
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 432
    R_IF            shift and go to state 18
    R_ELSIF         shift and go to state 562
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 433
    else_                          shift and go to state 557
    body                           shift and go to state 558
    Lista_elsif_                   shift and go to state 560
    createStmt                     shift and go to state 436
    showStmt                       shift and go to state 437
    alterStmt                      shift and go to state 438
    dropStmt                       shift and go to state 439
    insertStmt                     shift and go to state 440
    updateStmt                     shift and go to state 441
    deleteStmt                     shift and go to state 442
    truncateStmt                   shift and go to state 443
    useStmt                        shift and go to state 444
    selectStmt                     shift and go to state 445
    functionStmt                   shift and go to state 446
    ifStmt                         shift and go to state 447
    elsif_                         shift and go to state 561
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 435

    (27) List_body -> body .

    R_ELSE          reduce using rule 27 (List_body -> body .)
    R_CREATE        reduce using rule 27 (List_body -> body .)
    R_SHOW          reduce using rule 27 (List_body -> body .)
    R_ALTER         reduce using rule 27 (List_body -> body .)
    R_DROP          reduce using rule 27 (List_body -> body .)
    R_INSERT        reduce using rule 27 (List_body -> body .)
    R_UPDATE        reduce using rule 27 (List_body -> body .)
    R_DELETE        reduce using rule 27 (List_body -> body .)
    R_TRUNCATE      reduce using rule 27 (List_body -> body .)
    R_USE           reduce using rule 27 (List_body -> body .)
    R_SELECT        reduce using rule 27 (List_body -> body .)
    S_PARIZQ        reduce using rule 27 (List_body -> body .)
    R_IF            reduce using rule 27 (List_body -> body .)
    R_ELSIF         reduce using rule 27 (List_body -> body .)
    R_CASE          reduce using rule 27 (List_body -> body .)
    O_RESTA         reduce using rule 27 (List_body -> body .)
    O_SUMA          reduce using rule 27 (List_body -> body .)
    R_NOT           reduce using rule 27 (List_body -> body .)
    ID              reduce using rule 27 (List_body -> body .)
    INTEGER         reduce using rule 27 (List_body -> body .)
    STRING          reduce using rule 27 (List_body -> body .)
    DECIMAL         reduce using rule 27 (List_body -> body .)
    CHARACTER       reduce using rule 27 (List_body -> body .)
    R_TRUE          reduce using rule 27 (List_body -> body .)
    R_FALSE         reduce using rule 27 (List_body -> body .)
    R_NULL          reduce using rule 27 (List_body -> body .)
    R_NOW           reduce using rule 27 (List_body -> body .)
    R_COUNT         reduce using rule 27 (List_body -> body .)
    R_SUM           reduce using rule 27 (List_body -> body .)
    R_PROM          reduce using rule 27 (List_body -> body .)
    R_EXTRACT       reduce using rule 27 (List_body -> body .)
    R_DATE_PART     reduce using rule 27 (List_body -> body .)
    R_CURRENT_DATE  reduce using rule 27 (List_body -> body .)
    R_CURRENT_TIME  reduce using rule 27 (List_body -> body .)
    R_EXISTS        reduce using rule 27 (List_body -> body .)
    R_TIMESTAMP     reduce using rule 27 (List_body -> body .)
    R_INTERVAL      reduce using rule 27 (List_body -> body .)
    R_END           reduce using rule 27 (List_body -> body .)


state 436

    (28) body -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 563


state 437

    (29) body -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 564


state 438

    (30) body -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 565


state 439

    (31) body -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 566


state 440

    (32) body -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 567


state 441

    (33) body -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 568


state 442

    (34) body -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 569


state 443

    (35) body -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 570


state 444

    (36) body -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 571


state 445

    (37) body -> selectStmt . S_PUNTOCOMA
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 572
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 446

    (38) body -> functionStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 573


state 447

    (39) body -> ifStmt . R_END R_IF S_PUNTOCOMA

    R_END           shift and go to state 574


state 448

    (44) createStmt -> R_CREATE . createBody
    (396) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (45) createBody -> . createOpts
    (46) createOpts -> . unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (57) createOpts -> . R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (58) createOpts -> . orReplace R_DATABASE ifNotExists idOrString createOwner createMode
    (61) createOpts -> . R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (47) unique_index -> . R_UNIQUE
    (48) unique_index -> .
    (59) orReplace -> . R_OR R_REPLACE
    (60) orReplace -> .

    R_FUNCTION      shift and go to state 52
    R_TABLE         shift and go to state 57
    R_TYPE          shift and go to state 58
    R_UNIQUE        shift and go to state 59
    R_INDEX         reduce using rule 48 (unique_index -> .)
    R_OR            shift and go to state 55
    R_DATABASE      reduce using rule 60 (orReplace -> .)

    createBody                     shift and go to state 51
    createOpts                     shift and go to state 54
    unique_index                   shift and go to state 56
    orReplace                      shift and go to state 575

state 449

    (91) types -> ID .

    S_PARDER        reduce using rule 91 (types -> ID .)
    S_COMA          reduce using rule 91 (types -> ID .)
    R_AS            reduce using rule 91 (types -> ID .)
    R_DEFAULT       reduce using rule 91 (types -> ID .)
    R_NOT           reduce using rule 91 (types -> ID .)
    R_NULL          reduce using rule 91 (types -> ID .)
    R_PRIMARY       reduce using rule 91 (types -> ID .)
    R_REFERENCES    reduce using rule 91 (types -> ID .)
    R_CONSTRAINT    reduce using rule 91 (types -> ID .)
    R_UNIQUE        reduce using rule 91 (types -> ID .)
    R_CHECK         reduce using rule 91 (types -> ID .)
    S_PUNTOCOMA     reduce using rule 91 (types -> ID .)
    S_DOSPUNTOS     reduce using rule 91 (types -> ID .)
    S_IGUAL         reduce using rule 91 (types -> ID .)


state 450

    (401) param_item -> ID types .

    S_PARDER        reduce using rule 401 (param_item -> ID types .)
    S_COMA          reduce using rule 401 (param_item -> ID types .)


state 451

    (92) types -> T_SMALLINT .

    S_PARDER        reduce using rule 92 (types -> T_SMALLINT .)
    S_COMA          reduce using rule 92 (types -> T_SMALLINT .)
    R_AS            reduce using rule 92 (types -> T_SMALLINT .)
    R_DEFAULT       reduce using rule 92 (types -> T_SMALLINT .)
    R_NOT           reduce using rule 92 (types -> T_SMALLINT .)
    R_NULL          reduce using rule 92 (types -> T_SMALLINT .)
    R_PRIMARY       reduce using rule 92 (types -> T_SMALLINT .)
    R_REFERENCES    reduce using rule 92 (types -> T_SMALLINT .)
    R_CONSTRAINT    reduce using rule 92 (types -> T_SMALLINT .)
    R_UNIQUE        reduce using rule 92 (types -> T_SMALLINT .)
    R_CHECK         reduce using rule 92 (types -> T_SMALLINT .)
    S_PUNTOCOMA     reduce using rule 92 (types -> T_SMALLINT .)
    S_DOSPUNTOS     reduce using rule 92 (types -> T_SMALLINT .)
    S_IGUAL         reduce using rule 92 (types -> T_SMALLINT .)


state 452

    (93) types -> T_INTEGER .

    S_PARDER        reduce using rule 93 (types -> T_INTEGER .)
    S_COMA          reduce using rule 93 (types -> T_INTEGER .)
    R_AS            reduce using rule 93 (types -> T_INTEGER .)
    R_DEFAULT       reduce using rule 93 (types -> T_INTEGER .)
    R_NOT           reduce using rule 93 (types -> T_INTEGER .)
    R_NULL          reduce using rule 93 (types -> T_INTEGER .)
    R_PRIMARY       reduce using rule 93 (types -> T_INTEGER .)
    R_REFERENCES    reduce using rule 93 (types -> T_INTEGER .)
    R_CONSTRAINT    reduce using rule 93 (types -> T_INTEGER .)
    R_UNIQUE        reduce using rule 93 (types -> T_INTEGER .)
    R_CHECK         reduce using rule 93 (types -> T_INTEGER .)
    S_PUNTOCOMA     reduce using rule 93 (types -> T_INTEGER .)
    S_DOSPUNTOS     reduce using rule 93 (types -> T_INTEGER .)
    S_IGUAL         reduce using rule 93 (types -> T_INTEGER .)


state 453

    (94) types -> T_BIGINT .

    S_PARDER        reduce using rule 94 (types -> T_BIGINT .)
    S_COMA          reduce using rule 94 (types -> T_BIGINT .)
    R_AS            reduce using rule 94 (types -> T_BIGINT .)
    R_DEFAULT       reduce using rule 94 (types -> T_BIGINT .)
    R_NOT           reduce using rule 94 (types -> T_BIGINT .)
    R_NULL          reduce using rule 94 (types -> T_BIGINT .)
    R_PRIMARY       reduce using rule 94 (types -> T_BIGINT .)
    R_REFERENCES    reduce using rule 94 (types -> T_BIGINT .)
    R_CONSTRAINT    reduce using rule 94 (types -> T_BIGINT .)
    R_UNIQUE        reduce using rule 94 (types -> T_BIGINT .)
    R_CHECK         reduce using rule 94 (types -> T_BIGINT .)
    S_PUNTOCOMA     reduce using rule 94 (types -> T_BIGINT .)
    S_DOSPUNTOS     reduce using rule 94 (types -> T_BIGINT .)
    S_IGUAL         reduce using rule 94 (types -> T_BIGINT .)


state 454

    (95) types -> T_REAL .

    S_PARDER        reduce using rule 95 (types -> T_REAL .)
    S_COMA          reduce using rule 95 (types -> T_REAL .)
    R_AS            reduce using rule 95 (types -> T_REAL .)
    R_DEFAULT       reduce using rule 95 (types -> T_REAL .)
    R_NOT           reduce using rule 95 (types -> T_REAL .)
    R_NULL          reduce using rule 95 (types -> T_REAL .)
    R_PRIMARY       reduce using rule 95 (types -> T_REAL .)
    R_REFERENCES    reduce using rule 95 (types -> T_REAL .)
    R_CONSTRAINT    reduce using rule 95 (types -> T_REAL .)
    R_UNIQUE        reduce using rule 95 (types -> T_REAL .)
    R_CHECK         reduce using rule 95 (types -> T_REAL .)
    S_PUNTOCOMA     reduce using rule 95 (types -> T_REAL .)
    S_DOSPUNTOS     reduce using rule 95 (types -> T_REAL .)
    S_IGUAL         reduce using rule 95 (types -> T_REAL .)


state 455

    (96) types -> T_DOUBLE . T_PRECISION

    T_PRECISION     shift and go to state 576


state 456

    (97) types -> T_MONEY .

    S_PARDER        reduce using rule 97 (types -> T_MONEY .)
    S_COMA          reduce using rule 97 (types -> T_MONEY .)
    R_AS            reduce using rule 97 (types -> T_MONEY .)
    R_DEFAULT       reduce using rule 97 (types -> T_MONEY .)
    R_NOT           reduce using rule 97 (types -> T_MONEY .)
    R_NULL          reduce using rule 97 (types -> T_MONEY .)
    R_PRIMARY       reduce using rule 97 (types -> T_MONEY .)
    R_REFERENCES    reduce using rule 97 (types -> T_MONEY .)
    R_CONSTRAINT    reduce using rule 97 (types -> T_MONEY .)
    R_UNIQUE        reduce using rule 97 (types -> T_MONEY .)
    R_CHECK         reduce using rule 97 (types -> T_MONEY .)
    S_PUNTOCOMA     reduce using rule 97 (types -> T_MONEY .)
    S_DOSPUNTOS     reduce using rule 97 (types -> T_MONEY .)
    S_IGUAL         reduce using rule 97 (types -> T_MONEY .)


state 457

    (98) types -> T_TEXT .

    S_PARDER        reduce using rule 98 (types -> T_TEXT .)
    S_COMA          reduce using rule 98 (types -> T_TEXT .)
    R_AS            reduce using rule 98 (types -> T_TEXT .)
    R_DEFAULT       reduce using rule 98 (types -> T_TEXT .)
    R_NOT           reduce using rule 98 (types -> T_TEXT .)
    R_NULL          reduce using rule 98 (types -> T_TEXT .)
    R_PRIMARY       reduce using rule 98 (types -> T_TEXT .)
    R_REFERENCES    reduce using rule 98 (types -> T_TEXT .)
    R_CONSTRAINT    reduce using rule 98 (types -> T_TEXT .)
    R_UNIQUE        reduce using rule 98 (types -> T_TEXT .)
    R_CHECK         reduce using rule 98 (types -> T_TEXT .)
    S_PUNTOCOMA     reduce using rule 98 (types -> T_TEXT .)
    S_DOSPUNTOS     reduce using rule 98 (types -> T_TEXT .)
    S_IGUAL         reduce using rule 98 (types -> T_TEXT .)


state 458

    (99) types -> T_BOOLEAN .

    S_PARDER        reduce using rule 99 (types -> T_BOOLEAN .)
    S_COMA          reduce using rule 99 (types -> T_BOOLEAN .)
    R_AS            reduce using rule 99 (types -> T_BOOLEAN .)
    R_DEFAULT       reduce using rule 99 (types -> T_BOOLEAN .)
    R_NOT           reduce using rule 99 (types -> T_BOOLEAN .)
    R_NULL          reduce using rule 99 (types -> T_BOOLEAN .)
    R_PRIMARY       reduce using rule 99 (types -> T_BOOLEAN .)
    R_REFERENCES    reduce using rule 99 (types -> T_BOOLEAN .)
    R_CONSTRAINT    reduce using rule 99 (types -> T_BOOLEAN .)
    R_UNIQUE        reduce using rule 99 (types -> T_BOOLEAN .)
    R_CHECK         reduce using rule 99 (types -> T_BOOLEAN .)
    S_PUNTOCOMA     reduce using rule 99 (types -> T_BOOLEAN .)
    S_DOSPUNTOS     reduce using rule 99 (types -> T_BOOLEAN .)
    S_IGUAL         reduce using rule 99 (types -> T_BOOLEAN .)


state 459

    (100) types -> R_TIMESTAMP .

    S_PARDER        reduce using rule 100 (types -> R_TIMESTAMP .)
    S_COMA          reduce using rule 100 (types -> R_TIMESTAMP .)
    R_AS            reduce using rule 100 (types -> R_TIMESTAMP .)
    R_DEFAULT       reduce using rule 100 (types -> R_TIMESTAMP .)
    R_NOT           reduce using rule 100 (types -> R_TIMESTAMP .)
    R_NULL          reduce using rule 100 (types -> R_TIMESTAMP .)
    R_PRIMARY       reduce using rule 100 (types -> R_TIMESTAMP .)
    R_REFERENCES    reduce using rule 100 (types -> R_TIMESTAMP .)
    R_CONSTRAINT    reduce using rule 100 (types -> R_TIMESTAMP .)
    R_UNIQUE        reduce using rule 100 (types -> R_TIMESTAMP .)
    R_CHECK         reduce using rule 100 (types -> R_TIMESTAMP .)
    S_PUNTOCOMA     reduce using rule 100 (types -> R_TIMESTAMP .)
    S_DOSPUNTOS     reduce using rule 100 (types -> R_TIMESTAMP .)
    S_IGUAL         reduce using rule 100 (types -> R_TIMESTAMP .)


state 460

    (101) types -> T_DATE .

    S_PARDER        reduce using rule 101 (types -> T_DATE .)
    S_COMA          reduce using rule 101 (types -> T_DATE .)
    R_AS            reduce using rule 101 (types -> T_DATE .)
    R_DEFAULT       reduce using rule 101 (types -> T_DATE .)
    R_NOT           reduce using rule 101 (types -> T_DATE .)
    R_NULL          reduce using rule 101 (types -> T_DATE .)
    R_PRIMARY       reduce using rule 101 (types -> T_DATE .)
    R_REFERENCES    reduce using rule 101 (types -> T_DATE .)
    R_CONSTRAINT    reduce using rule 101 (types -> T_DATE .)
    R_UNIQUE        reduce using rule 101 (types -> T_DATE .)
    R_CHECK         reduce using rule 101 (types -> T_DATE .)
    S_PUNTOCOMA     reduce using rule 101 (types -> T_DATE .)
    S_DOSPUNTOS     reduce using rule 101 (types -> T_DATE .)
    S_IGUAL         reduce using rule 101 (types -> T_DATE .)


state 461

    (102) types -> T_TIME .

    S_PARDER        reduce using rule 102 (types -> T_TIME .)
    S_COMA          reduce using rule 102 (types -> T_TIME .)
    R_AS            reduce using rule 102 (types -> T_TIME .)
    R_DEFAULT       reduce using rule 102 (types -> T_TIME .)
    R_NOT           reduce using rule 102 (types -> T_TIME .)
    R_NULL          reduce using rule 102 (types -> T_TIME .)
    R_PRIMARY       reduce using rule 102 (types -> T_TIME .)
    R_REFERENCES    reduce using rule 102 (types -> T_TIME .)
    R_CONSTRAINT    reduce using rule 102 (types -> T_TIME .)
    R_UNIQUE        reduce using rule 102 (types -> T_TIME .)
    R_CHECK         reduce using rule 102 (types -> T_TIME .)
    S_PUNTOCOMA     reduce using rule 102 (types -> T_TIME .)
    S_DOSPUNTOS     reduce using rule 102 (types -> T_TIME .)
    S_IGUAL         reduce using rule 102 (types -> T_TIME .)


state 462

    (103) types -> T_DECIMAL . optParams
    (117) optParams -> . S_PARIZQ literalList S_PARDER
    (118) optParams -> .

    S_PARIZQ        shift and go to state 578
    S_PARDER        reduce using rule 118 (optParams -> .)
    S_COMA          reduce using rule 118 (optParams -> .)
    R_AS            reduce using rule 118 (optParams -> .)
    R_DEFAULT       reduce using rule 118 (optParams -> .)
    R_NOT           reduce using rule 118 (optParams -> .)
    R_NULL          reduce using rule 118 (optParams -> .)
    R_PRIMARY       reduce using rule 118 (optParams -> .)
    R_REFERENCES    reduce using rule 118 (optParams -> .)
    R_CONSTRAINT    reduce using rule 118 (optParams -> .)
    R_UNIQUE        reduce using rule 118 (optParams -> .)
    R_CHECK         reduce using rule 118 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 118 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 118 (optParams -> .)
    S_IGUAL         reduce using rule 118 (optParams -> .)

    optParams                      shift and go to state 577

state 463

    (104) types -> T_NUMERIC . optParams
    (117) optParams -> . S_PARIZQ literalList S_PARDER
    (118) optParams -> .

    S_PARIZQ        shift and go to state 578
    S_PARDER        reduce using rule 118 (optParams -> .)
    S_COMA          reduce using rule 118 (optParams -> .)
    R_AS            reduce using rule 118 (optParams -> .)
    R_DEFAULT       reduce using rule 118 (optParams -> .)
    R_NOT           reduce using rule 118 (optParams -> .)
    R_NULL          reduce using rule 118 (optParams -> .)
    R_PRIMARY       reduce using rule 118 (optParams -> .)
    R_REFERENCES    reduce using rule 118 (optParams -> .)
    R_CONSTRAINT    reduce using rule 118 (optParams -> .)
    R_UNIQUE        reduce using rule 118 (optParams -> .)
    R_CHECK         reduce using rule 118 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 118 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 118 (optParams -> .)
    S_IGUAL         reduce using rule 118 (optParams -> .)

    optParams                      shift and go to state 579

state 464

    (105) types -> T_VARCHAR . optParams
    (117) optParams -> . S_PARIZQ literalList S_PARDER
    (118) optParams -> .

    S_PARIZQ        shift and go to state 578
    S_PARDER        reduce using rule 118 (optParams -> .)
    S_COMA          reduce using rule 118 (optParams -> .)
    R_AS            reduce using rule 118 (optParams -> .)
    R_DEFAULT       reduce using rule 118 (optParams -> .)
    R_NOT           reduce using rule 118 (optParams -> .)
    R_NULL          reduce using rule 118 (optParams -> .)
    R_PRIMARY       reduce using rule 118 (optParams -> .)
    R_REFERENCES    reduce using rule 118 (optParams -> .)
    R_CONSTRAINT    reduce using rule 118 (optParams -> .)
    R_UNIQUE        reduce using rule 118 (optParams -> .)
    R_CHECK         reduce using rule 118 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 118 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 118 (optParams -> .)
    S_IGUAL         reduce using rule 118 (optParams -> .)

    optParams                      shift and go to state 580

state 465

    (106) types -> T_CHARACTER . optParams
    (108) types -> T_CHARACTER . T_VARYING optParams
    (117) optParams -> . S_PARIZQ literalList S_PARDER
    (118) optParams -> .

    T_VARYING       shift and go to state 582
    S_PARIZQ        shift and go to state 578
    S_PARDER        reduce using rule 118 (optParams -> .)
    S_COMA          reduce using rule 118 (optParams -> .)
    R_AS            reduce using rule 118 (optParams -> .)
    R_DEFAULT       reduce using rule 118 (optParams -> .)
    R_NOT           reduce using rule 118 (optParams -> .)
    R_NULL          reduce using rule 118 (optParams -> .)
    R_PRIMARY       reduce using rule 118 (optParams -> .)
    R_REFERENCES    reduce using rule 118 (optParams -> .)
    R_CONSTRAINT    reduce using rule 118 (optParams -> .)
    R_UNIQUE        reduce using rule 118 (optParams -> .)
    R_CHECK         reduce using rule 118 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 118 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 118 (optParams -> .)
    S_IGUAL         reduce using rule 118 (optParams -> .)

    optParams                      shift and go to state 581

state 466

    (107) types -> T_CHAR . optParams
    (117) optParams -> . S_PARIZQ literalList S_PARDER
    (118) optParams -> .

    S_PARIZQ        shift and go to state 578
    S_PARDER        reduce using rule 118 (optParams -> .)
    S_COMA          reduce using rule 118 (optParams -> .)
    R_AS            reduce using rule 118 (optParams -> .)
    R_DEFAULT       reduce using rule 118 (optParams -> .)
    R_NOT           reduce using rule 118 (optParams -> .)
    R_NULL          reduce using rule 118 (optParams -> .)
    R_PRIMARY       reduce using rule 118 (optParams -> .)
    R_REFERENCES    reduce using rule 118 (optParams -> .)
    R_CONSTRAINT    reduce using rule 118 (optParams -> .)
    R_UNIQUE        reduce using rule 118 (optParams -> .)
    R_CHECK         reduce using rule 118 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 118 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 118 (optParams -> .)
    S_IGUAL         reduce using rule 118 (optParams -> .)

    optParams                      shift and go to state 583

state 467

    (109) types -> R_INTERVAL . intervalFields
    (110) intervalFields -> . R_YEAR
    (111) intervalFields -> . R_MONTH
    (112) intervalFields -> . R_DAY
    (113) intervalFields -> . R_HOUR
    (114) intervalFields -> . R_MINUTE
    (115) intervalFields -> . R_SECOND
    (116) intervalFields -> .

    R_YEAR          shift and go to state 585
    R_MONTH         shift and go to state 586
    R_DAY           shift and go to state 587
    R_HOUR          shift and go to state 588
    R_MINUTE        shift and go to state 589
    R_SECOND        shift and go to state 590
    S_PARDER        reduce using rule 116 (intervalFields -> .)
    S_COMA          reduce using rule 116 (intervalFields -> .)
    R_AS            reduce using rule 116 (intervalFields -> .)
    R_DEFAULT       reduce using rule 116 (intervalFields -> .)
    R_NOT           reduce using rule 116 (intervalFields -> .)
    R_NULL          reduce using rule 116 (intervalFields -> .)
    R_PRIMARY       reduce using rule 116 (intervalFields -> .)
    R_REFERENCES    reduce using rule 116 (intervalFields -> .)
    R_CONSTRAINT    reduce using rule 116 (intervalFields -> .)
    R_UNIQUE        reduce using rule 116 (intervalFields -> .)
    R_CHECK         reduce using rule 116 (intervalFields -> .)
    S_PUNTOCOMA     reduce using rule 116 (intervalFields -> .)
    S_DOSPUNTOS     reduce using rule 116 (intervalFields -> .)
    S_IGUAL         reduce using rule 116 (intervalFields -> .)

    intervalFields                 shift and go to state 584

state 468

    (396) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER . returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (402) returnsStmt -> . R_RETURNS types
    (403) returnsStmt -> .

    R_RETURNS       shift and go to state 471
    R_AS            reduce using rule 403 (returnsStmt -> .)

    returnsStmt                    shift and go to state 591

state 469

    (399) params_list -> params_list S_COMA . param_item
    (401) param_item -> . ID types

    ID              shift and go to state 344

    param_item                     shift and go to state 592

state 470

    (397) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt . R_AS S_DOLAR S_DOLAR bloqueFunction

    R_AS            shift and go to state 593


state 471

    (402) returnsStmt -> R_RETURNS . types
    (91) types -> . ID
    (92) types -> . T_SMALLINT
    (93) types -> . T_INTEGER
    (94) types -> . T_BIGINT
    (95) types -> . T_REAL
    (96) types -> . T_DOUBLE T_PRECISION
    (97) types -> . T_MONEY
    (98) types -> . T_TEXT
    (99) types -> . T_BOOLEAN
    (100) types -> . R_TIMESTAMP
    (101) types -> . T_DATE
    (102) types -> . T_TIME
    (103) types -> . T_DECIMAL optParams
    (104) types -> . T_NUMERIC optParams
    (105) types -> . T_VARCHAR optParams
    (106) types -> . T_CHARACTER optParams
    (107) types -> . T_CHAR optParams
    (108) types -> . T_CHARACTER T_VARYING optParams
    (109) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 449
    T_SMALLINT      shift and go to state 451
    T_INTEGER       shift and go to state 452
    T_BIGINT        shift and go to state 453
    T_REAL          shift and go to state 454
    T_DOUBLE        shift and go to state 455
    T_MONEY         shift and go to state 456
    T_TEXT          shift and go to state 457
    T_BOOLEAN       shift and go to state 458
    R_TIMESTAMP     shift and go to state 459
    T_DATE          shift and go to state 460
    T_TIME          shift and go to state 461
    T_DECIMAL       shift and go to state 462
    T_NUMERIC       shift and go to state 463
    T_VARCHAR       shift and go to state 464
    T_CHARACTER     shift and go to state 465
    T_CHAR          shift and go to state 466
    R_INTERVAL      shift and go to state 467

    types                          shift and go to state 594

state 472

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list . S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (399) params_list -> params_list . S_COMA param_item

    S_PARDER        shift and go to state 595
    S_COMA          shift and go to state 469


state 473

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER . languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (439) languageProcedure -> . R_LANGUAGE ID
    (440) languageProcedure -> .

    R_LANGUAGE      shift and go to state 597
    R_AS            reduce using rule 440 (languageProcedure -> .)

    languageProcedure              shift and go to state 596

state 474

    (58) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner . createMode
    (71) createMode -> . R_MODE INTEGER
    (72) createMode -> . R_MODE S_IGUAL INTEGER
    (73) createMode -> .

    R_MODE          shift and go to state 599
    S_PUNTOCOMA     reduce using rule 73 (createMode -> .)

    createMode                     shift and go to state 598

state 475

    (66) createOwner -> R_OWNER . ID
    (67) createOwner -> R_OWNER . STRING
    (68) createOwner -> R_OWNER . S_IGUAL ID
    (69) createOwner -> R_OWNER . S_IGUAL STRING

    ID              shift and go to state 600
    STRING          shift and go to state 601
    S_IGUAL         shift and go to state 602


state 476

    (46) createOpts -> unique_index R_INDEX ID R_ON ID . using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (49) using_hash_index -> . R_USING R_HASH
    (50) using_hash_index -> .

    R_USING         shift and go to state 604
    S_PARIZQ        reduce using rule 50 (using_hash_index -> .)

    using_hash_index               shift and go to state 603

state 477

    (57) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList . S_PARDER inheritsOpt
    (74) createTableList -> createTableList . S_COMA createTable

    S_PARDER        shift and go to state 605
    S_COMA          shift and go to state 606


state 478

    (75) createTableList -> createTable .

    S_PARDER        reduce using rule 75 (createTableList -> createTable .)
    S_COMA          reduce using rule 75 (createTableList -> createTable .)


state 479

    (76) createTable -> ID . types createColumns
    (91) types -> . ID
    (92) types -> . T_SMALLINT
    (93) types -> . T_INTEGER
    (94) types -> . T_BIGINT
    (95) types -> . T_REAL
    (96) types -> . T_DOUBLE T_PRECISION
    (97) types -> . T_MONEY
    (98) types -> . T_TEXT
    (99) types -> . T_BOOLEAN
    (100) types -> . R_TIMESTAMP
    (101) types -> . T_DATE
    (102) types -> . T_TIME
    (103) types -> . T_DECIMAL optParams
    (104) types -> . T_NUMERIC optParams
    (105) types -> . T_VARCHAR optParams
    (106) types -> . T_CHARACTER optParams
    (107) types -> . T_CHAR optParams
    (108) types -> . T_CHARACTER T_VARYING optParams
    (109) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 449
    T_SMALLINT      shift and go to state 451
    T_INTEGER       shift and go to state 452
    T_BIGINT        shift and go to state 453
    T_REAL          shift and go to state 454
    T_DOUBLE        shift and go to state 455
    T_MONEY         shift and go to state 456
    T_TEXT          shift and go to state 457
    T_BOOLEAN       shift and go to state 458
    R_TIMESTAMP     shift and go to state 459
    T_DATE          shift and go to state 460
    T_TIME          shift and go to state 461
    T_DECIMAL       shift and go to state 462
    T_NUMERIC       shift and go to state 463
    T_VARCHAR       shift and go to state 464
    T_CHARACTER     shift and go to state 465
    T_CHAR          shift and go to state 466
    R_INTERVAL      shift and go to state 467

    types                          shift and go to state 607

state 480

    (77) createTable -> createConstraint .

    S_PARDER        reduce using rule 77 (createTable -> createConstraint .)
    S_COMA          reduce using rule 77 (createTable -> createConstraint .)


state 481

    (78) createTable -> createUnique .

    S_PARDER        reduce using rule 78 (createTable -> createUnique .)
    S_COMA          reduce using rule 78 (createTable -> createUnique .)


state 482

    (79) createTable -> createPrimary .

    S_PARDER        reduce using rule 79 (createTable -> createPrimary .)
    S_COMA          reduce using rule 79 (createTable -> createPrimary .)


state 483

    (80) createTable -> createForeign .

    S_PARDER        reduce using rule 80 (createTable -> createForeign .)
    S_COMA          reduce using rule 80 (createTable -> createForeign .)


state 484

    (83) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (86) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_CHECK         shift and go to state 496
    R_FOREIGN       shift and go to state 497


state 485

    (84) createUnique -> R_UNIQUE . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 608


state 486

    (61) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 609


state 487

    (282) alterDb -> R_RENAME R_TO idOrString .

    S_PUNTOCOMA     reduce using rule 282 (alterDb -> R_RENAME R_TO idOrString .)


state 488

    (283) alterDb -> R_OWNER R_TO ownerOPts .

    S_PUNTOCOMA     reduce using rule 283 (alterDb -> R_OWNER R_TO ownerOPts .)


state 489

    (284) ownerOPts -> idOrString .

    S_PUNTOCOMA     reduce using rule 284 (ownerOPts -> idOrString .)


state 490

    (285) ownerOPts -> R_CURRENT_USER .

    S_PUNTOCOMA     reduce using rule 285 (ownerOPts -> R_CURRENT_USER .)


state 491

    (286) ownerOPts -> R_SESSION_USER .

    S_PUNTOCOMA     reduce using rule 286 (ownerOPts -> R_SESSION_USER .)


state 492

    (298) alterAlter -> R_COLUMN ID . R_SET nullOpt
    (299) alterAlter -> R_COLUMN ID . R_SET defaultVal
    (300) alterAlter -> R_COLUMN ID . R_TYPE types

    R_SET           shift and go to state 610
    R_TYPE          shift and go to state 611


state 493

    (287) alterTableList -> alterTableList S_COMA alterTable .

    S_COMA          reduce using rule 287 (alterTableList -> alterTableList S_COMA alterTable .)
    S_PUNTOCOMA     reduce using rule 287 (alterTableList -> alterTableList S_COMA alterTable .)


state 494

    (293) alterAdd -> R_COLUMN ID . types
    (91) types -> . ID
    (92) types -> . T_SMALLINT
    (93) types -> . T_INTEGER
    (94) types -> . T_BIGINT
    (95) types -> . T_REAL
    (96) types -> . T_DOUBLE T_PRECISION
    (97) types -> . T_MONEY
    (98) types -> . T_TEXT
    (99) types -> . T_BOOLEAN
    (100) types -> . R_TIMESTAMP
    (101) types -> . T_DATE
    (102) types -> . T_TIME
    (103) types -> . T_DECIMAL optParams
    (104) types -> . T_NUMERIC optParams
    (105) types -> . T_VARCHAR optParams
    (106) types -> . T_CHARACTER optParams
    (107) types -> . T_CHAR optParams
    (108) types -> . T_CHARACTER T_VARYING optParams
    (109) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 449
    T_SMALLINT      shift and go to state 451
    T_INTEGER       shift and go to state 452
    T_BIGINT        shift and go to state 453
    T_REAL          shift and go to state 454
    T_DOUBLE        shift and go to state 455
    T_MONEY         shift and go to state 456
    T_TEXT          shift and go to state 457
    T_BOOLEAN       shift and go to state 458
    R_TIMESTAMP     shift and go to state 459
    T_DATE          shift and go to state 460
    T_TIME          shift and go to state 461
    T_DECIMAL       shift and go to state 462
    T_NUMERIC       shift and go to state 463
    T_VARCHAR       shift and go to state 464
    T_CHARACTER     shift and go to state 465
    T_CHAR          shift and go to state 466
    R_INTERVAL      shift and go to state 467

    types                          shift and go to state 612

state 495

    (297) alterAdd -> constrName R_UNIQUE . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 613


state 496

    (83) createConstraint -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 614


state 497

    (86) createForeign -> constrName R_FOREIGN . R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 615


state 498

    (85) createPrimary -> R_PRIMARY R_KEY . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 616


state 499

    (87) constrName -> R_CONSTRAINT ID .

    R_UNIQUE        reduce using rule 87 (constrName -> R_CONSTRAINT ID .)
    R_CHECK         reduce using rule 87 (constrName -> R_CONSTRAINT ID .)
    R_FOREIGN       reduce using rule 87 (constrName -> R_CONSTRAINT ID .)


state 500

    (301) alterDrop -> R_CONSTRAINT ID .

    S_COMA          reduce using rule 301 (alterDrop -> R_CONSTRAINT ID .)
    S_PUNTOCOMA     reduce using rule 301 (alterDrop -> R_CONSTRAINT ID .)


state 501

    (302) alterDrop -> R_COLUMN ID .

    S_COMA          reduce using rule 302 (alterDrop -> R_COLUMN ID .)
    S_PUNTOCOMA     reduce using rule 302 (alterDrop -> R_COLUMN ID .)


state 502

    (303) alterRename -> R_COLUMN ID . R_TO ID

    R_TO            shift and go to state 617


state 503

    (279) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER col_op . idList
    (89) idList -> . idList S_COMA ID
    (90) idList -> . ID

    ID              shift and go to state 377

    idList                         shift and go to state 618

state 504

    (280) col_op -> R_COLUMN .

    ID              reduce using rule 280 (col_op -> R_COLUMN .)


state 505

    (306) dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER .

    S_PUNTOCOMA     reduce using rule 306 (dropStmt -> R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER .)


state 506

    (379) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ . paramsList S_PARDER
    (171) paramsList -> . paramsList S_COMA datatype
    (172) paramsList -> . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    paramsList                     shift and go to state 619
    datatype                       shift and go to state 278
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 507

    (380) paramsColumn -> S_PARIZQ idList S_PARDER .

    R_VALUES        reduce using rule 380 (paramsColumn -> S_PARIZQ idList S_PARDER .)


state 508

    (89) idList -> idList S_COMA . ID

    ID              shift and go to state 620


state 509

    (383) updateCols -> updateCols S_COMA updateVals .

    S_COMA          reduce using rule 383 (updateCols -> updateCols S_COMA updateVals .)
    R_WHERE         reduce using rule 383 (updateCols -> updateCols S_COMA updateVals .)
    S_PUNTOCOMA     reduce using rule 383 (updateCols -> updateCols S_COMA updateVals .)


state 510

    (385) updateVals -> ID S_IGUAL updateExp .

    S_COMA          reduce using rule 385 (updateVals -> ID S_IGUAL updateExp .)
    R_WHERE         reduce using rule 385 (updateVals -> ID S_IGUAL updateExp .)
    S_PUNTOCOMA     reduce using rule 385 (updateVals -> ID S_IGUAL updateExp .)


state 511

    (386) updateExp -> datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    S_COMA          reduce using rule 386 (updateExp -> datatype .)
    R_WHERE         reduce using rule 386 (updateExp -> datatype .)
    S_PUNTOCOMA     reduce using rule 386 (updateExp -> datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 512

    (387) updateExp -> R_DEFAULT .

    S_COMA          reduce using rule 387 (updateExp -> R_DEFAULT .)
    R_WHERE         reduce using rule 387 (updateExp -> R_DEFAULT .)
    S_PUNTOCOMA     reduce using rule 387 (updateExp -> R_DEFAULT .)


state 513

    (336) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .

    R_SET           reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_COMA          reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_WHERE         reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_NATURAL       reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INNER         reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LEFT          reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_RIGHT         reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_FULL          reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_GROUP         reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_ORDER         reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LIMIT         reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_UNION         reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INTERSECT     reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_EXCEPT        reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PARDER        reduce using rule 336 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)


state 514

    (312) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (362) orderByCl -> . R_ORDER R_BY orderList
    (363) orderByCl -> .

    R_ORDER         shift and go to state 516
    R_LIMIT         reduce using rule 363 (orderByCl -> .)
    S_PUNTOCOMA     reduce using rule 363 (orderByCl -> .)
    R_UNION         reduce using rule 363 (orderByCl -> .)
    R_INTERSECT     reduce using rule 363 (orderByCl -> .)
    R_EXCEPT        reduce using rule 363 (orderByCl -> .)
    S_PARDER        reduce using rule 363 (orderByCl -> .)

    orderByCl                      shift and go to state 621

state 515

    (313) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (374) limitCl -> . R_LIMIT INTEGER offsetLimit
    (375) limitCl -> . R_LIMIT R_ALL offsetLimit
    (376) limitCl -> .

    R_LIMIT         shift and go to state 623
    S_PUNTOCOMA     reduce using rule 376 (limitCl -> .)
    R_UNION         reduce using rule 376 (limitCl -> .)
    R_INTERSECT     reduce using rule 376 (limitCl -> .)
    R_EXCEPT        reduce using rule 376 (limitCl -> .)
    S_PARDER        reduce using rule 376 (limitCl -> .)

    limitCl                        shift and go to state 622

state 516

    (362) orderByCl -> R_ORDER . R_BY orderList

    R_BY            shift and go to state 624


state 517

    (354) groupByCl -> R_GROUP R_BY . groupList havingCl
    (356) groupList -> . groupList S_COMA columnName
    (357) groupList -> . groupList S_COMA INTEGER
    (358) groupList -> . columnName
    (359) groupList -> . INTEGER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 627
    ID              shift and go to state 520

    groupList                      shift and go to state 625
    columnName                     shift and go to state 626

state 518

    (314) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . orderByCl limitCl
    (315) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . limitCl
    (362) orderByCl -> . R_ORDER R_BY orderList
    (363) orderByCl -> .
    (374) limitCl -> . R_LIMIT INTEGER offsetLimit
    (375) limitCl -> . R_LIMIT R_ALL offsetLimit
    (376) limitCl -> .

  ! shift/reduce conflict for R_LIMIT resolved as shift
  ! reduce/reduce conflict for S_PUNTOCOMA resolved using rule 363 (orderByCl -> .)
  ! reduce/reduce conflict for R_UNION resolved using rule 363 (orderByCl -> .)
  ! reduce/reduce conflict for R_INTERSECT resolved using rule 363 (orderByCl -> .)
  ! reduce/reduce conflict for R_EXCEPT resolved using rule 363 (orderByCl -> .)
  ! reduce/reduce conflict for S_PARDER resolved using rule 363 (orderByCl -> .)
    R_ORDER         shift and go to state 516
    S_PUNTOCOMA     reduce using rule 363 (orderByCl -> .)
    R_UNION         reduce using rule 363 (orderByCl -> .)
    R_INTERSECT     reduce using rule 363 (orderByCl -> .)
    R_EXCEPT        reduce using rule 363 (orderByCl -> .)
    S_PARDER        reduce using rule 363 (orderByCl -> .)
    R_LIMIT         shift and go to state 623

  ! R_LIMIT         [ reduce using rule 363 (orderByCl -> .) ]
  ! S_PUNTOCOMA     [ reduce using rule 376 (limitCl -> .) ]
  ! R_UNION         [ reduce using rule 376 (limitCl -> .) ]
  ! R_INTERSECT     [ reduce using rule 376 (limitCl -> .) ]
  ! R_EXCEPT        [ reduce using rule 376 (limitCl -> .) ]
  ! S_PARDER        [ reduce using rule 376 (limitCl -> .) ]

    orderByCl                      shift and go to state 628
    limitCl                        shift and go to state 629

state 519

    (340) joinCl -> joinOpt R_JOIN columnName . optAlias R_ON expBool
    (341) joinCl -> joinOpt R_JOIN columnName . optAlias R_USING S_PARIZQ nameList S_PARDER
    (330) optAlias -> . R_AS idOrString
    (331) optAlias -> . idOrString
    (332) optAlias -> .
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    R_AS            shift and go to state 160
    R_ON            reduce using rule 332 (optAlias -> .)
    R_USING         reduce using rule 332 (optAlias -> .)
    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    optAlias                       shift and go to state 630
    idOrString                     shift and go to state 161

state 520

    (260) columnName -> ID .
    (261) columnName -> ID . S_PUNTO ID

    R_AS            reduce using rule 260 (columnName -> ID .)
    ID              reduce using rule 260 (columnName -> ID .)
    STRING          reduce using rule 260 (columnName -> ID .)
    CHARACTER       reduce using rule 260 (columnName -> ID .)
    R_ON            reduce using rule 260 (columnName -> ID .)
    R_USING         reduce using rule 260 (columnName -> ID .)
    S_PARDER        reduce using rule 260 (columnName -> ID .)
    S_COMA          reduce using rule 260 (columnName -> ID .)
    R_HAVING        reduce using rule 260 (columnName -> ID .)
    R_ORDER         reduce using rule 260 (columnName -> ID .)
    R_LIMIT         reduce using rule 260 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 260 (columnName -> ID .)
    R_UNION         reduce using rule 260 (columnName -> ID .)
    R_INTERSECT     reduce using rule 260 (columnName -> ID .)
    R_EXCEPT        reduce using rule 260 (columnName -> ID .)
    R_NATURAL       reduce using rule 260 (columnName -> ID .)
    R_INNER         reduce using rule 260 (columnName -> ID .)
    R_LEFT          reduce using rule 260 (columnName -> ID .)
    R_RIGHT         reduce using rule 260 (columnName -> ID .)
    R_FULL          reduce using rule 260 (columnName -> ID .)
    R_WHERE         reduce using rule 260 (columnName -> ID .)
    R_GROUP         reduce using rule 260 (columnName -> ID .)
    R_ASC           reduce using rule 260 (columnName -> ID .)
    R_DESC          reduce using rule 260 (columnName -> ID .)
    R_NULL          reduce using rule 260 (columnName -> ID .)
    S_PUNTO         shift and go to state 228


state 521

    (342) joinCl -> R_NATURAL joinOpt R_JOIN . columnName optAlias
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 520

    columnName                     shift and go to state 631

state 522

    (171) paramsList -> paramsList S_COMA datatype .
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 171 (paramsList -> paramsList S_COMA datatype .)
    S_COMA          reduce using rule 171 (paramsList -> paramsList S_COMA datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180


state 523

    (244) boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 244 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)


state 524

    (245) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 632
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 525

    (204) expComp -> datatype R_NOT R_BETWEEN datatype R_AND . datatype
    (223) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 633
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 526

    (216) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 634
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 527

    (217) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 635
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 528

    (218) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 636
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 529

    (219) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 637
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 530

    (221) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 638
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 531

    (201) expComp -> datatype R_IS R_DISTINCT R_FROM datatype .
    (225) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 201 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 639

state 532

    (202) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype
    (226) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 640
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 533

    (228) expSubq -> datatype R_IS R_NOT R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 641


state 534

    (232) expSubq -> datatype R_IS R_NOT R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 642


state 535

    (234) expSubq -> datatype R_IS R_NOT R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 643


state 536

    (236) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 644


state 537

    (227) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 645

state 538

    (231) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 646

state 539

    (233) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 647

state 540

    (235) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 648

state 541

    (203) expComp -> datatype R_BETWEEN datatype R_AND datatype .
    (222) expSubq -> datatype R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 203 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 649

state 542

    (205) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype
    (224) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    datatype                       shift and go to state 650
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 543

    (229) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 651
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 544

    (230) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 652
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 545

    (220) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 653
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 546

    (183) caseWhen -> R_WHEN expBool R_THEN literal .

    R_ELSE          reduce using rule 183 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_WHEN          reduce using rule 183 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_END           reduce using rule 183 (caseWhen -> R_WHEN expBool R_THEN literal .)


state 547

    (143) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp . S_PARDER

    S_PARDER        shift and go to state 654


state 548

    (144) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName . S_PARDER

    S_PARDER        shift and go to state 655


state 549

    (153) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource . S_PARDER

    S_PARDER        shift and go to state 656


state 550

    (154) dateSource -> R_TIMESTAMP . STRING

    STRING          shift and go to state 657


state 551

    (155) dateSource -> T_DATE . STRING

    STRING          shift and go to state 658


state 552

    (156) dateSource -> T_TIME . STRING

    STRING          shift and go to state 659


state 553

    (157) dateSource -> R_INTERVAL . STRING

    STRING          shift and go to state 660


state 554

    (158) dateSource -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 661


state 555

    (319) selectStmt -> S_PARIZQ selectStmt . S_PARDER
    (135) expresion -> S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 662
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 556

    (40) body -> expresion S_PUNTOCOMA .

    R_ELSE          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_CREATE        reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_SHOW          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_ALTER         reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_DROP          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_INSERT        reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_DELETE        reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_USE           reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_SELECT        reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_IF            reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_CASE          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    O_RESTA         reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    O_SUMA          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_NOT           reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    ID              reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    INTEGER         reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    STRING          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    DECIMAL         reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    CHARACTER       reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_TRUE          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_FALSE         reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_NULL          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_NOW           reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_COUNT         reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_SUM           reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_PROM          reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 40 (body -> expresion S_PUNTOCOMA .)
    R_END           reduce using rule 40 (body -> expresion S_PUNTOCOMA .)


state 557

    (19) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_ .

    R_END           reduce using rule 19 (ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_ .)


state 558

    (26) List_body -> List_body body .

    R_ELSE          reduce using rule 26 (List_body -> List_body body .)
    R_CREATE        reduce using rule 26 (List_body -> List_body body .)
    R_SHOW          reduce using rule 26 (List_body -> List_body body .)
    R_ALTER         reduce using rule 26 (List_body -> List_body body .)
    R_DROP          reduce using rule 26 (List_body -> List_body body .)
    R_INSERT        reduce using rule 26 (List_body -> List_body body .)
    R_UPDATE        reduce using rule 26 (List_body -> List_body body .)
    R_DELETE        reduce using rule 26 (List_body -> List_body body .)
    R_TRUNCATE      reduce using rule 26 (List_body -> List_body body .)
    R_USE           reduce using rule 26 (List_body -> List_body body .)
    R_SELECT        reduce using rule 26 (List_body -> List_body body .)
    S_PARIZQ        reduce using rule 26 (List_body -> List_body body .)
    R_IF            reduce using rule 26 (List_body -> List_body body .)
    R_ELSIF         reduce using rule 26 (List_body -> List_body body .)
    R_CASE          reduce using rule 26 (List_body -> List_body body .)
    O_RESTA         reduce using rule 26 (List_body -> List_body body .)
    O_SUMA          reduce using rule 26 (List_body -> List_body body .)
    R_NOT           reduce using rule 26 (List_body -> List_body body .)
    ID              reduce using rule 26 (List_body -> List_body body .)
    INTEGER         reduce using rule 26 (List_body -> List_body body .)
    STRING          reduce using rule 26 (List_body -> List_body body .)
    DECIMAL         reduce using rule 26 (List_body -> List_body body .)
    CHARACTER       reduce using rule 26 (List_body -> List_body body .)
    R_TRUE          reduce using rule 26 (List_body -> List_body body .)
    R_FALSE         reduce using rule 26 (List_body -> List_body body .)
    R_NULL          reduce using rule 26 (List_body -> List_body body .)
    R_NOW           reduce using rule 26 (List_body -> List_body body .)
    R_COUNT         reduce using rule 26 (List_body -> List_body body .)
    R_SUM           reduce using rule 26 (List_body -> List_body body .)
    R_PROM          reduce using rule 26 (List_body -> List_body body .)
    R_EXTRACT       reduce using rule 26 (List_body -> List_body body .)
    R_DATE_PART     reduce using rule 26 (List_body -> List_body body .)
    R_CURRENT_DATE  reduce using rule 26 (List_body -> List_body body .)
    R_CURRENT_TIME  reduce using rule 26 (List_body -> List_body body .)
    R_EXISTS        reduce using rule 26 (List_body -> List_body body .)
    R_TIMESTAMP     reduce using rule 26 (List_body -> List_body body .)
    R_INTERVAL      reduce using rule 26 (List_body -> List_body body .)
    R_END           reduce using rule 26 (List_body -> List_body body .)


state 559

    (20) else_ -> R_ELSE . List_body
    (26) List_body -> . List_body body
    (27) List_body -> . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt S_PUNTOCOMA
    (39) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) body -> . expresion S_PUNTOCOMA
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_CREATE        shift and go to state 448
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 432
    R_IF            shift and go to state 18
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    List_body                      shift and go to state 663
    body                           shift and go to state 435
    createStmt                     shift and go to state 436
    showStmt                       shift and go to state 437
    alterStmt                      shift and go to state 438
    dropStmt                       shift and go to state 439
    insertStmt                     shift and go to state 440
    updateStmt                     shift and go to state 441
    deleteStmt                     shift and go to state 442
    truncateStmt                   shift and go to state 443
    useStmt                        shift and go to state 444
    selectStmt                     shift and go to state 445
    functionStmt                   shift and go to state 446
    ifStmt                         shift and go to state 447
    expresion                      shift and go to state 433
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 560

    (21) else_ -> Lista_elsif_ .
    (23) Lista_elsif_ -> Lista_elsif_ . elsif_
    (25) elsif_ -> . R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body

    R_END           reduce using rule 21 (else_ -> Lista_elsif_ .)
    R_ELSIF         shift and go to state 562

    elsif_                         shift and go to state 664

state 561

    (24) Lista_elsif_ -> elsif_ .

    R_ELSIF         reduce using rule 24 (Lista_elsif_ -> elsif_ .)
    R_END           reduce using rule 24 (Lista_elsif_ -> elsif_ .)


state 562

    (25) elsif_ -> R_ELSIF . S_PARIZQ expresion S_PARDER R_THEN List_body

    S_PARIZQ        shift and go to state 665


state 563

    (28) body -> createStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    ID              reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    STRING          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)
    R_END           reduce using rule 28 (body -> createStmt S_PUNTOCOMA .)


state 564

    (29) body -> showStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    ID              reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    STRING          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)
    R_END           reduce using rule 29 (body -> showStmt S_PUNTOCOMA .)


state 565

    (30) body -> alterStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    ID              reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    STRING          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)
    R_END           reduce using rule 30 (body -> alterStmt S_PUNTOCOMA .)


state 566

    (31) body -> dropStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    ID              reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    STRING          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)
    R_END           reduce using rule 31 (body -> dropStmt S_PUNTOCOMA .)


state 567

    (32) body -> insertStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    ID              reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    STRING          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)
    R_END           reduce using rule 32 (body -> insertStmt S_PUNTOCOMA .)


state 568

    (33) body -> updateStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    ID              reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    STRING          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 33 (body -> updateStmt S_PUNTOCOMA .)


state 569

    (34) body -> deleteStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    ID              reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    STRING          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)
    R_END           reduce using rule 34 (body -> deleteStmt S_PUNTOCOMA .)


state 570

    (35) body -> truncateStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    ID              reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    STRING          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 35 (body -> truncateStmt S_PUNTOCOMA .)


state 571

    (36) body -> useStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    ID              reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    STRING          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)
    R_END           reduce using rule 36 (body -> useStmt S_PUNTOCOMA .)


state 572

    (37) body -> selectStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    ID              reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    STRING          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)
    R_END           reduce using rule 37 (body -> selectStmt S_PUNTOCOMA .)


state 573

    (38) body -> functionStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_CASE          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    O_RESTA         reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    O_SUMA          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_NOT           reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    ID              reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    INTEGER         reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    STRING          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    DECIMAL         reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    CHARACTER       reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_TRUE          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_FALSE         reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_NULL          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_NOW           reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_COUNT         reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_SUM           reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_PROM          reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)
    R_END           reduce using rule 38 (body -> functionStmt S_PUNTOCOMA .)


state 574

    (39) body -> ifStmt R_END . R_IF S_PUNTOCOMA

    R_IF            shift and go to state 666


state 575

    (58) createOpts -> orReplace . R_DATABASE ifNotExists idOrString createOwner createMode

    R_DATABASE      shift and go to state 134


state 576

    (96) types -> T_DOUBLE T_PRECISION .

    S_PARDER        reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    S_COMA          reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_AS            reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_DEFAULT       reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_NOT           reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_NULL          reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_PRIMARY       reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_REFERENCES    reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_CONSTRAINT    reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_UNIQUE        reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    R_CHECK         reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    S_PUNTOCOMA     reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    S_DOSPUNTOS     reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)
    S_IGUAL         reduce using rule 96 (types -> T_DOUBLE T_PRECISION .)


state 577

    (103) types -> T_DECIMAL optParams .

    S_PARDER        reduce using rule 103 (types -> T_DECIMAL optParams .)
    S_COMA          reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_AS            reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_DEFAULT       reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_NOT           reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_NULL          reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_PRIMARY       reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_REFERENCES    reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_CONSTRAINT    reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_UNIQUE        reduce using rule 103 (types -> T_DECIMAL optParams .)
    R_CHECK         reduce using rule 103 (types -> T_DECIMAL optParams .)
    S_PUNTOCOMA     reduce using rule 103 (types -> T_DECIMAL optParams .)
    S_DOSPUNTOS     reduce using rule 103 (types -> T_DECIMAL optParams .)
    S_IGUAL         reduce using rule 103 (types -> T_DECIMAL optParams .)


state 578

    (117) optParams -> S_PARIZQ . literalList S_PARDER
    (162) literalList -> . literalList S_COMA literal
    (163) literalList -> . literal
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL

    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107

    literalList                    shift and go to state 667
    literal                        shift and go to state 668

state 579

    (104) types -> T_NUMERIC optParams .

    S_PARDER        reduce using rule 104 (types -> T_NUMERIC optParams .)
    S_COMA          reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_AS            reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_DEFAULT       reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_NOT           reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_NULL          reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_PRIMARY       reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_REFERENCES    reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_CONSTRAINT    reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_UNIQUE        reduce using rule 104 (types -> T_NUMERIC optParams .)
    R_CHECK         reduce using rule 104 (types -> T_NUMERIC optParams .)
    S_PUNTOCOMA     reduce using rule 104 (types -> T_NUMERIC optParams .)
    S_DOSPUNTOS     reduce using rule 104 (types -> T_NUMERIC optParams .)
    S_IGUAL         reduce using rule 104 (types -> T_NUMERIC optParams .)


state 580

    (105) types -> T_VARCHAR optParams .

    S_PARDER        reduce using rule 105 (types -> T_VARCHAR optParams .)
    S_COMA          reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_AS            reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_DEFAULT       reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_NOT           reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_NULL          reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_PRIMARY       reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_REFERENCES    reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_CONSTRAINT    reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_UNIQUE        reduce using rule 105 (types -> T_VARCHAR optParams .)
    R_CHECK         reduce using rule 105 (types -> T_VARCHAR optParams .)
    S_PUNTOCOMA     reduce using rule 105 (types -> T_VARCHAR optParams .)
    S_DOSPUNTOS     reduce using rule 105 (types -> T_VARCHAR optParams .)
    S_IGUAL         reduce using rule 105 (types -> T_VARCHAR optParams .)


state 581

    (106) types -> T_CHARACTER optParams .

    S_PARDER        reduce using rule 106 (types -> T_CHARACTER optParams .)
    S_COMA          reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_AS            reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_DEFAULT       reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_NOT           reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_NULL          reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_PRIMARY       reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_REFERENCES    reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_CONSTRAINT    reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_UNIQUE        reduce using rule 106 (types -> T_CHARACTER optParams .)
    R_CHECK         reduce using rule 106 (types -> T_CHARACTER optParams .)
    S_PUNTOCOMA     reduce using rule 106 (types -> T_CHARACTER optParams .)
    S_DOSPUNTOS     reduce using rule 106 (types -> T_CHARACTER optParams .)
    S_IGUAL         reduce using rule 106 (types -> T_CHARACTER optParams .)


state 582

    (108) types -> T_CHARACTER T_VARYING . optParams
    (117) optParams -> . S_PARIZQ literalList S_PARDER
    (118) optParams -> .

    S_PARIZQ        shift and go to state 578
    S_PARDER        reduce using rule 118 (optParams -> .)
    S_COMA          reduce using rule 118 (optParams -> .)
    R_AS            reduce using rule 118 (optParams -> .)
    R_DEFAULT       reduce using rule 118 (optParams -> .)
    R_NOT           reduce using rule 118 (optParams -> .)
    R_NULL          reduce using rule 118 (optParams -> .)
    R_PRIMARY       reduce using rule 118 (optParams -> .)
    R_REFERENCES    reduce using rule 118 (optParams -> .)
    R_CONSTRAINT    reduce using rule 118 (optParams -> .)
    R_UNIQUE        reduce using rule 118 (optParams -> .)
    R_CHECK         reduce using rule 118 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 118 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 118 (optParams -> .)
    S_IGUAL         reduce using rule 118 (optParams -> .)

    optParams                      shift and go to state 669

state 583

    (107) types -> T_CHAR optParams .

    S_PARDER        reduce using rule 107 (types -> T_CHAR optParams .)
    S_COMA          reduce using rule 107 (types -> T_CHAR optParams .)
    R_AS            reduce using rule 107 (types -> T_CHAR optParams .)
    R_DEFAULT       reduce using rule 107 (types -> T_CHAR optParams .)
    R_NOT           reduce using rule 107 (types -> T_CHAR optParams .)
    R_NULL          reduce using rule 107 (types -> T_CHAR optParams .)
    R_PRIMARY       reduce using rule 107 (types -> T_CHAR optParams .)
    R_REFERENCES    reduce using rule 107 (types -> T_CHAR optParams .)
    R_CONSTRAINT    reduce using rule 107 (types -> T_CHAR optParams .)
    R_UNIQUE        reduce using rule 107 (types -> T_CHAR optParams .)
    R_CHECK         reduce using rule 107 (types -> T_CHAR optParams .)
    S_PUNTOCOMA     reduce using rule 107 (types -> T_CHAR optParams .)
    S_DOSPUNTOS     reduce using rule 107 (types -> T_CHAR optParams .)
    S_IGUAL         reduce using rule 107 (types -> T_CHAR optParams .)


state 584

    (109) types -> R_INTERVAL intervalFields .

    S_PARDER        reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    S_COMA          reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_AS            reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_DEFAULT       reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_NOT           reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_NULL          reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_PRIMARY       reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_REFERENCES    reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_CONSTRAINT    reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_UNIQUE        reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    R_CHECK         reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    S_PUNTOCOMA     reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    S_DOSPUNTOS     reduce using rule 109 (types -> R_INTERVAL intervalFields .)
    S_IGUAL         reduce using rule 109 (types -> R_INTERVAL intervalFields .)


state 585

    (110) intervalFields -> R_YEAR .

    S_PARDER        reduce using rule 110 (intervalFields -> R_YEAR .)
    S_COMA          reduce using rule 110 (intervalFields -> R_YEAR .)
    R_AS            reduce using rule 110 (intervalFields -> R_YEAR .)
    R_DEFAULT       reduce using rule 110 (intervalFields -> R_YEAR .)
    R_NOT           reduce using rule 110 (intervalFields -> R_YEAR .)
    R_NULL          reduce using rule 110 (intervalFields -> R_YEAR .)
    R_PRIMARY       reduce using rule 110 (intervalFields -> R_YEAR .)
    R_REFERENCES    reduce using rule 110 (intervalFields -> R_YEAR .)
    R_CONSTRAINT    reduce using rule 110 (intervalFields -> R_YEAR .)
    R_UNIQUE        reduce using rule 110 (intervalFields -> R_YEAR .)
    R_CHECK         reduce using rule 110 (intervalFields -> R_YEAR .)
    S_PUNTOCOMA     reduce using rule 110 (intervalFields -> R_YEAR .)
    S_DOSPUNTOS     reduce using rule 110 (intervalFields -> R_YEAR .)
    S_IGUAL         reduce using rule 110 (intervalFields -> R_YEAR .)


state 586

    (111) intervalFields -> R_MONTH .

    S_PARDER        reduce using rule 111 (intervalFields -> R_MONTH .)
    S_COMA          reduce using rule 111 (intervalFields -> R_MONTH .)
    R_AS            reduce using rule 111 (intervalFields -> R_MONTH .)
    R_DEFAULT       reduce using rule 111 (intervalFields -> R_MONTH .)
    R_NOT           reduce using rule 111 (intervalFields -> R_MONTH .)
    R_NULL          reduce using rule 111 (intervalFields -> R_MONTH .)
    R_PRIMARY       reduce using rule 111 (intervalFields -> R_MONTH .)
    R_REFERENCES    reduce using rule 111 (intervalFields -> R_MONTH .)
    R_CONSTRAINT    reduce using rule 111 (intervalFields -> R_MONTH .)
    R_UNIQUE        reduce using rule 111 (intervalFields -> R_MONTH .)
    R_CHECK         reduce using rule 111 (intervalFields -> R_MONTH .)
    S_PUNTOCOMA     reduce using rule 111 (intervalFields -> R_MONTH .)
    S_DOSPUNTOS     reduce using rule 111 (intervalFields -> R_MONTH .)
    S_IGUAL         reduce using rule 111 (intervalFields -> R_MONTH .)


state 587

    (112) intervalFields -> R_DAY .

    S_PARDER        reduce using rule 112 (intervalFields -> R_DAY .)
    S_COMA          reduce using rule 112 (intervalFields -> R_DAY .)
    R_AS            reduce using rule 112 (intervalFields -> R_DAY .)
    R_DEFAULT       reduce using rule 112 (intervalFields -> R_DAY .)
    R_NOT           reduce using rule 112 (intervalFields -> R_DAY .)
    R_NULL          reduce using rule 112 (intervalFields -> R_DAY .)
    R_PRIMARY       reduce using rule 112 (intervalFields -> R_DAY .)
    R_REFERENCES    reduce using rule 112 (intervalFields -> R_DAY .)
    R_CONSTRAINT    reduce using rule 112 (intervalFields -> R_DAY .)
    R_UNIQUE        reduce using rule 112 (intervalFields -> R_DAY .)
    R_CHECK         reduce using rule 112 (intervalFields -> R_DAY .)
    S_PUNTOCOMA     reduce using rule 112 (intervalFields -> R_DAY .)
    S_DOSPUNTOS     reduce using rule 112 (intervalFields -> R_DAY .)
    S_IGUAL         reduce using rule 112 (intervalFields -> R_DAY .)


state 588

    (113) intervalFields -> R_HOUR .

    S_PARDER        reduce using rule 113 (intervalFields -> R_HOUR .)
    S_COMA          reduce using rule 113 (intervalFields -> R_HOUR .)
    R_AS            reduce using rule 113 (intervalFields -> R_HOUR .)
    R_DEFAULT       reduce using rule 113 (intervalFields -> R_HOUR .)
    R_NOT           reduce using rule 113 (intervalFields -> R_HOUR .)
    R_NULL          reduce using rule 113 (intervalFields -> R_HOUR .)
    R_PRIMARY       reduce using rule 113 (intervalFields -> R_HOUR .)
    R_REFERENCES    reduce using rule 113 (intervalFields -> R_HOUR .)
    R_CONSTRAINT    reduce using rule 113 (intervalFields -> R_HOUR .)
    R_UNIQUE        reduce using rule 113 (intervalFields -> R_HOUR .)
    R_CHECK         reduce using rule 113 (intervalFields -> R_HOUR .)
    S_PUNTOCOMA     reduce using rule 113 (intervalFields -> R_HOUR .)
    S_DOSPUNTOS     reduce using rule 113 (intervalFields -> R_HOUR .)
    S_IGUAL         reduce using rule 113 (intervalFields -> R_HOUR .)


state 589

    (114) intervalFields -> R_MINUTE .

    S_PARDER        reduce using rule 114 (intervalFields -> R_MINUTE .)
    S_COMA          reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_AS            reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_DEFAULT       reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_NOT           reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_NULL          reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_PRIMARY       reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_REFERENCES    reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_CONSTRAINT    reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_UNIQUE        reduce using rule 114 (intervalFields -> R_MINUTE .)
    R_CHECK         reduce using rule 114 (intervalFields -> R_MINUTE .)
    S_PUNTOCOMA     reduce using rule 114 (intervalFields -> R_MINUTE .)
    S_DOSPUNTOS     reduce using rule 114 (intervalFields -> R_MINUTE .)
    S_IGUAL         reduce using rule 114 (intervalFields -> R_MINUTE .)


state 590

    (115) intervalFields -> R_SECOND .

    S_PARDER        reduce using rule 115 (intervalFields -> R_SECOND .)
    S_COMA          reduce using rule 115 (intervalFields -> R_SECOND .)
    R_AS            reduce using rule 115 (intervalFields -> R_SECOND .)
    R_DEFAULT       reduce using rule 115 (intervalFields -> R_SECOND .)
    R_NOT           reduce using rule 115 (intervalFields -> R_SECOND .)
    R_NULL          reduce using rule 115 (intervalFields -> R_SECOND .)
    R_PRIMARY       reduce using rule 115 (intervalFields -> R_SECOND .)
    R_REFERENCES    reduce using rule 115 (intervalFields -> R_SECOND .)
    R_CONSTRAINT    reduce using rule 115 (intervalFields -> R_SECOND .)
    R_UNIQUE        reduce using rule 115 (intervalFields -> R_SECOND .)
    R_CHECK         reduce using rule 115 (intervalFields -> R_SECOND .)
    S_PUNTOCOMA     reduce using rule 115 (intervalFields -> R_SECOND .)
    S_DOSPUNTOS     reduce using rule 115 (intervalFields -> R_SECOND .)
    S_IGUAL         reduce using rule 115 (intervalFields -> R_SECOND .)


state 591

    (396) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt . R_AS S_DOLAR S_DOLAR bloqueFunction

    R_AS            shift and go to state 670


state 592

    (399) params_list -> params_list S_COMA param_item .

    S_PARDER        reduce using rule 399 (params_list -> params_list S_COMA param_item .)
    S_COMA          reduce using rule 399 (params_list -> params_list S_COMA param_item .)


state 593

    (397) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS . S_DOLAR S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 671


state 594

    (402) returnsStmt -> R_RETURNS types .

    R_AS            reduce using rule 402 (returnsStmt -> R_RETURNS types .)


state 595

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER . languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (439) languageProcedure -> . R_LANGUAGE ID
    (440) languageProcedure -> .

    R_LANGUAGE      shift and go to state 597
    R_AS            reduce using rule 440 (languageProcedure -> .)

    languageProcedure              shift and go to state 672

state 596

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure . R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    R_AS            shift and go to state 673


state 597

    (439) languageProcedure -> R_LANGUAGE . ID

    ID              shift and go to state 674


state 598

    (58) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .

    S_PUNTOCOMA     reduce using rule 58 (createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .)


state 599

    (71) createMode -> R_MODE . INTEGER
    (72) createMode -> R_MODE . S_IGUAL INTEGER

    INTEGER         shift and go to state 675
    S_IGUAL         shift and go to state 676


state 600

    (66) createOwner -> R_OWNER ID .

    R_MODE          reduce using rule 66 (createOwner -> R_OWNER ID .)
    S_PUNTOCOMA     reduce using rule 66 (createOwner -> R_OWNER ID .)


state 601

    (67) createOwner -> R_OWNER STRING .

    R_MODE          reduce using rule 67 (createOwner -> R_OWNER STRING .)
    S_PUNTOCOMA     reduce using rule 67 (createOwner -> R_OWNER STRING .)


state 602

    (68) createOwner -> R_OWNER S_IGUAL . ID
    (69) createOwner -> R_OWNER S_IGUAL . STRING

    ID              shift and go to state 677
    STRING          shift and go to state 678


state 603

    (46) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index . S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    S_PARIZQ        shift and go to state 679


state 604

    (49) using_hash_index -> R_USING . R_HASH

    R_HASH          shift and go to state 680


state 605

    (57) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER . inheritsOpt
    (64) inheritsOpt -> . R_INHERITS S_PARIZQ ID S_PARDER
    (65) inheritsOpt -> .

    R_INHERITS      shift and go to state 682
    S_PUNTOCOMA     reduce using rule 65 (inheritsOpt -> .)

    inheritsOpt                    shift and go to state 681

state 606

    (74) createTableList -> createTableList S_COMA . createTable
    (76) createTable -> . ID types createColumns
    (77) createTable -> . createConstraint
    (78) createTable -> . createUnique
    (79) createTable -> . createPrimary
    (80) createTable -> . createForeign
    (83) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (84) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (85) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (86) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (87) constrName -> . R_CONSTRAINT ID
    (88) constrName -> .

    ID              shift and go to state 479
    R_UNIQUE        shift and go to state 485
    R_PRIMARY       shift and go to state 365
    R_CONSTRAINT    shift and go to state 366
    R_CHECK         reduce using rule 88 (constrName -> .)
    R_FOREIGN       reduce using rule 88 (constrName -> .)

    createTable                    shift and go to state 683
    createConstraint               shift and go to state 480
    createUnique                   shift and go to state 481
    createPrimary                  shift and go to state 482
    createForeign                  shift and go to state 483
    constrName                     shift and go to state 484

state 607

    (76) createTable -> ID types . createColumns
    (81) createColumns -> . colOptionsList
    (82) createColumns -> .
    (119) colOptionsList -> . colOptionsList colOptions
    (120) colOptionsList -> . colOptions
    (121) colOptions -> . defaultVal
    (122) colOptions -> . nullOpt
    (123) colOptions -> . constraintOpt
    (124) colOptions -> . primaryOpt
    (125) colOptions -> . referencesOpt
    (126) defaultVal -> . R_DEFAULT literal
    (127) nullOpt -> . R_NOT R_NULL
    (128) nullOpt -> . R_NULL
    (129) constraintOpt -> . constrName R_UNIQUE
    (130) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (131) primaryOpt -> . R_PRIMARY R_KEY
    (132) referencesOpt -> . R_REFERENCES ID
    (87) constrName -> . R_CONSTRAINT ID
    (88) constrName -> .

    S_PARDER        reduce using rule 82 (createColumns -> .)
    S_COMA          reduce using rule 82 (createColumns -> .)
    R_DEFAULT       shift and go to state 692
    R_NOT           shift and go to state 693
    R_NULL          shift and go to state 694
    R_PRIMARY       shift and go to state 696
    R_REFERENCES    shift and go to state 697
    R_CONSTRAINT    shift and go to state 366
    R_UNIQUE        reduce using rule 88 (constrName -> .)
    R_CHECK         reduce using rule 88 (constrName -> .)

    createColumns                  shift and go to state 684
    colOptionsList                 shift and go to state 685
    colOptions                     shift and go to state 686
    defaultVal                     shift and go to state 687
    nullOpt                        shift and go to state 688
    constraintOpt                  shift and go to state 689
    primaryOpt                     shift and go to state 690
    referencesOpt                  shift and go to state 691
    constrName                     shift and go to state 695

state 608

    (84) createUnique -> R_UNIQUE S_PARIZQ . idList S_PARDER
    (89) idList -> . idList S_COMA ID
    (90) idList -> . ID

    ID              shift and go to state 377

    idList                         shift and go to state 698

state 609

    (61) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ . paramsList S_PARDER
    (171) paramsList -> . paramsList S_COMA datatype
    (172) paramsList -> . datatype
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    S_PARIZQ        shift and go to state 204
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    paramsList                     shift and go to state 699
    datatype                       shift and go to state 278
    columnName                     shift and go to state 203
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    timeStamp                      shift and go to state 113

state 610

    (298) alterAlter -> R_COLUMN ID R_SET . nullOpt
    (299) alterAlter -> R_COLUMN ID R_SET . defaultVal
    (127) nullOpt -> . R_NOT R_NULL
    (128) nullOpt -> . R_NULL
    (126) defaultVal -> . R_DEFAULT literal

    R_NOT           shift and go to state 693
    R_NULL          shift and go to state 694
    R_DEFAULT       shift and go to state 692

    nullOpt                        shift and go to state 700
    defaultVal                     shift and go to state 701

state 611

    (300) alterAlter -> R_COLUMN ID R_TYPE . types
    (91) types -> . ID
    (92) types -> . T_SMALLINT
    (93) types -> . T_INTEGER
    (94) types -> . T_BIGINT
    (95) types -> . T_REAL
    (96) types -> . T_DOUBLE T_PRECISION
    (97) types -> . T_MONEY
    (98) types -> . T_TEXT
    (99) types -> . T_BOOLEAN
    (100) types -> . R_TIMESTAMP
    (101) types -> . T_DATE
    (102) types -> . T_TIME
    (103) types -> . T_DECIMAL optParams
    (104) types -> . T_NUMERIC optParams
    (105) types -> . T_VARCHAR optParams
    (106) types -> . T_CHARACTER optParams
    (107) types -> . T_CHAR optParams
    (108) types -> . T_CHARACTER T_VARYING optParams
    (109) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 449
    T_SMALLINT      shift and go to state 451
    T_INTEGER       shift and go to state 452
    T_BIGINT        shift and go to state 453
    T_REAL          shift and go to state 454
    T_DOUBLE        shift and go to state 455
    T_MONEY         shift and go to state 456
    T_TEXT          shift and go to state 457
    T_BOOLEAN       shift and go to state 458
    R_TIMESTAMP     shift and go to state 459
    T_DATE          shift and go to state 460
    T_TIME          shift and go to state 461
    T_DECIMAL       shift and go to state 462
    T_NUMERIC       shift and go to state 463
    T_VARCHAR       shift and go to state 464
    T_CHARACTER     shift and go to state 465
    T_CHAR          shift and go to state 466
    R_INTERVAL      shift and go to state 467

    types                          shift and go to state 702

state 612

    (293) alterAdd -> R_COLUMN ID types .

    S_COMA          reduce using rule 293 (alterAdd -> R_COLUMN ID types .)
    S_PUNTOCOMA     reduce using rule 293 (alterAdd -> R_COLUMN ID types .)


state 613

    (297) alterAdd -> constrName R_UNIQUE S_PARIZQ . ID S_PARDER

    ID              shift and go to state 703


state 614

    (83) createConstraint -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (262) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (263) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (264) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (265) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (266) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (267) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (268) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (269) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    booleanCheck                   shift and go to state 704
    idOrLiteral                    shift and go to state 705

state 615

    (86) createForeign -> constrName R_FOREIGN R_KEY . S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 713


state 616

    (85) createPrimary -> R_PRIMARY R_KEY S_PARIZQ . idList S_PARDER
    (89) idList -> . idList S_COMA ID
    (90) idList -> . ID

    ID              shift and go to state 377

    idList                         shift and go to state 714

state 617

    (303) alterRename -> R_COLUMN ID R_TO . ID

    ID              shift and go to state 715


state 618

    (279) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList .
    (89) idList -> idList . S_COMA ID

    S_PUNTOCOMA     reduce using rule 279 (alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList .)
    S_COMA          shift and go to state 508


state 619

    (379) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList . S_PARDER
    (171) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 716
    S_COMA          shift and go to state 395


state 620

    (89) idList -> idList S_COMA ID .

    S_PARDER        reduce using rule 89 (idList -> idList S_COMA ID .)
    S_COMA          reduce using rule 89 (idList -> idList S_COMA ID .)
    S_PUNTOCOMA     reduce using rule 89 (idList -> idList S_COMA ID .)
    R_DESC          reduce using rule 89 (idList -> idList S_COMA ID .)
    R_ASC           reduce using rule 89 (idList -> idList S_COMA ID .)
    R_NULLS         reduce using rule 89 (idList -> idList S_COMA ID .)


state 621

    (312) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (374) limitCl -> . R_LIMIT INTEGER offsetLimit
    (375) limitCl -> . R_LIMIT R_ALL offsetLimit
    (376) limitCl -> .

    R_LIMIT         shift and go to state 623
    S_PUNTOCOMA     reduce using rule 376 (limitCl -> .)
    R_UNION         reduce using rule 376 (limitCl -> .)
    R_INTERSECT     reduce using rule 376 (limitCl -> .)
    R_EXCEPT        reduce using rule 376 (limitCl -> .)
    S_PARDER        reduce using rule 376 (limitCl -> .)

    limitCl                        shift and go to state 717

state 622

    (313) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 313 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 313 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 313 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 313 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 313 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 623

    (374) limitCl -> R_LIMIT . INTEGER offsetLimit
    (375) limitCl -> R_LIMIT . R_ALL offsetLimit

    INTEGER         shift and go to state 718
    R_ALL           shift and go to state 719


state 624

    (362) orderByCl -> R_ORDER R_BY . orderList
    (364) orderList -> . orderList S_COMA orderByElem
    (365) orderList -> . orderByElem
    (366) orderByElem -> . columnName orderOpts orderNull
    (367) orderByElem -> . INTEGER orderOpts orderNull
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 723
    ID              shift and go to state 520

    orderList                      shift and go to state 720
    orderByElem                    shift and go to state 721
    columnName                     shift and go to state 722

state 625

    (354) groupByCl -> R_GROUP R_BY groupList . havingCl
    (356) groupList -> groupList . S_COMA columnName
    (357) groupList -> groupList . S_COMA INTEGER
    (360) havingCl -> . R_HAVING expBool
    (361) havingCl -> .

    S_COMA          shift and go to state 725
    R_HAVING        shift and go to state 726
    R_ORDER         reduce using rule 361 (havingCl -> .)
    R_LIMIT         reduce using rule 361 (havingCl -> .)
    S_PUNTOCOMA     reduce using rule 361 (havingCl -> .)
    R_UNION         reduce using rule 361 (havingCl -> .)
    R_INTERSECT     reduce using rule 361 (havingCl -> .)
    R_EXCEPT        reduce using rule 361 (havingCl -> .)
    S_PARDER        reduce using rule 361 (havingCl -> .)

    havingCl                       shift and go to state 724

state 626

    (358) groupList -> columnName .

    S_COMA          reduce using rule 358 (groupList -> columnName .)
    R_HAVING        reduce using rule 358 (groupList -> columnName .)
    R_ORDER         reduce using rule 358 (groupList -> columnName .)
    R_LIMIT         reduce using rule 358 (groupList -> columnName .)
    S_PUNTOCOMA     reduce using rule 358 (groupList -> columnName .)
    R_UNION         reduce using rule 358 (groupList -> columnName .)
    R_INTERSECT     reduce using rule 358 (groupList -> columnName .)
    R_EXCEPT        reduce using rule 358 (groupList -> columnName .)
    S_PARDER        reduce using rule 358 (groupList -> columnName .)


state 627

    (359) groupList -> INTEGER .

    S_COMA          reduce using rule 359 (groupList -> INTEGER .)
    R_HAVING        reduce using rule 359 (groupList -> INTEGER .)
    R_ORDER         reduce using rule 359 (groupList -> INTEGER .)
    R_LIMIT         reduce using rule 359 (groupList -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 359 (groupList -> INTEGER .)
    R_UNION         reduce using rule 359 (groupList -> INTEGER .)
    R_INTERSECT     reduce using rule 359 (groupList -> INTEGER .)
    R_EXCEPT        reduce using rule 359 (groupList -> INTEGER .)
    S_PARDER        reduce using rule 359 (groupList -> INTEGER .)


state 628

    (314) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl . limitCl
    (374) limitCl -> . R_LIMIT INTEGER offsetLimit
    (375) limitCl -> . R_LIMIT R_ALL offsetLimit
    (376) limitCl -> .

    R_LIMIT         shift and go to state 623
    S_PUNTOCOMA     reduce using rule 376 (limitCl -> .)
    R_UNION         reduce using rule 376 (limitCl -> .)
    R_INTERSECT     reduce using rule 376 (limitCl -> .)
    R_EXCEPT        reduce using rule 376 (limitCl -> .)
    S_PARDER        reduce using rule 376 (limitCl -> .)

    limitCl                        shift and go to state 727

state 629

    (315) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 315 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 315 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 315 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 315 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 315 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)


state 630

    (340) joinCl -> joinOpt R_JOIN columnName optAlias . R_ON expBool
    (341) joinCl -> joinOpt R_JOIN columnName optAlias . R_USING S_PARIZQ nameList S_PARDER

    R_ON            shift and go to state 728
    R_USING         shift and go to state 729


state 631

    (342) joinCl -> R_NATURAL joinOpt R_JOIN columnName . optAlias
    (330) optAlias -> . R_AS idOrString
    (331) optAlias -> . idOrString
    (332) optAlias -> .
    (41) idOrString -> . ID
    (42) idOrString -> . STRING
    (43) idOrString -> . CHARACTER

    R_AS            shift and go to state 160
    R_NATURAL       reduce using rule 332 (optAlias -> .)
    R_INNER         reduce using rule 332 (optAlias -> .)
    R_LEFT          reduce using rule 332 (optAlias -> .)
    R_RIGHT         reduce using rule 332 (optAlias -> .)
    R_FULL          reduce using rule 332 (optAlias -> .)
    R_WHERE         reduce using rule 332 (optAlias -> .)
    R_GROUP         reduce using rule 332 (optAlias -> .)
    R_ORDER         reduce using rule 332 (optAlias -> .)
    R_LIMIT         reduce using rule 332 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 332 (optAlias -> .)
    R_UNION         reduce using rule 332 (optAlias -> .)
    R_INTERSECT     reduce using rule 332 (optAlias -> .)
    R_EXCEPT        reduce using rule 332 (optAlias -> .)
    S_PARDER        reduce using rule 332 (optAlias -> .)
    ID              shift and go to state 143
    STRING          shift and go to state 144
    CHARACTER       shift and go to state 145

    optAlias                       shift and go to state 730
    idOrString                     shift and go to state 161

state 632

    (245) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 245 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)


state 633

    (204) expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .
    (223) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 204 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 731

state 634

    (216) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 216 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 635

    (217) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 217 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 636

    (218) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 218 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 637

    (219) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 219 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 638

    (221) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 221 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)


state 639

    (225) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 732


state 640

    (202) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .
    (226) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 733

state 641

    (228) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 734

state 642

    (232) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 735

state 643

    (234) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 736

state 644

    (236) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 737

state 645

    (227) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 738
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 646

    (231) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 739
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 647

    (233) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 740
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 648

    (235) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 741
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 649

    (222) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 742


state 650

    (205) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .
    (224) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (173) datatype -> datatype . O_SUMA datatype
    (174) datatype -> datatype . O_RESTA datatype
    (175) datatype -> datatype . O_PRODUCTO datatype
    (176) datatype -> datatype . O_DIVISION datatype
    (177) datatype -> datatype . O_EXPONENTE datatype
    (178) datatype -> datatype . O_MODULAR datatype
    (179) datatype -> datatype . OC_CONCATENAR datatype
    (240) subqValues -> . R_ALL
    (241) subqValues -> . R_ANY
    (242) subqValues -> . R_SOME

    R_AND           reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_OR            reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_IS            reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_AS            reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    ID              reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    STRING          reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    CHARACTER       reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_COMA          reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FROM          reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_UNION         reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PARDER        reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_GROUP         reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_ORDER         reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LIMIT         reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_THEN          reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_NATURAL       reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INNER         reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LEFT          reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_RIGHT         reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FULL          reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_WHERE         reduce using rule 205 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    O_SUMA          shift and go to state 174
    O_RESTA         shift and go to state 175
    O_PRODUCTO      shift and go to state 176
    O_DIVISION      shift and go to state 177
    O_EXPONENTE     shift and go to state 178
    O_MODULAR       shift and go to state 179
    OC_CONCATENAR   shift and go to state 180
    R_ALL           shift and go to state 291
    R_ANY           shift and go to state 292
    R_SOME          shift and go to state 293

    subqValues                     shift and go to state 743

state 651

    (229) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 229 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 652

    (230) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 230 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 653

    (220) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 220 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)


state 654

    (143) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .

    O_SUMA          reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_RESTA         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_PRODUCTO      reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_DIVISION      reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_EXPONENTE     reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_MODULAR       reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OC_CONCATENAR   reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IN            reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOT           reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORQUE     reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORQUE     reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_IGUAL         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_DISTINTODE   reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IS            reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_BETWEEN       reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ISNULL        reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOTNULL       reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_ESIGUAL      reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AS            reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    ID              reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    STRING          reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    CHARACTER       reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_COMA          reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FROM          reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PUNTOCOMA     reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_UNION         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INTERSECT     reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_EXCEPT        reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PARDER        reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AND           reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_OR            reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_GROUP         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ORDER         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LIMIT         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_THEN          reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NATURAL       reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INNER         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LEFT          reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_RIGHT         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FULL          reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_WHERE         reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ALL           reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ANY           reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_SOME          reduce using rule 143 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)


state 655

    (144) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .

    O_SUMA          reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_RESTA         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_PRODUCTO      reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_DIVISION      reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_EXPONENTE     reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_MODULAR       reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OC_CONCATENAR   reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IN            reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOT           reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORQUE     reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORQUE     reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_IGUAL         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_DISTINTODE   reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IS            reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_BETWEEN       reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ISNULL        reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOTNULL       reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_ESIGUAL      reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AS            reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    ID              reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    STRING          reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    CHARACTER       reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_COMA          reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FROM          reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PUNTOCOMA     reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_UNION         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INTERSECT     reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_EXCEPT        reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PARDER        reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AND           reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_OR            reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_GROUP         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ORDER         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LIMIT         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_THEN          reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NATURAL       reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INNER         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LEFT          reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_RIGHT         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FULL          reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_WHERE         reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ALL           reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ANY           reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_SOME          reduce using rule 144 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)


state 656

    (153) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .

    O_SUMA          reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_RESTA         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_PRODUCTO      reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_DIVISION      reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_EXPONENTE     reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_MODULAR       reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OC_CONCATENAR   reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IN            reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOT           reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORQUE     reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORQUE     reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_IGUAL         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_DISTINTODE   reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IS            reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_BETWEEN       reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ISNULL        reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOTNULL       reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_ESIGUAL      reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AS            reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    ID              reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    STRING          reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    CHARACTER       reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_COMA          reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FROM          reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PUNTOCOMA     reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_UNION         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INTERSECT     reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_EXCEPT        reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PARDER        reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AND           reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_OR            reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_GROUP         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ORDER         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LIMIT         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_THEN          reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NATURAL       reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INNER         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LEFT          reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_RIGHT         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FULL          reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_WHERE         reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ALL           reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ANY           reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_SOME          reduce using rule 153 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)


state 657

    (154) dateSource -> R_TIMESTAMP STRING .

    S_PARDER        reduce using rule 154 (dateSource -> R_TIMESTAMP STRING .)


state 658

    (155) dateSource -> T_DATE STRING .

    S_PARDER        reduce using rule 155 (dateSource -> T_DATE STRING .)


state 659

    (156) dateSource -> T_TIME STRING .

    S_PARDER        reduce using rule 156 (dateSource -> T_TIME STRING .)


state 660

    (157) dateSource -> R_INTERVAL STRING .

    S_PARDER        reduce using rule 157 (dateSource -> R_INTERVAL STRING .)


state 661

    (158) dateSource -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 744


state 662

    (319) selectStmt -> S_PARIZQ selectStmt S_PARDER .
    (135) expresion -> S_PARIZQ selectStmt S_PARDER .

  ! reduce/reduce conflict for S_PUNTOCOMA resolved using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 135 (expresion -> S_PARIZQ selectStmt S_PARDER .)

  ! S_PUNTOCOMA     [ reduce using rule 319 (selectStmt -> S_PARIZQ selectStmt S_PARDER .) ]


state 663

    (20) else_ -> R_ELSE List_body .
    (26) List_body -> List_body . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt S_PUNTOCOMA
    (39) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) body -> . expresion S_PUNTOCOMA
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_END           reduce using rule 20 (else_ -> R_ELSE List_body .)
    R_CREATE        shift and go to state 448
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 432
    R_IF            shift and go to state 18
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    body                           shift and go to state 558
    createStmt                     shift and go to state 436
    showStmt                       shift and go to state 437
    alterStmt                      shift and go to state 438
    dropStmt                       shift and go to state 439
    insertStmt                     shift and go to state 440
    updateStmt                     shift and go to state 441
    deleteStmt                     shift and go to state 442
    truncateStmt                   shift and go to state 443
    useStmt                        shift and go to state 444
    selectStmt                     shift and go to state 445
    functionStmt                   shift and go to state 446
    ifStmt                         shift and go to state 447
    expresion                      shift and go to state 433
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 664

    (23) Lista_elsif_ -> Lista_elsif_ elsif_ .

    R_ELSIF         reduce using rule 23 (Lista_elsif_ -> Lista_elsif_ elsif_ .)
    R_END           reduce using rule 23 (Lista_elsif_ -> Lista_elsif_ elsif_ .)


state 665

    (25) elsif_ -> R_ELSIF S_PARIZQ . expresion S_PARDER R_THEN List_body
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 745
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 666

    (39) body -> ifStmt R_END R_IF . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 746


state 667

    (117) optParams -> S_PARIZQ literalList . S_PARDER
    (162) literalList -> literalList . S_COMA literal

    S_PARDER        shift and go to state 747
    S_COMA          shift and go to state 748


state 668

    (163) literalList -> literal .

    S_PARDER        reduce using rule 163 (literalList -> literal .)
    S_COMA          reduce using rule 163 (literalList -> literal .)


state 669

    (108) types -> T_CHARACTER T_VARYING optParams .

    S_PARDER        reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    S_COMA          reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_AS            reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_DEFAULT       reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_NOT           reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_NULL          reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_PRIMARY       reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_REFERENCES    reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_CONSTRAINT    reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_UNIQUE        reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    R_CHECK         reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    S_PUNTOCOMA     reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    S_DOSPUNTOS     reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)
    S_IGUAL         reduce using rule 108 (types -> T_CHARACTER T_VARYING optParams .)


state 670

    (396) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS . S_DOLAR S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 749


state 671

    (397) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR . S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 750


state 672

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure . R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    R_AS            shift and go to state 751


state 673

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS . S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_DOLAR         shift and go to state 752


state 674

    (439) languageProcedure -> R_LANGUAGE ID .

    R_AS            reduce using rule 439 (languageProcedure -> R_LANGUAGE ID .)


state 675

    (71) createMode -> R_MODE INTEGER .

    S_PUNTOCOMA     reduce using rule 71 (createMode -> R_MODE INTEGER .)


state 676

    (72) createMode -> R_MODE S_IGUAL . INTEGER

    INTEGER         shift and go to state 753


state 677

    (68) createOwner -> R_OWNER S_IGUAL ID .

    R_MODE          reduce using rule 68 (createOwner -> R_OWNER S_IGUAL ID .)
    S_PUNTOCOMA     reduce using rule 68 (createOwner -> R_OWNER S_IGUAL ID .)


state 678

    (69) createOwner -> R_OWNER S_IGUAL STRING .

    R_MODE          reduce using rule 69 (createOwner -> R_OWNER S_IGUAL STRING .)
    S_PUNTOCOMA     reduce using rule 69 (createOwner -> R_OWNER S_IGUAL STRING .)


state 679

    (46) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ . idList indexasc_desc indexNullS S_PARDER whereCl
    (89) idList -> . idList S_COMA ID
    (90) idList -> . ID

    ID              shift and go to state 377

    idList                         shift and go to state 754

state 680

    (49) using_hash_index -> R_USING R_HASH .

    S_PARIZQ        reduce using rule 49 (using_hash_index -> R_USING R_HASH .)


state 681

    (57) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .

    S_PUNTOCOMA     reduce using rule 57 (createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .)


state 682

    (64) inheritsOpt -> R_INHERITS . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 755


state 683

    (74) createTableList -> createTableList S_COMA createTable .

    S_PARDER        reduce using rule 74 (createTableList -> createTableList S_COMA createTable .)
    S_COMA          reduce using rule 74 (createTableList -> createTableList S_COMA createTable .)


state 684

    (76) createTable -> ID types createColumns .

    S_PARDER        reduce using rule 76 (createTable -> ID types createColumns .)
    S_COMA          reduce using rule 76 (createTable -> ID types createColumns .)


state 685

    (81) createColumns -> colOptionsList .
    (119) colOptionsList -> colOptionsList . colOptions
    (121) colOptions -> . defaultVal
    (122) colOptions -> . nullOpt
    (123) colOptions -> . constraintOpt
    (124) colOptions -> . primaryOpt
    (125) colOptions -> . referencesOpt
    (126) defaultVal -> . R_DEFAULT literal
    (127) nullOpt -> . R_NOT R_NULL
    (128) nullOpt -> . R_NULL
    (129) constraintOpt -> . constrName R_UNIQUE
    (130) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (131) primaryOpt -> . R_PRIMARY R_KEY
    (132) referencesOpt -> . R_REFERENCES ID
    (87) constrName -> . R_CONSTRAINT ID
    (88) constrName -> .

    S_PARDER        reduce using rule 81 (createColumns -> colOptionsList .)
    S_COMA          reduce using rule 81 (createColumns -> colOptionsList .)
    R_DEFAULT       shift and go to state 692
    R_NOT           shift and go to state 693
    R_NULL          shift and go to state 694
    R_PRIMARY       shift and go to state 696
    R_REFERENCES    shift and go to state 697
    R_CONSTRAINT    shift and go to state 366
    R_UNIQUE        reduce using rule 88 (constrName -> .)
    R_CHECK         reduce using rule 88 (constrName -> .)

    colOptions                     shift and go to state 756
    defaultVal                     shift and go to state 687
    nullOpt                        shift and go to state 688
    constraintOpt                  shift and go to state 689
    primaryOpt                     shift and go to state 690
    referencesOpt                  shift and go to state 691
    constrName                     shift and go to state 695

state 686

    (120) colOptionsList -> colOptions .

    R_DEFAULT       reduce using rule 120 (colOptionsList -> colOptions .)
    R_NOT           reduce using rule 120 (colOptionsList -> colOptions .)
    R_NULL          reduce using rule 120 (colOptionsList -> colOptions .)
    R_PRIMARY       reduce using rule 120 (colOptionsList -> colOptions .)
    R_REFERENCES    reduce using rule 120 (colOptionsList -> colOptions .)
    R_CONSTRAINT    reduce using rule 120 (colOptionsList -> colOptions .)
    R_UNIQUE        reduce using rule 120 (colOptionsList -> colOptions .)
    R_CHECK         reduce using rule 120 (colOptionsList -> colOptions .)
    S_PARDER        reduce using rule 120 (colOptionsList -> colOptions .)
    S_COMA          reduce using rule 120 (colOptionsList -> colOptions .)


state 687

    (121) colOptions -> defaultVal .

    R_DEFAULT       reduce using rule 121 (colOptions -> defaultVal .)
    R_NOT           reduce using rule 121 (colOptions -> defaultVal .)
    R_NULL          reduce using rule 121 (colOptions -> defaultVal .)
    R_PRIMARY       reduce using rule 121 (colOptions -> defaultVal .)
    R_REFERENCES    reduce using rule 121 (colOptions -> defaultVal .)
    R_CONSTRAINT    reduce using rule 121 (colOptions -> defaultVal .)
    R_UNIQUE        reduce using rule 121 (colOptions -> defaultVal .)
    R_CHECK         reduce using rule 121 (colOptions -> defaultVal .)
    S_PARDER        reduce using rule 121 (colOptions -> defaultVal .)
    S_COMA          reduce using rule 121 (colOptions -> defaultVal .)


state 688

    (122) colOptions -> nullOpt .

    R_DEFAULT       reduce using rule 122 (colOptions -> nullOpt .)
    R_NOT           reduce using rule 122 (colOptions -> nullOpt .)
    R_NULL          reduce using rule 122 (colOptions -> nullOpt .)
    R_PRIMARY       reduce using rule 122 (colOptions -> nullOpt .)
    R_REFERENCES    reduce using rule 122 (colOptions -> nullOpt .)
    R_CONSTRAINT    reduce using rule 122 (colOptions -> nullOpt .)
    R_UNIQUE        reduce using rule 122 (colOptions -> nullOpt .)
    R_CHECK         reduce using rule 122 (colOptions -> nullOpt .)
    S_PARDER        reduce using rule 122 (colOptions -> nullOpt .)
    S_COMA          reduce using rule 122 (colOptions -> nullOpt .)


state 689

    (123) colOptions -> constraintOpt .

    R_DEFAULT       reduce using rule 123 (colOptions -> constraintOpt .)
    R_NOT           reduce using rule 123 (colOptions -> constraintOpt .)
    R_NULL          reduce using rule 123 (colOptions -> constraintOpt .)
    R_PRIMARY       reduce using rule 123 (colOptions -> constraintOpt .)
    R_REFERENCES    reduce using rule 123 (colOptions -> constraintOpt .)
    R_CONSTRAINT    reduce using rule 123 (colOptions -> constraintOpt .)
    R_UNIQUE        reduce using rule 123 (colOptions -> constraintOpt .)
    R_CHECK         reduce using rule 123 (colOptions -> constraintOpt .)
    S_PARDER        reduce using rule 123 (colOptions -> constraintOpt .)
    S_COMA          reduce using rule 123 (colOptions -> constraintOpt .)


state 690

    (124) colOptions -> primaryOpt .

    R_DEFAULT       reduce using rule 124 (colOptions -> primaryOpt .)
    R_NOT           reduce using rule 124 (colOptions -> primaryOpt .)
    R_NULL          reduce using rule 124 (colOptions -> primaryOpt .)
    R_PRIMARY       reduce using rule 124 (colOptions -> primaryOpt .)
    R_REFERENCES    reduce using rule 124 (colOptions -> primaryOpt .)
    R_CONSTRAINT    reduce using rule 124 (colOptions -> primaryOpt .)
    R_UNIQUE        reduce using rule 124 (colOptions -> primaryOpt .)
    R_CHECK         reduce using rule 124 (colOptions -> primaryOpt .)
    S_PARDER        reduce using rule 124 (colOptions -> primaryOpt .)
    S_COMA          reduce using rule 124 (colOptions -> primaryOpt .)


state 691

    (125) colOptions -> referencesOpt .

    R_DEFAULT       reduce using rule 125 (colOptions -> referencesOpt .)
    R_NOT           reduce using rule 125 (colOptions -> referencesOpt .)
    R_NULL          reduce using rule 125 (colOptions -> referencesOpt .)
    R_PRIMARY       reduce using rule 125 (colOptions -> referencesOpt .)
    R_REFERENCES    reduce using rule 125 (colOptions -> referencesOpt .)
    R_CONSTRAINT    reduce using rule 125 (colOptions -> referencesOpt .)
    R_UNIQUE        reduce using rule 125 (colOptions -> referencesOpt .)
    R_CHECK         reduce using rule 125 (colOptions -> referencesOpt .)
    S_PARDER        reduce using rule 125 (colOptions -> referencesOpt .)
    S_COMA          reduce using rule 125 (colOptions -> referencesOpt .)


state 692

    (126) defaultVal -> R_DEFAULT . literal
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL

    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107

    literal                        shift and go to state 757

state 693

    (127) nullOpt -> R_NOT . R_NULL

    R_NULL          shift and go to state 758


state 694

    (128) nullOpt -> R_NULL .

    R_DEFAULT       reduce using rule 128 (nullOpt -> R_NULL .)
    R_NOT           reduce using rule 128 (nullOpt -> R_NULL .)
    R_NULL          reduce using rule 128 (nullOpt -> R_NULL .)
    R_PRIMARY       reduce using rule 128 (nullOpt -> R_NULL .)
    R_REFERENCES    reduce using rule 128 (nullOpt -> R_NULL .)
    R_CONSTRAINT    reduce using rule 128 (nullOpt -> R_NULL .)
    R_UNIQUE        reduce using rule 128 (nullOpt -> R_NULL .)
    R_CHECK         reduce using rule 128 (nullOpt -> R_NULL .)
    S_PARDER        reduce using rule 128 (nullOpt -> R_NULL .)
    S_COMA          reduce using rule 128 (nullOpt -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 128 (nullOpt -> R_NULL .)


state 695

    (129) constraintOpt -> constrName . R_UNIQUE
    (130) constraintOpt -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER

    R_UNIQUE        shift and go to state 759
    R_CHECK         shift and go to state 760


state 696

    (131) primaryOpt -> R_PRIMARY . R_KEY

    R_KEY           shift and go to state 761


state 697

    (132) referencesOpt -> R_REFERENCES . ID

    ID              shift and go to state 762


state 698

    (84) createUnique -> R_UNIQUE S_PARIZQ idList . S_PARDER
    (89) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 763
    S_COMA          shift and go to state 508


state 699

    (61) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList . S_PARDER
    (171) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 764
    S_COMA          shift and go to state 395


state 700

    (298) alterAlter -> R_COLUMN ID R_SET nullOpt .

    S_COMA          reduce using rule 298 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
    S_PUNTOCOMA     reduce using rule 298 (alterAlter -> R_COLUMN ID R_SET nullOpt .)


state 701

    (299) alterAlter -> R_COLUMN ID R_SET defaultVal .

    S_COMA          reduce using rule 299 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
    S_PUNTOCOMA     reduce using rule 299 (alterAlter -> R_COLUMN ID R_SET defaultVal .)


state 702

    (300) alterAlter -> R_COLUMN ID R_TYPE types .

    S_COMA          reduce using rule 300 (alterAlter -> R_COLUMN ID R_TYPE types .)
    S_PUNTOCOMA     reduce using rule 300 (alterAlter -> R_COLUMN ID R_TYPE types .)


state 703

    (297) alterAdd -> constrName R_UNIQUE S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 765


state 704

    (83) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 766


state 705

    (262) booleanCheck -> idOrLiteral . OL_MENORQUE idOrLiteral
    (263) booleanCheck -> idOrLiteral . OL_MAYORQUE idOrLiteral
    (264) booleanCheck -> idOrLiteral . OL_MAYORIGUALQUE idOrLiteral
    (265) booleanCheck -> idOrLiteral . OL_MENORIGUALQUE idOrLiteral
    (266) booleanCheck -> idOrLiteral . S_IGUAL idOrLiteral
    (267) booleanCheck -> idOrLiteral . OL_DISTINTODE idOrLiteral
    (268) booleanCheck -> idOrLiteral . R_IS R_DISTINCT R_FROM idOrLiteral
    (269) booleanCheck -> idOrLiteral . R_IS R_NOT R_DISTINCT R_FROM idOrLiteral

    OL_MENORQUE     shift and go to state 767
    OL_MAYORQUE     shift and go to state 768
    OL_MAYORIGUALQUE shift and go to state 769
    OL_MENORIGUALQUE shift and go to state 770
    S_IGUAL         shift and go to state 771
    OL_DISTINTODE   shift and go to state 772
    R_IS            shift and go to state 773


state 706

    (270) idOrLiteral -> ID .

    OL_MENORQUE     reduce using rule 270 (idOrLiteral -> ID .)
    OL_MAYORQUE     reduce using rule 270 (idOrLiteral -> ID .)
    OL_MAYORIGUALQUE reduce using rule 270 (idOrLiteral -> ID .)
    OL_MENORIGUALQUE reduce using rule 270 (idOrLiteral -> ID .)
    S_IGUAL         reduce using rule 270 (idOrLiteral -> ID .)
    OL_DISTINTODE   reduce using rule 270 (idOrLiteral -> ID .)
    R_IS            reduce using rule 270 (idOrLiteral -> ID .)
    S_PARDER        reduce using rule 270 (idOrLiteral -> ID .)


state 707

    (271) idOrLiteral -> INTEGER .

    OL_MENORQUE     reduce using rule 271 (idOrLiteral -> INTEGER .)
    OL_MAYORQUE     reduce using rule 271 (idOrLiteral -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 271 (idOrLiteral -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 271 (idOrLiteral -> INTEGER .)
    S_IGUAL         reduce using rule 271 (idOrLiteral -> INTEGER .)
    OL_DISTINTODE   reduce using rule 271 (idOrLiteral -> INTEGER .)
    R_IS            reduce using rule 271 (idOrLiteral -> INTEGER .)
    S_PARDER        reduce using rule 271 (idOrLiteral -> INTEGER .)


state 708

    (272) idOrLiteral -> STRING .

    OL_MENORQUE     reduce using rule 272 (idOrLiteral -> STRING .)
    OL_MAYORQUE     reduce using rule 272 (idOrLiteral -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 272 (idOrLiteral -> STRING .)
    OL_MENORIGUALQUE reduce using rule 272 (idOrLiteral -> STRING .)
    S_IGUAL         reduce using rule 272 (idOrLiteral -> STRING .)
    OL_DISTINTODE   reduce using rule 272 (idOrLiteral -> STRING .)
    R_IS            reduce using rule 272 (idOrLiteral -> STRING .)
    S_PARDER        reduce using rule 272 (idOrLiteral -> STRING .)


state 709

    (273) idOrLiteral -> DECIMAL .

    OL_MENORQUE     reduce using rule 273 (idOrLiteral -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 273 (idOrLiteral -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 273 (idOrLiteral -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 273 (idOrLiteral -> DECIMAL .)
    S_IGUAL         reduce using rule 273 (idOrLiteral -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 273 (idOrLiteral -> DECIMAL .)
    R_IS            reduce using rule 273 (idOrLiteral -> DECIMAL .)
    S_PARDER        reduce using rule 273 (idOrLiteral -> DECIMAL .)


state 710

    (274) idOrLiteral -> CHARACTER .

    OL_MENORQUE     reduce using rule 274 (idOrLiteral -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 274 (idOrLiteral -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 274 (idOrLiteral -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 274 (idOrLiteral -> CHARACTER .)
    S_IGUAL         reduce using rule 274 (idOrLiteral -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 274 (idOrLiteral -> CHARACTER .)
    R_IS            reduce using rule 274 (idOrLiteral -> CHARACTER .)
    S_PARDER        reduce using rule 274 (idOrLiteral -> CHARACTER .)


state 711

    (275) idOrLiteral -> R_TRUE .

    OL_MENORQUE     reduce using rule 275 (idOrLiteral -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 275 (idOrLiteral -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 275 (idOrLiteral -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 275 (idOrLiteral -> R_TRUE .)
    S_IGUAL         reduce using rule 275 (idOrLiteral -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 275 (idOrLiteral -> R_TRUE .)
    R_IS            reduce using rule 275 (idOrLiteral -> R_TRUE .)
    S_PARDER        reduce using rule 275 (idOrLiteral -> R_TRUE .)


state 712

    (276) idOrLiteral -> R_FALSE .

    OL_MENORQUE     reduce using rule 276 (idOrLiteral -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 276 (idOrLiteral -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 276 (idOrLiteral -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 276 (idOrLiteral -> R_FALSE .)
    S_IGUAL         reduce using rule 276 (idOrLiteral -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 276 (idOrLiteral -> R_FALSE .)
    R_IS            reduce using rule 276 (idOrLiteral -> R_FALSE .)
    S_PARDER        reduce using rule 276 (idOrLiteral -> R_FALSE .)


state 713

    (86) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ . idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (89) idList -> . idList S_COMA ID
    (90) idList -> . ID

    ID              shift and go to state 377

    idList                         shift and go to state 774

state 714

    (85) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList . S_PARDER
    (89) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 775
    S_COMA          shift and go to state 508


state 715

    (303) alterRename -> R_COLUMN ID R_TO ID .

    S_COMA          reduce using rule 303 (alterRename -> R_COLUMN ID R_TO ID .)
    S_PUNTOCOMA     reduce using rule 303 (alterRename -> R_COLUMN ID R_TO ID .)


state 716

    (379) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 379 (insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .)


state 717

    (312) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 312 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 312 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 312 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 312 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 312 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 718

    (374) limitCl -> R_LIMIT INTEGER . offsetLimit
    (377) offsetLimit -> . R_OFFSET INTEGER
    (378) offsetLimit -> .

    R_OFFSET        shift and go to state 777
    S_PUNTOCOMA     reduce using rule 378 (offsetLimit -> .)
    R_UNION         reduce using rule 378 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 378 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 378 (offsetLimit -> .)
    S_PARDER        reduce using rule 378 (offsetLimit -> .)

    offsetLimit                    shift and go to state 776

state 719

    (375) limitCl -> R_LIMIT R_ALL . offsetLimit
    (377) offsetLimit -> . R_OFFSET INTEGER
    (378) offsetLimit -> .

    R_OFFSET        shift and go to state 777
    S_PUNTOCOMA     reduce using rule 378 (offsetLimit -> .)
    R_UNION         reduce using rule 378 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 378 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 378 (offsetLimit -> .)
    S_PARDER        reduce using rule 378 (offsetLimit -> .)

    offsetLimit                    shift and go to state 778

state 720

    (362) orderByCl -> R_ORDER R_BY orderList .
    (364) orderList -> orderList . S_COMA orderByElem

    R_LIMIT         reduce using rule 362 (orderByCl -> R_ORDER R_BY orderList .)
    S_PUNTOCOMA     reduce using rule 362 (orderByCl -> R_ORDER R_BY orderList .)
    R_UNION         reduce using rule 362 (orderByCl -> R_ORDER R_BY orderList .)
    R_INTERSECT     reduce using rule 362 (orderByCl -> R_ORDER R_BY orderList .)
    R_EXCEPT        reduce using rule 362 (orderByCl -> R_ORDER R_BY orderList .)
    S_PARDER        reduce using rule 362 (orderByCl -> R_ORDER R_BY orderList .)
    S_COMA          shift and go to state 779


state 721

    (365) orderList -> orderByElem .

    S_COMA          reduce using rule 365 (orderList -> orderByElem .)
    R_LIMIT         reduce using rule 365 (orderList -> orderByElem .)
    S_PUNTOCOMA     reduce using rule 365 (orderList -> orderByElem .)
    R_UNION         reduce using rule 365 (orderList -> orderByElem .)
    R_INTERSECT     reduce using rule 365 (orderList -> orderByElem .)
    R_EXCEPT        reduce using rule 365 (orderList -> orderByElem .)
    S_PARDER        reduce using rule 365 (orderList -> orderByElem .)


state 722

    (366) orderByElem -> columnName . orderOpts orderNull
    (368) orderOpts -> . R_ASC
    (369) orderOpts -> . R_DESC
    (370) orderOpts -> .

    R_ASC           shift and go to state 781
    R_DESC          shift and go to state 782
    R_NULL          reduce using rule 370 (orderOpts -> .)
    S_COMA          reduce using rule 370 (orderOpts -> .)
    R_LIMIT         reduce using rule 370 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 370 (orderOpts -> .)
    R_UNION         reduce using rule 370 (orderOpts -> .)
    R_INTERSECT     reduce using rule 370 (orderOpts -> .)
    R_EXCEPT        reduce using rule 370 (orderOpts -> .)
    S_PARDER        reduce using rule 370 (orderOpts -> .)

    orderOpts                      shift and go to state 780

state 723

    (367) orderByElem -> INTEGER . orderOpts orderNull
    (368) orderOpts -> . R_ASC
    (369) orderOpts -> . R_DESC
    (370) orderOpts -> .

    R_ASC           shift and go to state 781
    R_DESC          shift and go to state 782
    R_NULL          reduce using rule 370 (orderOpts -> .)
    S_COMA          reduce using rule 370 (orderOpts -> .)
    R_LIMIT         reduce using rule 370 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 370 (orderOpts -> .)
    R_UNION         reduce using rule 370 (orderOpts -> .)
    R_INTERSECT     reduce using rule 370 (orderOpts -> .)
    R_EXCEPT        reduce using rule 370 (orderOpts -> .)
    S_PARDER        reduce using rule 370 (orderOpts -> .)

    orderOpts                      shift and go to state 783

state 724

    (354) groupByCl -> R_GROUP R_BY groupList havingCl .

    R_ORDER         reduce using rule 354 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_LIMIT         reduce using rule 354 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PUNTOCOMA     reduce using rule 354 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_UNION         reduce using rule 354 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_INTERSECT     reduce using rule 354 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_EXCEPT        reduce using rule 354 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PARDER        reduce using rule 354 (groupByCl -> R_GROUP R_BY groupList havingCl .)


state 725

    (356) groupList -> groupList S_COMA . columnName
    (357) groupList -> groupList S_COMA . INTEGER
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 785
    ID              shift and go to state 520

    columnName                     shift and go to state 784

state 726

    (360) havingCl -> R_HAVING . expBool
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 99
    S_PARIZQ        shift and go to state 211
    R_EXISTS        shift and go to state 117
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expBool                        shift and go to state 786
    boolean                        shift and go to state 100
    datatype                       shift and go to state 212
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    stringExp                      shift and go to state 122
    timeStamp                      shift and go to state 113

state 727

    (314) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 314 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 314 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 314 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 314 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 314 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)


state 728

    (340) joinCl -> joinOpt R_JOIN columnName optAlias R_ON . expBool
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 99
    S_PARIZQ        shift and go to state 211
    R_EXISTS        shift and go to state 117
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    columnName                     shift and go to state 93
    expBool                        shift and go to state 787
    boolean                        shift and go to state 100
    datatype                       shift and go to state 212
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    stringExp                      shift and go to state 122
    timeStamp                      shift and go to state 113

state 729

    (341) joinCl -> joinOpt R_JOIN columnName optAlias R_USING . S_PARIZQ nameList S_PARDER

    S_PARIZQ        shift and go to state 788


state 730

    (342) joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .

    R_NATURAL       reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INNER         reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LEFT          reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_RIGHT         reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_FULL          reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_WHERE         reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_GROUP         reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_ORDER         reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LIMIT         reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PUNTOCOMA     reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_UNION         reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INTERSECT     reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_EXCEPT        reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PARDER        reduce using rule 342 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)


state 731

    (223) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 789


state 732

    (225) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 790

state 733

    (226) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 791


state 734

    (228) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 792
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 735

    (232) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 793
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 736

    (234) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 794
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 737

    (236) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 795
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 738

    (227) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 227 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 739

    (231) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 231 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 740

    (233) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 233 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)


state 741

    (235) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 235 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)


state 742

    (222) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 796

state 743

    (224) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 797


state 744

    (158) dateSource -> R_NOW S_PARIZQ S_PARDER .

    S_PARDER        reduce using rule 158 (dateSource -> R_NOW S_PARIZQ S_PARDER .)


state 745

    (25) elsif_ -> R_ELSIF S_PARIZQ expresion . S_PARDER R_THEN List_body

    S_PARDER        shift and go to state 798


state 746

    (39) body -> ifStmt R_END R_IF S_PUNTOCOMA .

    R_ELSE          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_CREATE        reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SHOW          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ALTER         reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DROP          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_INSERT        reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DELETE        reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_USE           reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SELECT        reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_IF            reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_CASE          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    O_RESTA         reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    O_SUMA          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_NOT           reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    ID              reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    INTEGER         reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    STRING          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    DECIMAL         reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    CHARACTER       reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_TRUE          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_FALSE         reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_NULL          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_NOW           reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_COUNT         reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SUM           reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_PROM          reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_EXTRACT       reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DATE_PART     reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_CURRENT_DATE  reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_CURRENT_TIME  reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_EXISTS        reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_TIMESTAMP     reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_INTERVAL      reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_END           reduce using rule 39 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)


state 747

    (117) optParams -> S_PARIZQ literalList S_PARDER .

    S_PARDER        reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_COMA          reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_AS            reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_DEFAULT       reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NOT           reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NULL          reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_PRIMARY       reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_REFERENCES    reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CONSTRAINT    reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_UNIQUE        reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CHECK         reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_DOSPUNTOS     reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_IGUAL         reduce using rule 117 (optParams -> S_PARIZQ literalList S_PARDER .)


state 748

    (162) literalList -> literalList S_COMA . literal
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL

    INTEGER         shift and go to state 101
    STRING          shift and go to state 205
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107

    literal                        shift and go to state 799

state 749

    (396) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR . S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 800


state 750

    (397) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR . bloqueFunction
    (398) bloqueFunction -> . declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
    (404) declareStmt -> . R_DECLARE declaracion_list
    (405) declareStmt -> .

    R_DECLARE       shift and go to state 803
    R_BEGIN         reduce using rule 405 (declareStmt -> .)

    bloqueFunction                 shift and go to state 801
    declareStmt                    shift and go to state 802

state 751

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS . S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_DOLAR         shift and go to state 804


state 752

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR . S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_DOLAR         shift and go to state 805


state 753

    (72) createMode -> R_MODE S_IGUAL INTEGER .

    S_PUNTOCOMA     reduce using rule 72 (createMode -> R_MODE S_IGUAL INTEGER .)


state 754

    (46) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList . indexasc_desc indexNullS S_PARDER whereCl
    (89) idList -> idList . S_COMA ID
    (54) indexasc_desc -> . R_DESC
    (55) indexasc_desc -> . R_ASC
    (56) indexasc_desc -> .

    S_COMA          shift and go to state 508
    R_DESC          shift and go to state 807
    R_ASC           shift and go to state 808
    R_NULLS         reduce using rule 56 (indexasc_desc -> .)
    S_PARDER        reduce using rule 56 (indexasc_desc -> .)

    indexasc_desc                  shift and go to state 806

state 755

    (64) inheritsOpt -> R_INHERITS S_PARIZQ . ID S_PARDER

    ID              shift and go to state 809


state 756

    (119) colOptionsList -> colOptionsList colOptions .

    R_DEFAULT       reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    R_NOT           reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    R_NULL          reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    R_PRIMARY       reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    R_REFERENCES    reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    R_CONSTRAINT    reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    R_UNIQUE        reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    R_CHECK         reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    S_PARDER        reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)
    S_COMA          reduce using rule 119 (colOptionsList -> colOptionsList colOptions .)


state 757

    (126) defaultVal -> R_DEFAULT literal .

    R_DEFAULT       reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    R_NOT           reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    R_NULL          reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    R_PRIMARY       reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    R_REFERENCES    reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    R_CONSTRAINT    reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    R_UNIQUE        reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    R_CHECK         reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    S_PARDER        reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    S_COMA          reduce using rule 126 (defaultVal -> R_DEFAULT literal .)
    S_PUNTOCOMA     reduce using rule 126 (defaultVal -> R_DEFAULT literal .)


state 758

    (127) nullOpt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    R_NOT           reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    R_NULL          reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    R_PRIMARY       reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    R_REFERENCES    reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    R_CONSTRAINT    reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    R_UNIQUE        reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    R_CHECK         reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    S_PARDER        reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    S_COMA          reduce using rule 127 (nullOpt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 127 (nullOpt -> R_NOT R_NULL .)


state 759

    (129) constraintOpt -> constrName R_UNIQUE .

    R_DEFAULT       reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    R_NOT           reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    R_NULL          reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    R_PRIMARY       reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    R_REFERENCES    reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    R_CONSTRAINT    reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    R_UNIQUE        reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    R_CHECK         reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    S_PARDER        reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)
    S_COMA          reduce using rule 129 (constraintOpt -> constrName R_UNIQUE .)


state 760

    (130) constraintOpt -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 810


state 761

    (131) primaryOpt -> R_PRIMARY R_KEY .

    R_DEFAULT       reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NOT           reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NULL          reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    R_PRIMARY       reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    R_REFERENCES    reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CONSTRAINT    reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    R_UNIQUE        reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CHECK         reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    S_PARDER        reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)
    S_COMA          reduce using rule 131 (primaryOpt -> R_PRIMARY R_KEY .)


state 762

    (132) referencesOpt -> R_REFERENCES ID .

    R_DEFAULT       reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    R_NOT           reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    R_NULL          reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    R_PRIMARY       reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    R_REFERENCES    reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    R_CONSTRAINT    reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    R_UNIQUE        reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    R_CHECK         reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    S_PARDER        reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)
    S_COMA          reduce using rule 132 (referencesOpt -> R_REFERENCES ID .)


state 763

    (84) createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .

    S_PARDER        reduce using rule 84 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
    S_COMA          reduce using rule 84 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)


state 764

    (61) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 61 (createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .)


state 765

    (297) alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .

    S_COMA          reduce using rule 297 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
    S_PUNTOCOMA     reduce using rule 297 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)


state 766

    (83) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    S_COMA          reduce using rule 83 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PUNTOCOMA     reduce using rule 83 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 83 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 767

    (262) booleanCheck -> idOrLiteral OL_MENORQUE . idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    idOrLiteral                    shift and go to state 811

state 768

    (263) booleanCheck -> idOrLiteral OL_MAYORQUE . idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    idOrLiteral                    shift and go to state 812

state 769

    (264) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE . idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    idOrLiteral                    shift and go to state 813

state 770

    (265) booleanCheck -> idOrLiteral OL_MENORIGUALQUE . idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    idOrLiteral                    shift and go to state 814

state 771

    (266) booleanCheck -> idOrLiteral S_IGUAL . idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    idOrLiteral                    shift and go to state 815

state 772

    (267) booleanCheck -> idOrLiteral OL_DISTINTODE . idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    idOrLiteral                    shift and go to state 816

state 773

    (268) booleanCheck -> idOrLiteral R_IS . R_DISTINCT R_FROM idOrLiteral
    (269) booleanCheck -> idOrLiteral R_IS . R_NOT R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 817
    R_NOT           shift and go to state 818


state 774

    (86) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList . S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (89) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 819
    S_COMA          shift and go to state 508


state 775

    (85) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 85 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 85 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 85 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)


state 776

    (374) limitCl -> R_LIMIT INTEGER offsetLimit .

    S_PUNTOCOMA     reduce using rule 374 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_UNION         reduce using rule 374 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_INTERSECT     reduce using rule 374 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_EXCEPT        reduce using rule 374 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    S_PARDER        reduce using rule 374 (limitCl -> R_LIMIT INTEGER offsetLimit .)


state 777

    (377) offsetLimit -> R_OFFSET . INTEGER

    INTEGER         shift and go to state 820


state 778

    (375) limitCl -> R_LIMIT R_ALL offsetLimit .

    S_PUNTOCOMA     reduce using rule 375 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_UNION         reduce using rule 375 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_INTERSECT     reduce using rule 375 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_EXCEPT        reduce using rule 375 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    S_PARDER        reduce using rule 375 (limitCl -> R_LIMIT R_ALL offsetLimit .)


state 779

    (364) orderList -> orderList S_COMA . orderByElem
    (366) orderByElem -> . columnName orderOpts orderNull
    (367) orderByElem -> . INTEGER orderOpts orderNull
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 723
    ID              shift and go to state 520

    orderByElem                    shift and go to state 821
    columnName                     shift and go to state 722

state 780

    (366) orderByElem -> columnName orderOpts . orderNull
    (371) orderNull -> . R_NULL R_FIRST
    (372) orderNull -> . R_NULL R_LAST
    (373) orderNull -> .

    R_NULL          shift and go to state 823
    S_COMA          reduce using rule 373 (orderNull -> .)
    R_LIMIT         reduce using rule 373 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 373 (orderNull -> .)
    R_UNION         reduce using rule 373 (orderNull -> .)
    R_INTERSECT     reduce using rule 373 (orderNull -> .)
    R_EXCEPT        reduce using rule 373 (orderNull -> .)
    S_PARDER        reduce using rule 373 (orderNull -> .)

    orderNull                      shift and go to state 822

state 781

    (368) orderOpts -> R_ASC .

    R_NULL          reduce using rule 368 (orderOpts -> R_ASC .)
    S_COMA          reduce using rule 368 (orderOpts -> R_ASC .)
    R_LIMIT         reduce using rule 368 (orderOpts -> R_ASC .)
    S_PUNTOCOMA     reduce using rule 368 (orderOpts -> R_ASC .)
    R_UNION         reduce using rule 368 (orderOpts -> R_ASC .)
    R_INTERSECT     reduce using rule 368 (orderOpts -> R_ASC .)
    R_EXCEPT        reduce using rule 368 (orderOpts -> R_ASC .)
    S_PARDER        reduce using rule 368 (orderOpts -> R_ASC .)


state 782

    (369) orderOpts -> R_DESC .

    R_NULL          reduce using rule 369 (orderOpts -> R_DESC .)
    S_COMA          reduce using rule 369 (orderOpts -> R_DESC .)
    R_LIMIT         reduce using rule 369 (orderOpts -> R_DESC .)
    S_PUNTOCOMA     reduce using rule 369 (orderOpts -> R_DESC .)
    R_UNION         reduce using rule 369 (orderOpts -> R_DESC .)
    R_INTERSECT     reduce using rule 369 (orderOpts -> R_DESC .)
    R_EXCEPT        reduce using rule 369 (orderOpts -> R_DESC .)
    S_PARDER        reduce using rule 369 (orderOpts -> R_DESC .)


state 783

    (367) orderByElem -> INTEGER orderOpts . orderNull
    (371) orderNull -> . R_NULL R_FIRST
    (372) orderNull -> . R_NULL R_LAST
    (373) orderNull -> .

    R_NULL          shift and go to state 823
    S_COMA          reduce using rule 373 (orderNull -> .)
    R_LIMIT         reduce using rule 373 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 373 (orderNull -> .)
    R_UNION         reduce using rule 373 (orderNull -> .)
    R_INTERSECT     reduce using rule 373 (orderNull -> .)
    R_EXCEPT        reduce using rule 373 (orderNull -> .)
    S_PARDER        reduce using rule 373 (orderNull -> .)

    orderNull                      shift and go to state 824

state 784

    (356) groupList -> groupList S_COMA columnName .

    S_COMA          reduce using rule 356 (groupList -> groupList S_COMA columnName .)
    R_HAVING        reduce using rule 356 (groupList -> groupList S_COMA columnName .)
    R_ORDER         reduce using rule 356 (groupList -> groupList S_COMA columnName .)
    R_LIMIT         reduce using rule 356 (groupList -> groupList S_COMA columnName .)
    S_PUNTOCOMA     reduce using rule 356 (groupList -> groupList S_COMA columnName .)
    R_UNION         reduce using rule 356 (groupList -> groupList S_COMA columnName .)
    R_INTERSECT     reduce using rule 356 (groupList -> groupList S_COMA columnName .)
    R_EXCEPT        reduce using rule 356 (groupList -> groupList S_COMA columnName .)
    S_PARDER        reduce using rule 356 (groupList -> groupList S_COMA columnName .)


state 785

    (357) groupList -> groupList S_COMA INTEGER .

    S_COMA          reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)
    R_HAVING        reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)
    R_ORDER         reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)
    R_LIMIT         reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)
    S_PUNTOCOMA     reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)
    R_UNION         reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)
    R_INTERSECT     reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)
    R_EXCEPT        reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)
    S_PARDER        reduce using rule 357 (groupList -> groupList S_COMA INTEGER .)


state 786

    (360) havingCl -> R_HAVING expBool .
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_ORDER         reduce using rule 360 (havingCl -> R_HAVING expBool .)
    R_LIMIT         reduce using rule 360 (havingCl -> R_HAVING expBool .)
    S_PUNTOCOMA     reduce using rule 360 (havingCl -> R_HAVING expBool .)
    R_UNION         reduce using rule 360 (havingCl -> R_HAVING expBool .)
    R_INTERSECT     reduce using rule 360 (havingCl -> R_HAVING expBool .)
    R_EXCEPT        reduce using rule 360 (havingCl -> R_HAVING expBool .)
    S_PARDER        reduce using rule 360 (havingCl -> R_HAVING expBool .)
    R_AND           shift and go to state 194
    R_OR            shift and go to state 195
    R_IS            shift and go to state 197

    optBoolPredicate               shift and go to state 196

state 787

    (340) joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .
    (248) expBool -> expBool . R_AND expBool
    (249) expBool -> expBool . R_OR expBool
    (252) expBool -> expBool . optBoolPredicate
    (254) optBoolPredicate -> . R_IS R_TRUE
    (255) optBoolPredicate -> . R_IS R_FALSE
    (256) optBoolPredicate -> . R_IS R_UNKNOWN
    (257) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (258) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (259) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_NATURAL       reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INNER         reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LEFT          reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_RIGHT         reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_FULL          reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_WHERE         reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_GROUP         reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_ORDER         reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LIMIT         reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PUNTOCOMA     reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_UNION         reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INTERSECT     reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_EXCEPT        reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PARDER        reduce using rule 340 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_AND           shift and go to state 194
    R_OR            shift and go to state 195
    R_IS            shift and go to state 197

    optBoolPredicate               shift and go to state 196

state 788

    (341) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ . nameList S_PARDER
    (343) nameList -> . nameList S_COMA columnName
    (344) nameList -> . columnName
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 520

    columnName                     shift and go to state 825
    nameList                       shift and go to state 826

state 789

    (223) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 827

state 790

    (225) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 828
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 791

    (226) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 829

state 792

    (228) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 793

    (232) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 794

    (234) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 234 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)


state 795

    (236) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 236 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)


state 796

    (222) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 830
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 797

    (224) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24

    selectStmt                     shift and go to state 831

state 798

    (25) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER . R_THEN List_body

    R_THEN          shift and go to state 832


state 799

    (162) literalList -> literalList S_COMA literal .

    S_PARDER        reduce using rule 162 (literalList -> literalList S_COMA literal .)
    S_COMA          reduce using rule 162 (literalList -> literalList S_COMA literal .)


state 800

    (396) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR . bloqueFunction
    (398) bloqueFunction -> . declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
    (404) declareStmt -> . R_DECLARE declaracion_list
    (405) declareStmt -> .

    R_DECLARE       shift and go to state 803
    R_BEGIN         reduce using rule 405 (declareStmt -> .)

    bloqueFunction                 shift and go to state 833
    declareStmt                    shift and go to state 802

state 801

    (397) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .

    R_CREATE        reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SHOW          reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ALTER         reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DROP          reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_INSERT        reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_UPDATE        reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DELETE        reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_TRUNCATE      reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_USE           reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SELECT        reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_PARIZQ        reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_EXECUTE       reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_IF            reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    ID              reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    $end            reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_PUNTOCOMA     reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_END           reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_RETURN        reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_DOLAR         reduce using rule 397 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)


state 802

    (398) bloqueFunction -> declareStmt . R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd

    R_BEGIN         shift and go to state 834


state 803

    (404) declareStmt -> R_DECLARE . declaracion_list
    (406) declaracion_list -> . declaracion_list declaracion_item
    (407) declaracion_list -> . declaracion_item
    (408) declaracion_item -> . ID constant_opt types null_opt default_item S_PUNTOCOMA
    (409) declaracion_item -> . ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA

    ID              shift and go to state 837

    declaracion_list               shift and go to state 835
    declaracion_item               shift and go to state 836

state 804

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR . S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure

    S_DOLAR         shift and go to state 838


state 805

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR . beginWord beginStmt endProcedure dolarEndProcedure
    (437) beginWord -> .
    (438) beginWord -> . R_BEGIN

    R_RETURN        reduce using rule 437 (beginWord -> .)
    ID              reduce using rule 437 (beginWord -> .)
    R_CREATE        reduce using rule 437 (beginWord -> .)
    R_SHOW          reduce using rule 437 (beginWord -> .)
    R_ALTER         reduce using rule 437 (beginWord -> .)
    R_DROP          reduce using rule 437 (beginWord -> .)
    R_INSERT        reduce using rule 437 (beginWord -> .)
    R_UPDATE        reduce using rule 437 (beginWord -> .)
    R_DELETE        reduce using rule 437 (beginWord -> .)
    R_TRUNCATE      reduce using rule 437 (beginWord -> .)
    R_USE           reduce using rule 437 (beginWord -> .)
    R_SELECT        reduce using rule 437 (beginWord -> .)
    S_PARIZQ        reduce using rule 437 (beginWord -> .)
    R_EXECUTE       reduce using rule 437 (beginWord -> .)
    R_IF            reduce using rule 437 (beginWord -> .)
    R_BEGIN         shift and go to state 840

    beginWord                      shift and go to state 839

state 806

    (46) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc . indexNullS S_PARDER whereCl
    (51) indexNullS -> . R_NULLS R_FIRST
    (52) indexNullS -> . R_NULLS R_LAST
    (53) indexNullS -> .

    R_NULLS         shift and go to state 842
    S_PARDER        reduce using rule 53 (indexNullS -> .)

    indexNullS                     shift and go to state 841

state 807

    (54) indexasc_desc -> R_DESC .

    R_NULLS         reduce using rule 54 (indexasc_desc -> R_DESC .)
    S_PARDER        reduce using rule 54 (indexasc_desc -> R_DESC .)


state 808

    (55) indexasc_desc -> R_ASC .

    R_NULLS         reduce using rule 55 (indexasc_desc -> R_ASC .)
    S_PARDER        reduce using rule 55 (indexasc_desc -> R_ASC .)


state 809

    (64) inheritsOpt -> R_INHERITS S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 843


state 810

    (130) constraintOpt -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (262) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (263) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (264) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (265) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (266) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (267) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (268) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (269) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    booleanCheck                   shift and go to state 844
    idOrLiteral                    shift and go to state 705

state 811

    (262) booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .

    S_PARDER        reduce using rule 262 (booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .)


state 812

    (263) booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .

    S_PARDER        reduce using rule 263 (booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .)


state 813

    (264) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 264 (booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .)


state 814

    (265) booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 265 (booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .)


state 815

    (266) booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .

    S_PARDER        reduce using rule 266 (booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .)


state 816

    (267) booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .

    S_PARDER        reduce using rule 267 (booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .)


state 817

    (268) booleanCheck -> idOrLiteral R_IS R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 845


state 818

    (269) booleanCheck -> idOrLiteral R_IS R_NOT . R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 846


state 819

    (86) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER . R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_REFERENCES    shift and go to state 847


state 820

    (377) offsetLimit -> R_OFFSET INTEGER .

    S_PUNTOCOMA     reduce using rule 377 (offsetLimit -> R_OFFSET INTEGER .)
    R_UNION         reduce using rule 377 (offsetLimit -> R_OFFSET INTEGER .)
    R_INTERSECT     reduce using rule 377 (offsetLimit -> R_OFFSET INTEGER .)
    R_EXCEPT        reduce using rule 377 (offsetLimit -> R_OFFSET INTEGER .)
    S_PARDER        reduce using rule 377 (offsetLimit -> R_OFFSET INTEGER .)


state 821

    (364) orderList -> orderList S_COMA orderByElem .

    S_COMA          reduce using rule 364 (orderList -> orderList S_COMA orderByElem .)
    R_LIMIT         reduce using rule 364 (orderList -> orderList S_COMA orderByElem .)
    S_PUNTOCOMA     reduce using rule 364 (orderList -> orderList S_COMA orderByElem .)
    R_UNION         reduce using rule 364 (orderList -> orderList S_COMA orderByElem .)
    R_INTERSECT     reduce using rule 364 (orderList -> orderList S_COMA orderByElem .)
    R_EXCEPT        reduce using rule 364 (orderList -> orderList S_COMA orderByElem .)
    S_PARDER        reduce using rule 364 (orderList -> orderList S_COMA orderByElem .)


state 822

    (366) orderByElem -> columnName orderOpts orderNull .

    S_COMA          reduce using rule 366 (orderByElem -> columnName orderOpts orderNull .)
    R_LIMIT         reduce using rule 366 (orderByElem -> columnName orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 366 (orderByElem -> columnName orderOpts orderNull .)
    R_UNION         reduce using rule 366 (orderByElem -> columnName orderOpts orderNull .)
    R_INTERSECT     reduce using rule 366 (orderByElem -> columnName orderOpts orderNull .)
    R_EXCEPT        reduce using rule 366 (orderByElem -> columnName orderOpts orderNull .)
    S_PARDER        reduce using rule 366 (orderByElem -> columnName orderOpts orderNull .)


state 823

    (371) orderNull -> R_NULL . R_FIRST
    (372) orderNull -> R_NULL . R_LAST

    R_FIRST         shift and go to state 848
    R_LAST          shift and go to state 849


state 824

    (367) orderByElem -> INTEGER orderOpts orderNull .

    S_COMA          reduce using rule 367 (orderByElem -> INTEGER orderOpts orderNull .)
    R_LIMIT         reduce using rule 367 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 367 (orderByElem -> INTEGER orderOpts orderNull .)
    R_UNION         reduce using rule 367 (orderByElem -> INTEGER orderOpts orderNull .)
    R_INTERSECT     reduce using rule 367 (orderByElem -> INTEGER orderOpts orderNull .)
    R_EXCEPT        reduce using rule 367 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PARDER        reduce using rule 367 (orderByElem -> INTEGER orderOpts orderNull .)


state 825

    (344) nameList -> columnName .

    S_PARDER        reduce using rule 344 (nameList -> columnName .)
    S_COMA          reduce using rule 344 (nameList -> columnName .)


state 826

    (341) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList . S_PARDER
    (343) nameList -> nameList . S_COMA columnName

    S_PARDER        shift and go to state 850
    S_COMA          shift and go to state 851


state 827

    (223) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 852
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 828

    (225) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 225 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 829

    (226) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 853
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 830

    (222) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 222 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 831

    (224) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (316) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (317) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (318) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 854
    R_UNION         shift and go to state 44
    R_INTERSECT     shift and go to state 45
    R_EXCEPT        shift and go to state 46


state 832

    (25) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN . List_body
    (26) List_body -> . List_body body
    (27) List_body -> . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt S_PUNTOCOMA
    (39) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) body -> . expresion S_PUNTOCOMA
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_CREATE        shift and go to state 448
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 432
    R_IF            shift and go to state 18
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 433
    List_body                      shift and go to state 855
    body                           shift and go to state 435
    createStmt                     shift and go to state 436
    showStmt                       shift and go to state 437
    alterStmt                      shift and go to state 438
    dropStmt                       shift and go to state 439
    insertStmt                     shift and go to state 440
    updateStmt                     shift and go to state 441
    deleteStmt                     shift and go to state 442
    truncateStmt                   shift and go to state 443
    useStmt                        shift and go to state 444
    selectStmt                     shift and go to state 445
    functionStmt                   shift and go to state 446
    ifStmt                         shift and go to state 447
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 833

    (396) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .

    R_CREATE        reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SHOW          reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ALTER         reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DROP          reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_INSERT        reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_UPDATE        reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DELETE        reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_TRUNCATE      reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_USE           reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SELECT        reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_PARIZQ        reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_EXECUTE       reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_IF            reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    ID              reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    $end            reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_PUNTOCOMA     reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_END           reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_RETURN        reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_DOLAR         reduce using rule 396 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)


state 834

    (398) bloqueFunction -> declareStmt R_BEGIN . beginStmt R_END S_PUNTOCOMA labelEnd
    (421) beginStmt -> . beginStmt beginItem
    (422) beginStmt -> . beginItem
    (423) beginItem -> . stmt
    (424) beginItem -> . returnStmt S_PUNTOCOMA
    (425) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (426) returnStmt -> . R_RETURN expresion
    (429) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> . ID S_IGUAL expresion
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (441) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_RETURN        shift and go to state 861
    ID              shift and go to state 26
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

    beginStmt                      shift and go to state 856
    beginItem                      shift and go to state 857
    stmt                           shift and go to state 858
    returnStmt                     shift and go to state 859
    asignacionStmt                 shift and go to state 860
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 835

    (404) declareStmt -> R_DECLARE declaracion_list .
    (406) declaracion_list -> declaracion_list . declaracion_item
    (408) declaracion_item -> . ID constant_opt types null_opt default_item S_PUNTOCOMA
    (409) declaracion_item -> . ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA

    R_BEGIN         reduce using rule 404 (declareStmt -> R_DECLARE declaracion_list .)
    ID              shift and go to state 837

    declaracion_item               shift and go to state 862

state 836

    (407) declaracion_list -> declaracion_item .

    ID              reduce using rule 407 (declaracion_list -> declaracion_item .)
    R_BEGIN         reduce using rule 407 (declaracion_list -> declaracion_item .)


state 837

    (408) declaracion_item -> ID . constant_opt types null_opt default_item S_PUNTOCOMA
    (409) declaracion_item -> ID . R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA
    (410) constant_opt -> . R_CONSTANT
    (411) constant_opt -> .

    R_ALIAS         shift and go to state 864
    R_CONSTANT      shift and go to state 865
    ID              reduce using rule 411 (constant_opt -> .)
    T_SMALLINT      reduce using rule 411 (constant_opt -> .)
    T_INTEGER       reduce using rule 411 (constant_opt -> .)
    T_BIGINT        reduce using rule 411 (constant_opt -> .)
    T_REAL          reduce using rule 411 (constant_opt -> .)
    T_DOUBLE        reduce using rule 411 (constant_opt -> .)
    T_MONEY         reduce using rule 411 (constant_opt -> .)
    T_TEXT          reduce using rule 411 (constant_opt -> .)
    T_BOOLEAN       reduce using rule 411 (constant_opt -> .)
    R_TIMESTAMP     reduce using rule 411 (constant_opt -> .)
    T_DATE          reduce using rule 411 (constant_opt -> .)
    T_TIME          reduce using rule 411 (constant_opt -> .)
    T_DECIMAL       reduce using rule 411 (constant_opt -> .)
    T_NUMERIC       reduce using rule 411 (constant_opt -> .)
    T_VARCHAR       reduce using rule 411 (constant_opt -> .)
    T_CHARACTER     reduce using rule 411 (constant_opt -> .)
    T_CHAR          reduce using rule 411 (constant_opt -> .)
    R_INTERVAL      reduce using rule 411 (constant_opt -> .)

    constant_opt                   shift and go to state 863

state 838

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR . beginWord beginStmt endProcedure dolarEndProcedure
    (437) beginWord -> .
    (438) beginWord -> . R_BEGIN

    R_RETURN        reduce using rule 437 (beginWord -> .)
    ID              reduce using rule 437 (beginWord -> .)
    R_CREATE        reduce using rule 437 (beginWord -> .)
    R_SHOW          reduce using rule 437 (beginWord -> .)
    R_ALTER         reduce using rule 437 (beginWord -> .)
    R_DROP          reduce using rule 437 (beginWord -> .)
    R_INSERT        reduce using rule 437 (beginWord -> .)
    R_UPDATE        reduce using rule 437 (beginWord -> .)
    R_DELETE        reduce using rule 437 (beginWord -> .)
    R_TRUNCATE      reduce using rule 437 (beginWord -> .)
    R_USE           reduce using rule 437 (beginWord -> .)
    R_SELECT        reduce using rule 437 (beginWord -> .)
    S_PARIZQ        reduce using rule 437 (beginWord -> .)
    R_EXECUTE       reduce using rule 437 (beginWord -> .)
    R_IF            reduce using rule 437 (beginWord -> .)
    R_BEGIN         shift and go to state 840

    beginWord                      shift and go to state 866

state 839

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord . beginStmt endProcedure dolarEndProcedure
    (421) beginStmt -> . beginStmt beginItem
    (422) beginStmt -> . beginItem
    (423) beginItem -> . stmt
    (424) beginItem -> . returnStmt S_PUNTOCOMA
    (425) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (426) returnStmt -> . R_RETURN expresion
    (429) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> . ID S_IGUAL expresion
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (441) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_RETURN        shift and go to state 861
    ID              shift and go to state 26
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

    beginStmt                      shift and go to state 867
    beginItem                      shift and go to state 857
    stmt                           shift and go to state 858
    returnStmt                     shift and go to state 859
    asignacionStmt                 shift and go to state 860
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 840

    (438) beginWord -> R_BEGIN .

    R_RETURN        reduce using rule 438 (beginWord -> R_BEGIN .)
    ID              reduce using rule 438 (beginWord -> R_BEGIN .)
    R_CREATE        reduce using rule 438 (beginWord -> R_BEGIN .)
    R_SHOW          reduce using rule 438 (beginWord -> R_BEGIN .)
    R_ALTER         reduce using rule 438 (beginWord -> R_BEGIN .)
    R_DROP          reduce using rule 438 (beginWord -> R_BEGIN .)
    R_INSERT        reduce using rule 438 (beginWord -> R_BEGIN .)
    R_UPDATE        reduce using rule 438 (beginWord -> R_BEGIN .)
    R_DELETE        reduce using rule 438 (beginWord -> R_BEGIN .)
    R_TRUNCATE      reduce using rule 438 (beginWord -> R_BEGIN .)
    R_USE           reduce using rule 438 (beginWord -> R_BEGIN .)
    R_SELECT        reduce using rule 438 (beginWord -> R_BEGIN .)
    S_PARIZQ        reduce using rule 438 (beginWord -> R_BEGIN .)
    R_EXECUTE       reduce using rule 438 (beginWord -> R_BEGIN .)
    R_IF            reduce using rule 438 (beginWord -> R_BEGIN .)


state 841

    (46) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS . S_PARDER whereCl

    S_PARDER        shift and go to state 868


state 842

    (51) indexNullS -> R_NULLS . R_FIRST
    (52) indexNullS -> R_NULLS . R_LAST

    R_FIRST         shift and go to state 869
    R_LAST          shift and go to state 870


state 843

    (64) inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .

    S_PUNTOCOMA     reduce using rule 64 (inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .)


state 844

    (130) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 871


state 845

    (268) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM . idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    idOrLiteral                    shift and go to state 872

state 846

    (269) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 873


state 847

    (86) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES . ID S_PARIZQ idList S_PARDER

    ID              shift and go to state 874


state 848

    (371) orderNull -> R_NULL R_FIRST .

    S_COMA          reduce using rule 371 (orderNull -> R_NULL R_FIRST .)
    R_LIMIT         reduce using rule 371 (orderNull -> R_NULL R_FIRST .)
    S_PUNTOCOMA     reduce using rule 371 (orderNull -> R_NULL R_FIRST .)
    R_UNION         reduce using rule 371 (orderNull -> R_NULL R_FIRST .)
    R_INTERSECT     reduce using rule 371 (orderNull -> R_NULL R_FIRST .)
    R_EXCEPT        reduce using rule 371 (orderNull -> R_NULL R_FIRST .)
    S_PARDER        reduce using rule 371 (orderNull -> R_NULL R_FIRST .)


state 849

    (372) orderNull -> R_NULL R_LAST .

    S_COMA          reduce using rule 372 (orderNull -> R_NULL R_LAST .)
    R_LIMIT         reduce using rule 372 (orderNull -> R_NULL R_LAST .)
    S_PUNTOCOMA     reduce using rule 372 (orderNull -> R_NULL R_LAST .)
    R_UNION         reduce using rule 372 (orderNull -> R_NULL R_LAST .)
    R_INTERSECT     reduce using rule 372 (orderNull -> R_NULL R_LAST .)
    R_EXCEPT        reduce using rule 372 (orderNull -> R_NULL R_LAST .)
    S_PARDER        reduce using rule 372 (orderNull -> R_NULL R_LAST .)


state 850

    (341) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .

    R_NATURAL       reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INNER         reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LEFT          reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_RIGHT         reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_FULL          reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_WHERE         reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_GROUP         reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_ORDER         reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LIMIT         reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_UNION         reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INTERSECT     reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_EXCEPT        reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PARDER        reduce using rule 341 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)


state 851

    (343) nameList -> nameList S_COMA . columnName
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 520

    columnName                     shift and go to state 875

state 852

    (223) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 223 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 853

    (226) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 226 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 854

    (224) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 224 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 855

    (25) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .
    (26) List_body -> List_body . body
    (28) body -> . createStmt S_PUNTOCOMA
    (29) body -> . showStmt S_PUNTOCOMA
    (30) body -> . alterStmt S_PUNTOCOMA
    (31) body -> . dropStmt S_PUNTOCOMA
    (32) body -> . insertStmt S_PUNTOCOMA
    (33) body -> . updateStmt S_PUNTOCOMA
    (34) body -> . deleteStmt S_PUNTOCOMA
    (35) body -> . truncateStmt S_PUNTOCOMA
    (36) body -> . useStmt S_PUNTOCOMA
    (37) body -> . selectStmt S_PUNTOCOMA
    (38) body -> . functionStmt S_PUNTOCOMA
    (39) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) body -> . expresion S_PUNTOCOMA
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    R_ELSIF         reduce using rule 25 (elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .)
    R_END           reduce using rule 25 (elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .)
    R_CREATE        shift and go to state 448
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 432
    R_IF            shift and go to state 18
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 433
    body                           shift and go to state 558
    createStmt                     shift and go to state 436
    showStmt                       shift and go to state 437
    alterStmt                      shift and go to state 438
    dropStmt                       shift and go to state 439
    insertStmt                     shift and go to state 440
    updateStmt                     shift and go to state 441
    deleteStmt                     shift and go to state 442
    truncateStmt                   shift and go to state 443
    useStmt                        shift and go to state 444
    selectStmt                     shift and go to state 445
    functionStmt                   shift and go to state 446
    ifStmt                         shift and go to state 447
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 856

    (398) bloqueFunction -> declareStmt R_BEGIN beginStmt . R_END S_PUNTOCOMA labelEnd
    (421) beginStmt -> beginStmt . beginItem
    (423) beginItem -> . stmt
    (424) beginItem -> . returnStmt S_PUNTOCOMA
    (425) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (426) returnStmt -> . R_RETURN expresion
    (429) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> . ID S_IGUAL expresion
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (441) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_END           shift and go to state 876
    R_RETURN        shift and go to state 861
    ID              shift and go to state 26
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

    beginItem                      shift and go to state 877
    stmt                           shift and go to state 858
    returnStmt                     shift and go to state 859
    asignacionStmt                 shift and go to state 860
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 857

    (422) beginStmt -> beginItem .

    R_END           reduce using rule 422 (beginStmt -> beginItem .)
    R_RETURN        reduce using rule 422 (beginStmt -> beginItem .)
    ID              reduce using rule 422 (beginStmt -> beginItem .)
    R_CREATE        reduce using rule 422 (beginStmt -> beginItem .)
    R_SHOW          reduce using rule 422 (beginStmt -> beginItem .)
    R_ALTER         reduce using rule 422 (beginStmt -> beginItem .)
    R_DROP          reduce using rule 422 (beginStmt -> beginItem .)
    R_INSERT        reduce using rule 422 (beginStmt -> beginItem .)
    R_UPDATE        reduce using rule 422 (beginStmt -> beginItem .)
    R_DELETE        reduce using rule 422 (beginStmt -> beginItem .)
    R_TRUNCATE      reduce using rule 422 (beginStmt -> beginItem .)
    R_USE           reduce using rule 422 (beginStmt -> beginItem .)
    R_SELECT        reduce using rule 422 (beginStmt -> beginItem .)
    S_PARIZQ        reduce using rule 422 (beginStmt -> beginItem .)
    R_EXECUTE       reduce using rule 422 (beginStmt -> beginItem .)
    R_IF            reduce using rule 422 (beginStmt -> beginItem .)
    S_DOLAR         reduce using rule 422 (beginStmt -> beginItem .)
    $end            reduce using rule 422 (beginStmt -> beginItem .)


state 858

    (423) beginItem -> stmt .

    R_END           reduce using rule 423 (beginItem -> stmt .)
    R_RETURN        reduce using rule 423 (beginItem -> stmt .)
    ID              reduce using rule 423 (beginItem -> stmt .)
    R_CREATE        reduce using rule 423 (beginItem -> stmt .)
    R_SHOW          reduce using rule 423 (beginItem -> stmt .)
    R_ALTER         reduce using rule 423 (beginItem -> stmt .)
    R_DROP          reduce using rule 423 (beginItem -> stmt .)
    R_INSERT        reduce using rule 423 (beginItem -> stmt .)
    R_UPDATE        reduce using rule 423 (beginItem -> stmt .)
    R_DELETE        reduce using rule 423 (beginItem -> stmt .)
    R_TRUNCATE      reduce using rule 423 (beginItem -> stmt .)
    R_USE           reduce using rule 423 (beginItem -> stmt .)
    R_SELECT        reduce using rule 423 (beginItem -> stmt .)
    S_PARIZQ        reduce using rule 423 (beginItem -> stmt .)
    R_EXECUTE       reduce using rule 423 (beginItem -> stmt .)
    R_IF            reduce using rule 423 (beginItem -> stmt .)
    S_DOLAR         reduce using rule 423 (beginItem -> stmt .)
    $end            reduce using rule 423 (beginItem -> stmt .)


state 859

    (424) beginItem -> returnStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 878


state 860

    (425) beginItem -> asignacionStmt . S_PUNTOCOMA
    (18) stmt -> asignacionStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 879


state 861

    (426) returnStmt -> R_RETURN . expresion
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 880
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 862

    (406) declaracion_list -> declaracion_list declaracion_item .

    ID              reduce using rule 406 (declaracion_list -> declaracion_list declaracion_item .)
    R_BEGIN         reduce using rule 406 (declaracion_list -> declaracion_list declaracion_item .)


state 863

    (408) declaracion_item -> ID constant_opt . types null_opt default_item S_PUNTOCOMA
    (91) types -> . ID
    (92) types -> . T_SMALLINT
    (93) types -> . T_INTEGER
    (94) types -> . T_BIGINT
    (95) types -> . T_REAL
    (96) types -> . T_DOUBLE T_PRECISION
    (97) types -> . T_MONEY
    (98) types -> . T_TEXT
    (99) types -> . T_BOOLEAN
    (100) types -> . R_TIMESTAMP
    (101) types -> . T_DATE
    (102) types -> . T_TIME
    (103) types -> . T_DECIMAL optParams
    (104) types -> . T_NUMERIC optParams
    (105) types -> . T_VARCHAR optParams
    (106) types -> . T_CHARACTER optParams
    (107) types -> . T_CHAR optParams
    (108) types -> . T_CHARACTER T_VARYING optParams
    (109) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 449
    T_SMALLINT      shift and go to state 451
    T_INTEGER       shift and go to state 452
    T_BIGINT        shift and go to state 453
    T_REAL          shift and go to state 454
    T_DOUBLE        shift and go to state 455
    T_MONEY         shift and go to state 456
    T_TEXT          shift and go to state 457
    T_BOOLEAN       shift and go to state 458
    R_TIMESTAMP     shift and go to state 459
    T_DATE          shift and go to state 460
    T_TIME          shift and go to state 461
    T_DECIMAL       shift and go to state 462
    T_NUMERIC       shift and go to state 463
    T_VARCHAR       shift and go to state 464
    T_CHARACTER     shift and go to state 465
    T_CHAR          shift and go to state 466
    R_INTERVAL      shift and go to state 467

    types                          shift and go to state 881

state 864

    (409) declaracion_item -> ID R_ALIAS . R_FOR alias_declaracion S_PUNTOCOMA

    R_FOR           shift and go to state 882


state 865

    (410) constant_opt -> R_CONSTANT .

    ID              reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_SMALLINT      reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_INTEGER       reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_BIGINT        reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_REAL          reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_DOUBLE        reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_MONEY         reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_TEXT          reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_BOOLEAN       reduce using rule 410 (constant_opt -> R_CONSTANT .)
    R_TIMESTAMP     reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_DATE          reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_TIME          reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_DECIMAL       reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_NUMERIC       reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_VARCHAR       reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_CHARACTER     reduce using rule 410 (constant_opt -> R_CONSTANT .)
    T_CHAR          reduce using rule 410 (constant_opt -> R_CONSTANT .)
    R_INTERVAL      reduce using rule 410 (constant_opt -> R_CONSTANT .)


state 866

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord . beginStmt endProcedure dolarEndProcedure
    (421) beginStmt -> . beginStmt beginItem
    (422) beginStmt -> . beginItem
    (423) beginItem -> . stmt
    (424) beginItem -> . returnStmt S_PUNTOCOMA
    (425) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (426) returnStmt -> . R_RETURN expresion
    (429) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> . ID S_IGUAL expresion
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (441) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_RETURN        shift and go to state 861
    ID              shift and go to state 26
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

    beginStmt                      shift and go to state 883
    beginItem                      shift and go to state 857
    stmt                           shift and go to state 858
    returnStmt                     shift and go to state 859
    asignacionStmt                 shift and go to state 860
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 867

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt . endProcedure dolarEndProcedure
    (421) beginStmt -> beginStmt . beginItem
    (433) endProcedure -> .
    (434) endProcedure -> . R_END S_PUNTOCOMA
    (423) beginItem -> . stmt
    (424) beginItem -> . returnStmt S_PUNTOCOMA
    (425) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (426) returnStmt -> . R_RETURN expresion
    (429) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> . ID S_IGUAL expresion
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (441) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

  ! shift/reduce conflict for R_END resolved as shift
  ! shift/reduce conflict for R_RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_CREATE resolved as shift
  ! shift/reduce conflict for R_SHOW resolved as shift
  ! shift/reduce conflict for R_ALTER resolved as shift
  ! shift/reduce conflict for R_DROP resolved as shift
  ! shift/reduce conflict for R_INSERT resolved as shift
  ! shift/reduce conflict for R_UPDATE resolved as shift
  ! shift/reduce conflict for R_DELETE resolved as shift
  ! shift/reduce conflict for R_TRUNCATE resolved as shift
  ! shift/reduce conflict for R_USE resolved as shift
  ! shift/reduce conflict for R_SELECT resolved as shift
  ! shift/reduce conflict for S_PARIZQ resolved as shift
  ! shift/reduce conflict for R_EXECUTE resolved as shift
  ! shift/reduce conflict for R_IF resolved as shift
    S_DOLAR         reduce using rule 433 (endProcedure -> .)
    $end            reduce using rule 433 (endProcedure -> .)
    R_END           shift and go to state 885
    R_RETURN        shift and go to state 861
    ID              shift and go to state 26
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

  ! R_CREATE        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_SHOW          [ reduce using rule 433 (endProcedure -> .) ]
  ! R_ALTER         [ reduce using rule 433 (endProcedure -> .) ]
  ! R_DROP          [ reduce using rule 433 (endProcedure -> .) ]
  ! R_INSERT        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_UPDATE        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_DELETE        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_TRUNCATE      [ reduce using rule 433 (endProcedure -> .) ]
  ! R_USE           [ reduce using rule 433 (endProcedure -> .) ]
  ! R_SELECT        [ reduce using rule 433 (endProcedure -> .) ]
  ! S_PARIZQ        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_EXECUTE       [ reduce using rule 433 (endProcedure -> .) ]
  ! R_IF            [ reduce using rule 433 (endProcedure -> .) ]
  ! ID              [ reduce using rule 433 (endProcedure -> .) ]
  ! R_END           [ reduce using rule 433 (endProcedure -> .) ]
  ! R_RETURN        [ reduce using rule 433 (endProcedure -> .) ]

    endProcedure                   shift and go to state 884
    beginItem                      shift and go to state 877
    stmt                           shift and go to state 858
    returnStmt                     shift and go to state 859
    asignacionStmt                 shift and go to state 860
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 868

    (46) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER . whereCl
    (352) whereCl -> . R_WHERE expBool
    (353) whereCl -> .

    R_WHERE         shift and go to state 164
    S_PUNTOCOMA     reduce using rule 353 (whereCl -> .)

    whereCl                        shift and go to state 886

state 869

    (51) indexNullS -> R_NULLS R_FIRST .

    S_PARDER        reduce using rule 51 (indexNullS -> R_NULLS R_FIRST .)


state 870

    (52) indexNullS -> R_NULLS R_LAST .

    S_PARDER        reduce using rule 52 (indexNullS -> R_NULLS R_LAST .)


state 871

    (130) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    R_DEFAULT       reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NOT           reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NULL          reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_PRIMARY       reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_REFERENCES    reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CONSTRAINT    reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_UNIQUE        reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CHECK         reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_COMA          reduce using rule 130 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 872

    (268) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 268 (booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .)


state 873

    (269) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM . idOrLiteral
    (270) idOrLiteral -> . ID
    (271) idOrLiteral -> . INTEGER
    (272) idOrLiteral -> . STRING
    (273) idOrLiteral -> . DECIMAL
    (274) idOrLiteral -> . CHARACTER
    (275) idOrLiteral -> . R_TRUE
    (276) idOrLiteral -> . R_FALSE

    ID              shift and go to state 706
    INTEGER         shift and go to state 707
    STRING          shift and go to state 708
    DECIMAL         shift and go to state 709
    CHARACTER       shift and go to state 710
    R_TRUE          shift and go to state 711
    R_FALSE         shift and go to state 712

    idOrLiteral                    shift and go to state 887

state 874

    (86) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 888


state 875

    (343) nameList -> nameList S_COMA columnName .

    S_PARDER        reduce using rule 343 (nameList -> nameList S_COMA columnName .)
    S_COMA          reduce using rule 343 (nameList -> nameList S_COMA columnName .)


state 876

    (398) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END . S_PUNTOCOMA labelEnd

    S_PUNTOCOMA     shift and go to state 889


state 877

    (421) beginStmt -> beginStmt beginItem .

    R_END           reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_RETURN        reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    ID              reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_CREATE        reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_SHOW          reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_ALTER         reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_DROP          reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_INSERT        reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_UPDATE        reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_DELETE        reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_TRUNCATE      reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_USE           reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_SELECT        reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    S_PARIZQ        reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_EXECUTE       reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    R_IF            reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    S_DOLAR         reduce using rule 421 (beginStmt -> beginStmt beginItem .)
    $end            reduce using rule 421 (beginStmt -> beginStmt beginItem .)


state 878

    (424) beginItem -> returnStmt S_PUNTOCOMA .

    R_END           reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    ID              reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)
    $end            reduce using rule 424 (beginItem -> returnStmt S_PUNTOCOMA .)


state 879

    (425) beginItem -> asignacionStmt S_PUNTOCOMA .
    (18) stmt -> asignacionStmt S_PUNTOCOMA .

  ! reduce/reduce conflict for R_END resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_RETURN resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_CREATE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_SHOW resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_ALTER resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_DROP resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_INSERT resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_UPDATE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_DELETE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_TRUNCATE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_USE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_SELECT resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for S_PARIZQ resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_EXECUTE resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for R_IF resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for S_DOLAR resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_END           reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    ID              reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)
    $end            reduce using rule 18 (stmt -> asignacionStmt S_PUNTOCOMA .)

  ! R_END           [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_RETURN        [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! ID              [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_CREATE        [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_SHOW          [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_ALTER         [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_DROP          [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_INSERT        [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_UPDATE        [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_DELETE        [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_TRUNCATE      [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_USE           [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_SELECT        [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! S_PARIZQ        [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_EXECUTE       [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! R_IF            [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! S_DOLAR         [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]
  ! $end            [ reduce using rule 425 (beginItem -> asignacionStmt S_PUNTOCOMA .) ]


state 880

    (426) returnStmt -> R_RETURN expresion .

    S_PUNTOCOMA     reduce using rule 426 (returnStmt -> R_RETURN expresion .)


state 881

    (408) declaracion_item -> ID constant_opt types . null_opt default_item S_PUNTOCOMA
    (412) null_opt -> . R_NOT R_NULL
    (413) null_opt -> .

    R_NOT           shift and go to state 891
    R_DEFAULT       reduce using rule 413 (null_opt -> .)
    S_DOSPUNTOS     reduce using rule 413 (null_opt -> .)
    S_IGUAL         reduce using rule 413 (null_opt -> .)
    S_PUNTOCOMA     reduce using rule 413 (null_opt -> .)

    null_opt                       shift and go to state 890

state 882

    (409) declaracion_item -> ID R_ALIAS R_FOR . alias_declaracion S_PUNTOCOMA
    (419) alias_declaracion -> . ID
    (420) alias_declaracion -> . IDEspecial

    ID              shift and go to state 892
    IDEspecial      shift and go to state 894

    alias_declaracion              shift and go to state 893

state 883

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt . endProcedure dolarEndProcedure
    (421) beginStmt -> beginStmt . beginItem
    (433) endProcedure -> .
    (434) endProcedure -> . R_END S_PUNTOCOMA
    (423) beginItem -> . stmt
    (424) beginItem -> . returnStmt S_PUNTOCOMA
    (425) beginItem -> . asignacionStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . procedureStmt
    (16) stmt -> . executePL S_PUNTOCOMA
    (17) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (18) stmt -> . asignacionStmt S_PUNTOCOMA
    (426) returnStmt -> . R_RETURN expresion
    (429) asignacionStmt -> . ID S_DOSPUNTOS S_IGUAL expresion
    (430) asignacionStmt -> . ID S_IGUAL expresion
    (44) createStmt -> . R_CREATE createBody
    (392) showStmt -> . R_SHOW R_DATABASES likeOpt
    (277) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (278) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (279) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER col_op idList
    (304) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (305) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (306) dropStmt -> . R_DROP R_PROCEDURE ifExists idOrString S_PARIZQ S_PARDER
    (307) dropStmt -> . R_DROP R_INDEX concurrenly ifExists idOrString
    (379) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (382) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (388) deleteStmt -> . R_DELETE fromCl whereCl
    (389) truncateStmt -> . R_TRUNCATE tableOpt ID
    (395) useStmt -> . R_USE ID
    (312) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (314) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (315) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (316) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (317) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (318) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (319) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (321) selectStmt -> . R_SELECT selectParams
    (396) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (397) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (431) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (432) procedureStmt -> . R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure
    (441) executePL -> . R_EXECUTE funcCall
    (19) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

  ! shift/reduce conflict for R_END resolved as shift
  ! shift/reduce conflict for R_RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_CREATE resolved as shift
  ! shift/reduce conflict for R_SHOW resolved as shift
  ! shift/reduce conflict for R_ALTER resolved as shift
  ! shift/reduce conflict for R_DROP resolved as shift
  ! shift/reduce conflict for R_INSERT resolved as shift
  ! shift/reduce conflict for R_UPDATE resolved as shift
  ! shift/reduce conflict for R_DELETE resolved as shift
  ! shift/reduce conflict for R_TRUNCATE resolved as shift
  ! shift/reduce conflict for R_USE resolved as shift
  ! shift/reduce conflict for R_SELECT resolved as shift
  ! shift/reduce conflict for S_PARIZQ resolved as shift
  ! shift/reduce conflict for R_EXECUTE resolved as shift
  ! shift/reduce conflict for R_IF resolved as shift
    S_DOLAR         reduce using rule 433 (endProcedure -> .)
    $end            reduce using rule 433 (endProcedure -> .)
    R_END           shift and go to state 885
    R_RETURN        shift and go to state 861
    ID              shift and go to state 26
    R_CREATE        shift and go to state 20
    R_SHOW          shift and go to state 21
    R_ALTER         shift and go to state 22
    R_DROP          shift and go to state 23
    R_INSERT        shift and go to state 25
    R_UPDATE        shift and go to state 27
    R_DELETE        shift and go to state 28
    R_TRUNCATE      shift and go to state 29
    R_USE           shift and go to state 30
    R_SELECT        shift and go to state 31
    S_PARIZQ        shift and go to state 24
    R_EXECUTE       shift and go to state 32
    R_IF            shift and go to state 18

  ! R_CREATE        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_SHOW          [ reduce using rule 433 (endProcedure -> .) ]
  ! R_ALTER         [ reduce using rule 433 (endProcedure -> .) ]
  ! R_DROP          [ reduce using rule 433 (endProcedure -> .) ]
  ! R_INSERT        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_UPDATE        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_DELETE        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_TRUNCATE      [ reduce using rule 433 (endProcedure -> .) ]
  ! R_USE           [ reduce using rule 433 (endProcedure -> .) ]
  ! R_SELECT        [ reduce using rule 433 (endProcedure -> .) ]
  ! S_PARIZQ        [ reduce using rule 433 (endProcedure -> .) ]
  ! R_EXECUTE       [ reduce using rule 433 (endProcedure -> .) ]
  ! R_IF            [ reduce using rule 433 (endProcedure -> .) ]
  ! ID              [ reduce using rule 433 (endProcedure -> .) ]
  ! R_END           [ reduce using rule 433 (endProcedure -> .) ]
  ! R_RETURN        [ reduce using rule 433 (endProcedure -> .) ]

    endProcedure                   shift and go to state 895
    beginItem                      shift and go to state 877
    stmt                           shift and go to state 858
    returnStmt                     shift and go to state 859
    asignacionStmt                 shift and go to state 860
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    procedureStmt                  shift and go to state 15
    executePL                      shift and go to state 16
    ifStmt                         shift and go to state 17

state 884

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure . dolarEndProcedure
    (435) dolarEndProcedure -> .
    (436) dolarEndProcedure -> . S_DOLAR S_DOLAR

  ! shift/reduce conflict for S_DOLAR resolved as shift
    R_CREATE        reduce using rule 435 (dolarEndProcedure -> .)
    R_SHOW          reduce using rule 435 (dolarEndProcedure -> .)
    R_ALTER         reduce using rule 435 (dolarEndProcedure -> .)
    R_DROP          reduce using rule 435 (dolarEndProcedure -> .)
    R_INSERT        reduce using rule 435 (dolarEndProcedure -> .)
    R_UPDATE        reduce using rule 435 (dolarEndProcedure -> .)
    R_DELETE        reduce using rule 435 (dolarEndProcedure -> .)
    R_TRUNCATE      reduce using rule 435 (dolarEndProcedure -> .)
    R_USE           reduce using rule 435 (dolarEndProcedure -> .)
    R_SELECT        reduce using rule 435 (dolarEndProcedure -> .)
    S_PARIZQ        reduce using rule 435 (dolarEndProcedure -> .)
    R_EXECUTE       reduce using rule 435 (dolarEndProcedure -> .)
    R_IF            reduce using rule 435 (dolarEndProcedure -> .)
    ID              reduce using rule 435 (dolarEndProcedure -> .)
    $end            reduce using rule 435 (dolarEndProcedure -> .)
    R_END           reduce using rule 435 (dolarEndProcedure -> .)
    R_RETURN        reduce using rule 435 (dolarEndProcedure -> .)
    S_DOLAR         shift and go to state 896

  ! S_DOLAR         [ reduce using rule 435 (dolarEndProcedure -> .) ]

    dolarEndProcedure              shift and go to state 897

state 885

    (434) endProcedure -> R_END . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 898


state 886

    (46) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl .

    S_PUNTOCOMA     reduce using rule 46 (createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl .)


state 887

    (269) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 269 (booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .)


state 888

    (86) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ . idList S_PARDER
    (89) idList -> . idList S_COMA ID
    (90) idList -> . ID

    ID              shift and go to state 377

    idList                         shift and go to state 899

state 889

    (398) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA . labelEnd
    (427) labelEnd -> .
    (428) labelEnd -> . S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA

  ! shift/reduce conflict for S_DOLAR resolved as shift
    R_CREATE        reduce using rule 427 (labelEnd -> .)
    R_SHOW          reduce using rule 427 (labelEnd -> .)
    R_ALTER         reduce using rule 427 (labelEnd -> .)
    R_DROP          reduce using rule 427 (labelEnd -> .)
    R_INSERT        reduce using rule 427 (labelEnd -> .)
    R_UPDATE        reduce using rule 427 (labelEnd -> .)
    R_DELETE        reduce using rule 427 (labelEnd -> .)
    R_TRUNCATE      reduce using rule 427 (labelEnd -> .)
    R_USE           reduce using rule 427 (labelEnd -> .)
    R_SELECT        reduce using rule 427 (labelEnd -> .)
    S_PARIZQ        reduce using rule 427 (labelEnd -> .)
    R_EXECUTE       reduce using rule 427 (labelEnd -> .)
    R_IF            reduce using rule 427 (labelEnd -> .)
    ID              reduce using rule 427 (labelEnd -> .)
    $end            reduce using rule 427 (labelEnd -> .)
    S_PUNTOCOMA     reduce using rule 427 (labelEnd -> .)
    R_END           reduce using rule 427 (labelEnd -> .)
    R_RETURN        reduce using rule 427 (labelEnd -> .)
    S_DOLAR         shift and go to state 901

  ! S_DOLAR         [ reduce using rule 427 (labelEnd -> .) ]

    labelEnd                       shift and go to state 900

state 890

    (408) declaracion_item -> ID constant_opt types null_opt . default_item S_PUNTOCOMA
    (417) default_item -> . default_opt expresion
    (418) default_item -> .
    (414) default_opt -> . R_DEFAULT
    (415) default_opt -> . S_DOSPUNTOS S_IGUAL
    (416) default_opt -> . S_IGUAL

    S_PUNTOCOMA     reduce using rule 418 (default_item -> .)
    R_DEFAULT       shift and go to state 904
    S_DOSPUNTOS     shift and go to state 905
    S_IGUAL         shift and go to state 906

    default_item                   shift and go to state 902
    default_opt                    shift and go to state 903

state 891

    (412) null_opt -> R_NOT . R_NULL

    R_NULL          shift and go to state 907


state 892

    (419) alias_declaracion -> ID .

    S_PUNTOCOMA     reduce using rule 419 (alias_declaracion -> ID .)


state 893

    (409) declaracion_item -> ID R_ALIAS R_FOR alias_declaracion . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 908


state 894

    (420) alias_declaracion -> IDEspecial .

    S_PUNTOCOMA     reduce using rule 420 (alias_declaracion -> IDEspecial .)


state 895

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure . dolarEndProcedure
    (435) dolarEndProcedure -> .
    (436) dolarEndProcedure -> . S_DOLAR S_DOLAR

  ! shift/reduce conflict for S_DOLAR resolved as shift
    R_CREATE        reduce using rule 435 (dolarEndProcedure -> .)
    R_SHOW          reduce using rule 435 (dolarEndProcedure -> .)
    R_ALTER         reduce using rule 435 (dolarEndProcedure -> .)
    R_DROP          reduce using rule 435 (dolarEndProcedure -> .)
    R_INSERT        reduce using rule 435 (dolarEndProcedure -> .)
    R_UPDATE        reduce using rule 435 (dolarEndProcedure -> .)
    R_DELETE        reduce using rule 435 (dolarEndProcedure -> .)
    R_TRUNCATE      reduce using rule 435 (dolarEndProcedure -> .)
    R_USE           reduce using rule 435 (dolarEndProcedure -> .)
    R_SELECT        reduce using rule 435 (dolarEndProcedure -> .)
    S_PARIZQ        reduce using rule 435 (dolarEndProcedure -> .)
    R_EXECUTE       reduce using rule 435 (dolarEndProcedure -> .)
    R_IF            reduce using rule 435 (dolarEndProcedure -> .)
    ID              reduce using rule 435 (dolarEndProcedure -> .)
    $end            reduce using rule 435 (dolarEndProcedure -> .)
    R_END           reduce using rule 435 (dolarEndProcedure -> .)
    R_RETURN        reduce using rule 435 (dolarEndProcedure -> .)
    S_DOLAR         shift and go to state 896

  ! S_DOLAR         [ reduce using rule 435 (dolarEndProcedure -> .) ]

    dolarEndProcedure              shift and go to state 909

state 896

    (436) dolarEndProcedure -> S_DOLAR . S_DOLAR

    S_DOLAR         shift and go to state 910


state 897

    (432) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .

    R_CREATE        reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_SHOW          reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_ALTER         reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_DROP          reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_INSERT        reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_UPDATE        reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_DELETE        reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_TRUNCATE      reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_USE           reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_SELECT        reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    S_PARIZQ        reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_EXECUTE       reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_IF            reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    ID              reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    $end            reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_END           reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_RETURN        reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    S_DOLAR         reduce using rule 432 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)


state 898

    (434) endProcedure -> R_END S_PUNTOCOMA .

    S_DOLAR         reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_CREATE        reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_SHOW          reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_ALTER         reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_DROP          reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_INSERT        reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_DELETE        reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_USE           reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_SELECT        reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_IF            reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    ID              reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    $end            reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_END           reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)
    R_RETURN        reduce using rule 434 (endProcedure -> R_END S_PUNTOCOMA .)


state 899

    (86) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList . S_PARDER
    (89) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 911
    S_COMA          shift and go to state 508


state 900

    (398) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .

    R_CREATE        reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_SHOW          reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_ALTER         reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_DROP          reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_INSERT        reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_UPDATE        reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_DELETE        reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_TRUNCATE      reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_USE           reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_SELECT        reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    S_PARIZQ        reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_EXECUTE       reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_IF            reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    ID              reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    $end            reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    S_PUNTOCOMA     reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_END           reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_RETURN        reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    S_DOLAR         reduce using rule 398 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)


state 901

    (428) labelEnd -> S_DOLAR . S_DOLAR R_LANGUAGE ID S_PUNTOCOMA

    S_DOLAR         shift and go to state 912


state 902

    (408) declaracion_item -> ID constant_opt types null_opt default_item . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 913


state 903

    (417) default_item -> default_opt . expresion
    (133) expresion -> . datatype
    (134) expresion -> . expBool
    (135) expresion -> . S_PARIZQ selectStmt S_PARDER
    (173) datatype -> . datatype O_SUMA datatype
    (174) datatype -> . datatype O_RESTA datatype
    (175) datatype -> . datatype O_PRODUCTO datatype
    (176) datatype -> . datatype O_DIVISION datatype
    (177) datatype -> . datatype O_EXPONENTE datatype
    (178) datatype -> . datatype O_MODULAR datatype
    (179) datatype -> . datatype OC_CONCATENAR datatype
    (180) datatype -> . R_CASE caseList optElse R_END
    (186) datatype -> . O_RESTA datatype
    (187) datatype -> . O_SUMA datatype
    (188) datatype -> . columnName
    (189) datatype -> . literal
    (190) datatype -> . funcCall
    (191) datatype -> . extract
    (192) datatype -> . datePart
    (193) datatype -> . current
    (194) datatype -> . S_PARIZQ datatype S_PARDER
    (248) expBool -> . expBool R_AND expBool
    (249) expBool -> . expBool R_OR expBool
    (250) expBool -> . R_NOT expBool
    (251) expBool -> . S_PARIZQ expBool S_PARDER
    (252) expBool -> . expBool optBoolPredicate
    (253) expBool -> . boolean
    (260) columnName -> . ID
    (261) columnName -> . ID S_PUNTO ID
    (164) literal -> . INTEGER
    (165) literal -> . STRING
    (166) literal -> . DECIMAL
    (167) literal -> . CHARACTER
    (168) literal -> . R_TRUE
    (169) literal -> . R_FALSE
    (170) literal -> . R_NULL
    (136) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (137) funcCall -> . ID S_PARIZQ S_PARDER
    (138) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (139) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (140) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (141) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (142) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (143) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (144) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (153) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (159) current -> . R_CURRENT_DATE
    (160) current -> . R_CURRENT_TIME
    (161) current -> . timeStamp
    (243) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (244) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (245) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (246) boolean -> . expComp
    (247) boolean -> . expSubq
    (145) timeStamp -> . R_TIMESTAMP STRING
    (146) timeStamp -> . R_INTERVAL STRING
    (195) expComp -> . datatype OL_MENORQUE datatype
    (196) expComp -> . datatype OL_MAYORQUE datatype
    (197) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (198) expComp -> . datatype OL_MENORIGUALQUE datatype
    (199) expComp -> . datatype S_IGUAL datatype
    (200) expComp -> . datatype OL_DISTINTODE datatype
    (201) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (202) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (203) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (204) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (205) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (206) expComp -> . datatype R_ISNULL
    (207) expComp -> . datatype R_NOTNULL
    (208) expComp -> . datatype R_IS R_NULL
    (209) expComp -> . datatype R_IS R_TRUE
    (210) expComp -> . datatype R_IS R_FALSE
    (211) expComp -> . datatype R_IS R_UNKNOWN
    (212) expComp -> . datatype R_IS R_NOT R_NULL
    (213) expComp -> . datatype R_IS R_NOT R_TRUE
    (214) expComp -> . datatype R_IS R_NOT R_FALSE
    (215) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (216) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (234) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (235) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (236) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (237) expSubq -> . stringExp R_LIKE STRING
    (238) stringExp -> . STRING
    (239) stringExp -> . columnName

    S_PARIZQ        shift and go to state 89
    R_CASE          shift and go to state 92
    O_RESTA         shift and go to state 91
    O_SUMA          shift and go to state 90
    R_NOT           shift and go to state 99
    ID              shift and go to state 131
    INTEGER         shift and go to state 101
    STRING          shift and go to state 102
    DECIMAL         shift and go to state 103
    CHARACTER       shift and go to state 104
    R_TRUE          shift and go to state 105
    R_FALSE         shift and go to state 106
    R_NULL          shift and go to state 107
    R_NOW           shift and go to state 108
    R_COUNT         shift and go to state 109
    R_SUM           shift and go to state 110
    R_PROM          shift and go to state 111
    R_EXTRACT       shift and go to state 112
    R_DATE_PART     shift and go to state 114
    R_CURRENT_DATE  shift and go to state 115
    R_CURRENT_TIME  shift and go to state 116
    R_EXISTS        shift and go to state 117
    R_TIMESTAMP     shift and go to state 120
    R_INTERVAL      shift and go to state 121

    expresion                      shift and go to state 914
    datatype                       shift and go to state 87
    expBool                        shift and go to state 88
    columnName                     shift and go to state 93
    literal                        shift and go to state 94
    funcCall                       shift and go to state 95
    extract                        shift and go to state 96
    datePart                       shift and go to state 97
    current                        shift and go to state 98
    boolean                        shift and go to state 100
    timeStamp                      shift and go to state 113
    expComp                        shift and go to state 118
    expSubq                        shift and go to state 119
    stringExp                      shift and go to state 122

state 904

    (414) default_opt -> R_DEFAULT .

    S_PARIZQ        reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_CASE          reduce using rule 414 (default_opt -> R_DEFAULT .)
    O_RESTA         reduce using rule 414 (default_opt -> R_DEFAULT .)
    O_SUMA          reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_NOT           reduce using rule 414 (default_opt -> R_DEFAULT .)
    ID              reduce using rule 414 (default_opt -> R_DEFAULT .)
    INTEGER         reduce using rule 414 (default_opt -> R_DEFAULT .)
    STRING          reduce using rule 414 (default_opt -> R_DEFAULT .)
    DECIMAL         reduce using rule 414 (default_opt -> R_DEFAULT .)
    CHARACTER       reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_TRUE          reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_FALSE         reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_NULL          reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_NOW           reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_COUNT         reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_SUM           reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_PROM          reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_EXTRACT       reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_DATE_PART     reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_CURRENT_DATE  reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_CURRENT_TIME  reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_EXISTS        reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_TIMESTAMP     reduce using rule 414 (default_opt -> R_DEFAULT .)
    R_INTERVAL      reduce using rule 414 (default_opt -> R_DEFAULT .)


state 905

    (415) default_opt -> S_DOSPUNTOS . S_IGUAL

    S_IGUAL         shift and go to state 915


state 906

    (416) default_opt -> S_IGUAL .

    S_PARIZQ        reduce using rule 416 (default_opt -> S_IGUAL .)
    R_CASE          reduce using rule 416 (default_opt -> S_IGUAL .)
    O_RESTA         reduce using rule 416 (default_opt -> S_IGUAL .)
    O_SUMA          reduce using rule 416 (default_opt -> S_IGUAL .)
    R_NOT           reduce using rule 416 (default_opt -> S_IGUAL .)
    ID              reduce using rule 416 (default_opt -> S_IGUAL .)
    INTEGER         reduce using rule 416 (default_opt -> S_IGUAL .)
    STRING          reduce using rule 416 (default_opt -> S_IGUAL .)
    DECIMAL         reduce using rule 416 (default_opt -> S_IGUAL .)
    CHARACTER       reduce using rule 416 (default_opt -> S_IGUAL .)
    R_TRUE          reduce using rule 416 (default_opt -> S_IGUAL .)
    R_FALSE         reduce using rule 416 (default_opt -> S_IGUAL .)
    R_NULL          reduce using rule 416 (default_opt -> S_IGUAL .)
    R_NOW           reduce using rule 416 (default_opt -> S_IGUAL .)
    R_COUNT         reduce using rule 416 (default_opt -> S_IGUAL .)
    R_SUM           reduce using rule 416 (default_opt -> S_IGUAL .)
    R_PROM          reduce using rule 416 (default_opt -> S_IGUAL .)
    R_EXTRACT       reduce using rule 416 (default_opt -> S_IGUAL .)
    R_DATE_PART     reduce using rule 416 (default_opt -> S_IGUAL .)
    R_CURRENT_DATE  reduce using rule 416 (default_opt -> S_IGUAL .)
    R_CURRENT_TIME  reduce using rule 416 (default_opt -> S_IGUAL .)
    R_EXISTS        reduce using rule 416 (default_opt -> S_IGUAL .)
    R_TIMESTAMP     reduce using rule 416 (default_opt -> S_IGUAL .)
    R_INTERVAL      reduce using rule 416 (default_opt -> S_IGUAL .)


state 907

    (412) null_opt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 412 (null_opt -> R_NOT R_NULL .)
    S_DOSPUNTOS     reduce using rule 412 (null_opt -> R_NOT R_NULL .)
    S_IGUAL         reduce using rule 412 (null_opt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 412 (null_opt -> R_NOT R_NULL .)


state 908

    (409) declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .

    ID              reduce using rule 409 (declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .)
    R_BEGIN         reduce using rule 409 (declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .)


state 909

    (431) procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .

    R_CREATE        reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_SHOW          reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_ALTER         reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_DROP          reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_INSERT        reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_UPDATE        reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_DELETE        reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_TRUNCATE      reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_USE           reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_SELECT        reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    S_PARIZQ        reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_EXECUTE       reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_IF            reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    ID              reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    $end            reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_END           reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    R_RETURN        reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)
    S_DOLAR         reduce using rule 431 (procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure .)


state 910

    (436) dolarEndProcedure -> S_DOLAR S_DOLAR .

    R_CREATE        reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_SHOW          reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_ALTER         reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_DROP          reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_INSERT        reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_UPDATE        reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_DELETE        reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_TRUNCATE      reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_USE           reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_SELECT        reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    S_PARIZQ        reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_EXECUTE       reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_IF            reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    ID              reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    $end            reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_END           reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    R_RETURN        reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)
    S_DOLAR         reduce using rule 436 (dolarEndProcedure -> S_DOLAR S_DOLAR .)


state 911

    (86) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 86 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 86 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 86 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)


state 912

    (428) labelEnd -> S_DOLAR S_DOLAR . R_LANGUAGE ID S_PUNTOCOMA

    R_LANGUAGE      shift and go to state 916


state 913

    (408) declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .

    ID              reduce using rule 408 (declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .)
    R_BEGIN         reduce using rule 408 (declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .)


state 914

    (417) default_item -> default_opt expresion .

    S_PUNTOCOMA     reduce using rule 417 (default_item -> default_opt expresion .)


state 915

    (415) default_opt -> S_DOSPUNTOS S_IGUAL .

    S_PARIZQ        reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CASE          reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    O_RESTA         reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    O_SUMA          reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NOT           reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    ID              reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    INTEGER         reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    STRING          reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    DECIMAL         reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    CHARACTER       reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_TRUE          reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_FALSE         reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NULL          reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NOW           reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_COUNT         reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_SUM           reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_PROM          reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_EXTRACT       reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_DATE_PART     reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CURRENT_DATE  reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CURRENT_TIME  reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_EXISTS        reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_TIMESTAMP     reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_INTERVAL      reduce using rule 415 (default_opt -> S_DOSPUNTOS S_IGUAL .)


state 916

    (428) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE . ID S_PUNTOCOMA

    ID              shift and go to state 917


state 917

    (428) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 918


state 918

    (428) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .

    R_CREATE        reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_SHOW          reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_ALTER         reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_DROP          reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_INSERT        reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_DELETE        reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_USE           reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_SELECT        reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_EXECUTE       reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_IF            reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    ID              reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    $end            reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    S_PUNTOCOMA     reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_END           reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_RETURN        reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    S_DOLAR         reduce using rule 428 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_LIMIT in state 518 resolved as shift
WARNING: shift/reduce conflict for R_END in state 867 resolved as shift
WARNING: shift/reduce conflict for R_RETURN in state 867 resolved as shift
WARNING: shift/reduce conflict for ID in state 867 resolved as shift
WARNING: shift/reduce conflict for R_CREATE in state 867 resolved as shift
WARNING: shift/reduce conflict for R_SHOW in state 867 resolved as shift
WARNING: shift/reduce conflict for R_ALTER in state 867 resolved as shift
WARNING: shift/reduce conflict for R_DROP in state 867 resolved as shift
WARNING: shift/reduce conflict for R_INSERT in state 867 resolved as shift
WARNING: shift/reduce conflict for R_UPDATE in state 867 resolved as shift
WARNING: shift/reduce conflict for R_DELETE in state 867 resolved as shift
WARNING: shift/reduce conflict for R_TRUNCATE in state 867 resolved as shift
WARNING: shift/reduce conflict for R_USE in state 867 resolved as shift
WARNING: shift/reduce conflict for R_SELECT in state 867 resolved as shift
WARNING: shift/reduce conflict for S_PARIZQ in state 867 resolved as shift
WARNING: shift/reduce conflict for R_EXECUTE in state 867 resolved as shift
WARNING: shift/reduce conflict for R_IF in state 867 resolved as shift
WARNING: shift/reduce conflict for R_END in state 883 resolved as shift
WARNING: shift/reduce conflict for R_RETURN in state 883 resolved as shift
WARNING: shift/reduce conflict for ID in state 883 resolved as shift
WARNING: shift/reduce conflict for R_CREATE in state 883 resolved as shift
WARNING: shift/reduce conflict for R_SHOW in state 883 resolved as shift
WARNING: shift/reduce conflict for R_ALTER in state 883 resolved as shift
WARNING: shift/reduce conflict for R_DROP in state 883 resolved as shift
WARNING: shift/reduce conflict for R_INSERT in state 883 resolved as shift
WARNING: shift/reduce conflict for R_UPDATE in state 883 resolved as shift
WARNING: shift/reduce conflict for R_DELETE in state 883 resolved as shift
WARNING: shift/reduce conflict for R_TRUNCATE in state 883 resolved as shift
WARNING: shift/reduce conflict for R_USE in state 883 resolved as shift
WARNING: shift/reduce conflict for R_SELECT in state 883 resolved as shift
WARNING: shift/reduce conflict for S_PARIZQ in state 883 resolved as shift
WARNING: shift/reduce conflict for R_EXECUTE in state 883 resolved as shift
WARNING: shift/reduce conflict for R_IF in state 883 resolved as shift
WARNING: shift/reduce conflict for S_DOLAR in state 884 resolved as shift
WARNING: shift/reduce conflict for S_DOLAR in state 889 resolved as shift
WARNING: shift/reduce conflict for S_DOLAR in state 895 resolved as shift
WARNING: reduce/reduce conflict in state 518 resolved using rule (orderByCl -> <empty>)
WARNING: rejected rule (limitCl -> <empty>) in state 518
WARNING: reduce/reduce conflict in state 662 resolved using rule (expresion -> S_PARIZQ selectStmt S_PARDER)
WARNING: rejected rule (selectStmt -> S_PARIZQ selectStmt S_PARDER) in state 662
WARNING: reduce/reduce conflict in state 879 resolved using rule (stmt -> asignacionStmt S_PUNTOCOMA)
WARNING: rejected rule (beginItem -> asignacionStmt S_PUNTOCOMA) in state 879
WARNING: Rule (beginItem -> asignacionStmt S_PUNTOCOMA) is never reduced
